{
  "api/Global.ActionCondition_AnyCondition.html": {
    "href": "api/Global.ActionCondition_AnyCondition.html",
    "title": "Class ActionCondition_AnyCondition | Lofi City Documentation",
    "keywords": "Class ActionCondition_AnyCondition Namespace Global Assembly Assembly-CSharp.dll public class ActionCondition_AnyCondition : IActionCondition Inheritance object ActionCondition_AnyCondition Implements IActionCondition Constructors ActionCondition_AnyCondition(List<IActionCondition>) public ActionCondition_AnyCondition(List<IActionCondition> allActions) Parameters allActions List<IActionCondition> Fields _allActions private List<IActionCondition> _allActions Field Value List<IActionCondition> _onStatusChange private Action<IActionCondition, bool> _onStatusChange Field Value Action<IActionCondition, bool> Methods IsConditionMet() public bool IsConditionMet() Returns bool OnConditionMet(IActionCondition, bool) private void OnConditionMet(IActionCondition condition, bool status) Parameters condition IActionCondition status bool SubscribeToStatusChangeEvent(Action<IActionCondition, bool>) public void SubscribeToStatusChangeEvent(Action<IActionCondition, bool> method) Parameters method Action<IActionCondition, bool>"
  },
  "api/Global.ActionCondition_ItemInInventory.html": {
    "href": "api/Global.ActionCondition_ItemInInventory.html",
    "title": "Class ActionCondition_ItemInInventory | Lofi City Documentation",
    "keywords": "Class ActionCondition_ItemInInventory Namespace Global Assembly Assembly-CSharp.dll Checks if a list of items is available in an inventory. public class ActionCondition_ItemInInventory : IActionCondition Inheritance object ActionCondition_ItemInInventory Implements IActionCondition Constructors ActionCondition_ItemInInventory(IInventory, Dictionary<AddressableAsset_Item, int>) public ActionCondition_ItemInInventory(IInventory inventory, Dictionary<AddressableAsset_Item, int> itemsToCheck) Parameters inventory IInventory itemsToCheck Dictionary<AddressableAsset_Item, int> ActionCondition_ItemInInventory(IInventory, List<ItemWithQuantity>) public ActionCondition_ItemInInventory(IInventory inventory, List<ItemWithQuantity> itemsToCheck) Parameters inventory IInventory itemsToCheck List<ItemWithQuantity> Fields _currentStatus private bool _currentStatus Field Value bool _inventory private IInventory _inventory Field Value IInventory _onStatusChange private Action<IActionCondition, bool> _onStatusChange Field Value Action<IActionCondition, bool> _requirementsWithQuantity private Dictionary<Scriptable_Item, (int neededQty, int currentQty)> _requirementsWithQuantity Field Value Dictionary<Scriptable_Item, (int neededQty, int currentQty)> Methods IsConditionMet() public bool IsConditionMet() Returns bool OnInventoryUpdate(Scriptable_Item, int) private void OnInventoryUpdate(Scriptable_Item item, int currentQuantity) Parameters item Scriptable_Item currentQuantity int Setup(IInventory, List<ItemWithQuantity>) private void Setup(IInventory inventory, List<ItemWithQuantity> itemsToCheck) Parameters inventory IInventory itemsToCheck List<ItemWithQuantity> SubscribeToStatusChangeEvent(Action<IActionCondition, bool>) public void SubscribeToStatusChangeEvent(Action<IActionCondition, bool> method) Parameters method Action<IActionCondition, bool>"
  },
  "api/Global.ActionCondition_ItemsSold.html": {
    "href": "api/Global.ActionCondition_ItemsSold.html",
    "title": "Class ActionCondition_ItemsSold | Lofi City Documentation",
    "keywords": "Class ActionCondition_ItemsSold Namespace Global Assembly Assembly-CSharp.dll public class ActionCondition_ItemsSold : IActionCondition Inheritance object ActionCondition_ItemsSold Implements IActionCondition Constructors ActionCondition_ItemsSold(int) public ActionCondition_ItemsSold(int coinsNeeded) Parameters coinsNeeded int Fields _cart private ItemSellingSystem _cart Field Value ItemSellingSystem _coinsEarned private int _coinsEarned Field Value int _coinsNeeded private int _coinsNeeded Field Value int _onStatusChange private Action<IActionCondition, bool> _onStatusChange Field Value Action<IActionCondition, bool> Methods IsConditionMet() public bool IsConditionMet() Returns bool OnItemSold((Scriptable_Item item, int price, int quantity)) public void OnItemSold((Scriptable_Item item, int price, int quantity) itemSold) Parameters itemSold (Scriptable_Item item, int price, int quantity) SetCart(CartData) public void SetCart(CartData cart) Parameters cart CartData SubscribeToStatusChangeEvent(Action<IActionCondition, bool>) public void SubscribeToStatusChangeEvent(Action<IActionCondition, bool> method) Parameters method Action<IActionCondition, bool>"
  },
  "api/Global.ActionCondition_MachineAdded.html": {
    "href": "api/Global.ActionCondition_MachineAdded.html",
    "title": "Class ActionCondition_MachineAdded | Lofi City Documentation",
    "keywords": "Class ActionCondition_MachineAdded Namespace Global Assembly Assembly-CSharp.dll public class ActionCondition_MachineAdded : IActionCondition Inheritance object ActionCondition_MachineAdded Implements IActionCondition Constructors ActionCondition_MachineAdded(IMachineNetwork, List<Scriptable_Machine>) public ActionCondition_MachineAdded(IMachineNetwork network, List<Scriptable_Machine> machinesRequired) Parameters network IMachineNetwork machinesRequired List<Scriptable_Machine> ActionCondition_MachineAdded(IMachineNetwork, List<AssetReference>) public ActionCondition_MachineAdded(IMachineNetwork network, List<AssetReference> machinesReferences) Parameters network IMachineNetwork machinesReferences List<AssetReference> Fields _machinesRequired private List<Scriptable_Machine> _machinesRequired Field Value List<Scriptable_Machine> _network private IMachineNetwork _network Field Value IMachineNetwork _onStatusChange private Action<IActionCondition, bool> _onStatusChange Field Value Action<IActionCondition, bool> Methods IsConditionMet() public bool IsConditionMet() Returns bool OnMachineAdded(NetworkedMachineBase) public void OnMachineAdded(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase SubscribeToStatusChangeEvent(Action<IActionCondition, bool>) public void SubscribeToStatusChangeEvent(Action<IActionCondition, bool> method) Parameters method Action<IActionCondition, bool>"
  },
  "api/Global.ActionCondition_MultipleConditions.html": {
    "href": "api/Global.ActionCondition_MultipleConditions.html",
    "title": "Class ActionCondition_MultipleConditions | Lofi City Documentation",
    "keywords": "Class ActionCondition_MultipleConditions Namespace Global Assembly Assembly-CSharp.dll public class ActionCondition_MultipleConditions : IActionCondition Inheritance object ActionCondition_MultipleConditions Implements IActionCondition Constructors ActionCondition_MultipleConditions(List<IActionCondition>) public ActionCondition_MultipleConditions(List<IActionCondition> allActions) Parameters allActions List<IActionCondition> Fields _allActions private List<IActionCondition> _allActions Field Value List<IActionCondition> _onStatusChange private Action<IActionCondition, bool> _onStatusChange Field Value Action<IActionCondition, bool> Methods IsConditionMet() public bool IsConditionMet() Returns bool OnConditionMet(IActionCondition, bool) private void OnConditionMet(IActionCondition condition, bool status) Parameters condition IActionCondition status bool SubscribeToStatusChangeEvent(Action<IActionCondition, bool>) public void SubscribeToStatusChangeEvent(Action<IActionCondition, bool> method) Parameters method Action<IActionCondition, bool>"
  },
  "api/Global.ActionRegistrationSourceGenerator.html": {
    "href": "api/Global.ActionRegistrationSourceGenerator.html",
    "title": "Class ActionRegistrationSourceGenerator | Lofi City Documentation",
    "keywords": "Class ActionRegistrationSourceGenerator Namespace Global Assembly YarnSpinner.Unity.SourceCodeGenerator.dll [Generator] public class ActionRegistrationSourceGenerator Inheritance object ActionRegistrationSourceGenerator Fields DebugLoggingPreprocessorSymbol private const string DebugLoggingPreprocessorSymbol = \"YARN_SOURCE_GENERATION_DEBUG_LOGGING\" Field Value string YarnSpinnerUnityAssemblyName private const string YarnSpinnerUnityAssemblyName = \"YarnSpinner.Unity\" Field Value string Methods DumpGeneratedFile(GeneratorExecutionContext, string) public void DumpGeneratedFile(GeneratorExecutionContext context, string text) Parameters context GeneratorExecutionContext text string Execute(GeneratorExecutionContext) Called to perform source generation. A generator can use the context to add source files via the AddSource(string, SourceText) method. public void Execute(GeneratorExecutionContext context) Parameters context GeneratorExecutionContext The GeneratorExecutionContext to add source to Remarks This call represents the main generation step. It is called after a Compilation is created that contains the user written code. A generator can use the Compilation property to discover information about the users compilation and make decisions on what source to provide. GenerateLoggingMethod(string, string, string) private MethodDeclarationSyntax GenerateLoggingMethod(string methodName, string sourceExpression, string prefix) Parameters methodName string sourceExpression string prefix string Returns MethodDeclarationSyntax GenerateSingleLogMethod(string, string, string) public static MethodDeclarationSyntax GenerateSingleLogMethod(string methodName, string text, string prefix) Parameters methodName string text string prefix string Returns MethodDeclarationSyntax GetOutput(GeneratorExecutionContext) public ILogger GetOutput(GeneratorExecutionContext context) Parameters context GeneratorExecutionContext Returns ILogger GetShouldLogToFile(GeneratorExecutionContext) private static bool GetShouldLogToFile(GeneratorExecutionContext context) Parameters context GeneratorExecutionContext Returns bool Initialize(GeneratorInitializationContext) Called before generation occurs. A generator can use the context to register callbacks required to perform generation. public void Initialize(GeneratorInitializationContext context) Parameters context GeneratorInitializationContext The GeneratorInitializationContext to register callbacks on"
  },
  "api/Global.ActiveCraftingRequest.html": {
    "href": "api/Global.ActiveCraftingRequest.html",
    "title": "Class ActiveCraftingRequest | Lofi City Documentation",
    "keywords": "Class ActiveCraftingRequest Namespace Global Assembly Assembly-CSharp.dll Stores the data for a crafting request being processed by a machine public class ActiveCraftingRequest Inheritance object ActiveCraftingRequest Constructors ActiveCraftingRequest(Scriptable_CraftingRecipe, NetworkedMachine_Craft) public ActiveCraftingRequest(Scriptable_CraftingRecipe recipe, NetworkedMachine_Craft machineBeingUsed) Parameters recipe Scriptable_CraftingRecipe machineBeingUsed NetworkedMachine_Craft Fields _machineBeingUsed private NetworkedMachine_Craft _machineBeingUsed Field Value NetworkedMachine_Craft _recipe private Scriptable_CraftingRecipe _recipe Field Value Scriptable_CraftingRecipe _timeSlot private TimeSlot _timeSlot Field Value TimeSlot Properties MachineBeingUsed public NetworkedMachine_Craft MachineBeingUsed { get; } Property Value NetworkedMachine_Craft Recipe public Scriptable_CraftingRecipe Recipe { get; } Property Value Scriptable_CraftingRecipe TimeSlot public TimeSlot TimeSlot { get; set; } Property Value TimeSlot"
  },
  "api/Global.AddSceneObjectsToObjectLayer.html": {
    "href": "api/Global.AddSceneObjectsToObjectLayer.html",
    "title": "Class AddSceneObjectsToObjectLayer | Lofi City Documentation",
    "keywords": "Class AddSceneObjectsToObjectLayer Namespace Global Assembly Assembly-CSharp.dll Gets any GameObjects placed in a scene and adds them to the object layer. public class AddSceneObjectsToObjectLayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AddSceneObjectsToObjectLayer Fields _layer private ObjectLayerBase _layer Field Value ObjectLayerBase Methods AddChildren(Transform) private void AddChildren(Transform childTransform) Parameters childTransform Transform Start() private void Start()"
  },
  "api/Global.AddressableAsset_Item.html": {
    "href": "api/Global.AddressableAsset_Item.html",
    "title": "Class AddressableAsset_Item | Lofi City Documentation",
    "keywords": "Class AddressableAsset_Item Namespace Global Assembly Assembly-CSharp.dll [Serializable] public class AddressableAsset_Item : AssetReferenceT<Scriptable_Item> Inheritance object AssetReference AssetReferenceT<Scriptable_Item> AddressableAsset_Item Constructors AddressableAsset_Item(string) public AddressableAsset_Item(string guid) Parameters guid string"
  },
  "api/Global.AllSceneLayers.html": {
    "href": "api/Global.AllSceneLayers.html",
    "title": "Class AllSceneLayers | Lofi City Documentation",
    "keywords": "Class AllSceneLayers Namespace Global Assembly Assembly-CSharp.dll List of all scene layers in child objects. Retreives the needed Scene Layer or grid object based on the Z Position. public class AllSceneLayers : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AllSceneLayers Fields _allLayers private List<SceneLayer> _allLayers Field Value List<SceneLayer> Properties AllLayers public List<SceneLayer> AllLayers { get; } Property Value List<SceneLayer> Methods Awake() private void Awake() GetLayerAboveZPosition(int) public SceneLayer GetLayerAboveZPosition(int zPosition) Parameters zPosition int Returns SceneLayer GetLayerAtZPosition(int) public SceneLayer GetLayerAtZPosition(int zPosition) Parameters zPosition int Returns SceneLayer GetLayerBelowZPosition(int) public SceneLayer GetLayerBelowZPosition(int zPosition) Parameters zPosition int Returns SceneLayer GetObjectAboveZPosition(Vector3, Enum_ObjectLayerType) public (int, GridObject) GetObjectAboveZPosition(Vector3 position, Enum_ObjectLayerType objectLayerType) Parameters position Vector3 objectLayerType Enum_ObjectLayerType Returns (int, GridObject) GetObjectAtPosition(Vector3, Enum_ObjectLayerType) public GridObject GetObjectAtPosition(Vector3 position, Enum_ObjectLayerType objectLayerType) Parameters position Vector3 objectLayerType Enum_ObjectLayerType Returns GridObject GetObjectBelowPosition(Vector3, Enum_ObjectLayerType) public (int, GridObject) GetObjectBelowPosition(Vector3 position, Enum_ObjectLayerType objectLayer) Parameters position Vector3 objectLayer Enum_ObjectLayerType Returns (int, GridObject) GetObjectLayersOfType(Enum_ObjectLayerType) public List<ObjectLayerBase> GetObjectLayersOfType(Enum_ObjectLayerType objectLayerType) Parameters objectLayerType Enum_ObjectLayerType Returns List<ObjectLayerBase> SetLayers() private void SetLayers()"
  },
  "api/Global.AllSchedules-1.html": {
    "href": "api/Global.AllSchedules-1.html",
    "title": "Class AllSchedules<T> | Lofi City Documentation",
    "keywords": "Class AllSchedules<T> Namespace Global Assembly Assembly-CSharp.dll [Serializable] public class AllSchedules<T> Type Parameters T Inheritance object AllSchedules<T> Fields _allSchedules [SerializeField] private List<Scriptable_Schedule<T>> _allSchedules Field Value List<Scriptable_Schedule<T>> Methods GetFirstValidSchedule(SpecificDateAndTime) public Scriptable_Schedule<T> GetFirstValidSchedule(SpecificDateAndTime date) Parameters date SpecificDateAndTime Returns Scriptable_Schedule<T>"
  },
  "api/Global.AttractCustomers.html": {
    "href": "api/Global.AttractCustomers.html",
    "title": "Class AttractCustomers | Lofi City Documentation",
    "keywords": "Class AttractCustomers Namespace Global Assembly Assembly-CSharp.dll public class AttractCustomers : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AttractCustomers Fields _cart [SerializeField] private Scriptable_Attraction _cart Field Value Scriptable_Attraction _cartData [SerializeField] private CartData _cartData Field Value CartData _collider [SerializeField] private BoxCollider2D _collider Field Value BoxCollider2D Methods OnChangeOpenStatus(bool) private void OnChangeOpenStatus(bool isOpen) Parameters isOpen bool OnTriggerEnter2D(Collider2D) private void OnTriggerEnter2D(Collider2D collision) Parameters collision Collider2D Start() private void Start()"
  },
  "api/Global.AttractionBase.html": {
    "href": "api/Global.AttractionBase.html",
    "title": "Class AttractionBase | Lofi City Documentation",
    "keywords": "Class AttractionBase Namespace Global Assembly Assembly-CSharp.dll Game Objects that act as points of interest for NPCs to go to and stay at. public abstract class AttractionBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AttractionBase Derived Work_Attraction Fields _centralPosition [SerializeField] private Vector3Int _centralPosition Field Value Vector3Int _placeType protected Enum_ActivityType _placeType Field Value Enum_ActivityType Properties CentralPosition public Vector3Int CentralPosition { get; set; } Property Value Vector3Int PlaceType public Enum_ActivityType PlaceType { get; } Property Value Enum_ActivityType Methods GetAttractionScore() public abstract int GetAttractionScore() Returns int"
  },
  "api/Global.AttractionObject.html": {
    "href": "api/Global.AttractionObject.html",
    "title": "Class AttractionObject | Lofi City Documentation",
    "keywords": "Class AttractionObject Namespace Global Assembly Assembly-CSharp.dll Game Objects that act as points of interest for NPCs to go to and stay at. Registers points so that only one NPC can be at each point. public class AttractionObject : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AttractionObject Fields _attractionElements [SerializeField] private List<SerializableInterface<IPointOfInterest>> _attractionElements Field Value List<SerializableInterface<IPointOfInterest>> _centralPosition [SerializeField] private Vector3Int _centralPosition Field Value Vector3Int _isAttractionReserved private Dictionary<IPointOfInterest, GameObject> _isAttractionReserved Field Value Dictionary<IPointOfInterest, GameObject> _placeType [SerializeField] private Scriptable_Attraction _placeType Field Value Scriptable_Attraction Properties CentralPosition public Vector3Int CentralPosition { get; set; } Property Value Vector3Int PlaceType public Scriptable_Attraction PlaceType { get; } Property Value Scriptable_Attraction Methods Awake() private void Awake() ForceRegister(GameObject) public IPointOfInterest ForceRegister(GameObject character) Parameters character GameObject Returns IPointOfInterest OnNPCLeave(NPC_MovementBase) private void OnNPCLeave(NPC_MovementBase npc) Parameters npc NPC_MovementBase Register(GameObject) public IPointOfInterest Register(GameObject character) Parameters character GameObject Returns IPointOfInterest RegisterPoint(GameObject, IPointOfInterest) private void RegisterPoint(GameObject character, IPointOfInterest point) Parameters character GameObject point IPointOfInterest"
  },
  "api/Global.AttractionsData.SceneNode.html": {
    "href": "api/Global.AttractionsData.SceneNode.html",
    "title": "Class AttractionsData.SceneNode | Lofi City Documentation",
    "keywords": "Class AttractionsData.SceneNode Namespace Global Assembly Assembly-CSharp.dll private class AttractionsData.SceneNode Inheritance object AttractionsData.SceneNode Constructors SceneNode(Enum_SceneName, SceneNode) public SceneNode(Enum_SceneName sceneName, AttractionsData.SceneNode previousScene) Parameters sceneName Enum_SceneName previousScene AttractionsData.SceneNode Fields _previousScene private AttractionsData.SceneNode _previousScene Field Value AttractionsData.SceneNode _sceneName private Enum_SceneName _sceneName Field Value Enum_SceneName Properties PreviousScene public AttractionsData.SceneNode PreviousScene { get; } Property Value AttractionsData.SceneNode SceneName public Enum_SceneName SceneName { get; } Property Value Enum_SceneName"
  },
  "api/Global.AttractionsData.html": {
    "href": "api/Global.AttractionsData.html",
    "title": "Class AttractionsData | Lofi City Documentation",
    "keywords": "Class AttractionsData Namespace Global Assembly Assembly-CSharp.dll public class AttractionsData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AttractionsData Fields _attractionsData private Dictionary<Enum_ActivityType, Dictionary<Enum_SceneName, List<Scriptable_Attraction>>> _attractionsData Field Value Dictionary<Enum_ActivityType, Dictionary<Enum_SceneName, List<Scriptable_Attraction>>> _sceneData private Dictionary<Enum_SceneName, Scriptable_SceneData> _sceneData Field Value Dictionary<Enum_SceneName, Scriptable_SceneData> _scenePaths private Dictionary<Enum_SceneName, Dictionary<Enum_SceneName, List<Enum_SceneName>>> _scenePaths Field Value Dictionary<Enum_SceneName, Dictionary<Enum_SceneName, List<Enum_SceneName>>> _scenes [SerializeField] private List<Scriptable_SceneData> _scenes Field Value List<Scriptable_SceneData> Methods Awake() private void Awake() CalculatePathToScene(Enum_SceneName, Enum_SceneName) private List<Enum_SceneName> CalculatePathToScene(Enum_SceneName startScene, Enum_SceneName endScene) Parameters startScene Enum_SceneName endScene Enum_SceneName Returns List<Enum_SceneName> GetAttractionsofType(Enum_ActivityType) public Dictionary<Enum_SceneName, List<Scriptable_Attraction>> GetAttractionsofType(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns Dictionary<Enum_SceneName, List<Scriptable_Attraction>> GetPathToScene(Enum_SceneName, Enum_SceneName) public List<Enum_SceneName> GetPathToScene(Enum_SceneName startScene, Enum_SceneName endScene) Parameters startScene Enum_SceneName endScene Enum_SceneName Returns List<Enum_SceneName>"
  },
  "api/Global.AttractionsInScene.html": {
    "href": "api/Global.AttractionsInScene.html",
    "title": "Class AttractionsInScene | Lofi City Documentation",
    "keywords": "Class AttractionsInScene Namespace Global Assembly Assembly-CSharp.dll Stores all attractions and scene exits in a particular scene. public class AttractionsInScene : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AttractionsInScene Fields _attractionsInScene [SerializeField] private InspectableDictionary<Scriptable_Attraction, AttractionObject> _attractionsInScene Field Value InspectableDictionary<Scriptable_Attraction, AttractionObject> _generalEntryPoints [SerializeField] private List<SerializableInterface<IPointOfInterest>> _generalEntryPoints Field Value List<SerializableInterface<IPointOfInterest>> _random private Random _random Field Value Random _sceneEntrances [SerializeField] private InspectableDictionary<Enum_SceneName, SerializableInterface<IPointOfInterest>> _sceneEntrances Field Value InspectableDictionary<Enum_SceneName, SerializableInterface<IPointOfInterest>> _sceneExits [SerializeField] private InspectableDictionary<Enum_SceneName, SerializableInterface<IPointOfInterest>> _sceneExits Field Value InspectableDictionary<Enum_SceneName, SerializableInterface<IPointOfInterest>> _validSpawnPositions private List<Vector3Int> _validSpawnPositions Field Value List<Vector3Int> Methods AddAttraction(Scriptable_Attraction, AttractionObject) public void AddAttraction(Scriptable_Attraction attraction, AttractionObject attractionObject) Parameters attraction Scriptable_Attraction attractionObject AttractionObject GetAllEntrances() public List<IPointOfInterest> GetAllEntrances() Returns List<IPointOfInterest> GetAllExits() public List<IPointOfInterest> GetAllExits() Returns List<IPointOfInterest> GetAttraction(Scriptable_Attraction) public AttractionObject GetAttraction(Scriptable_Attraction attractionData) Parameters attractionData Scriptable_Attraction Returns AttractionObject GetAttractionsOfType(Enum_ActivityType) public List<Scriptable_Attraction> GetAttractionsOfType(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns List<Scriptable_Attraction> GetSceneEntrance(Enum_SceneName) public IPointOfInterest GetSceneEntrance(Enum_SceneName sceneName) Parameters sceneName Enum_SceneName Returns IPointOfInterest GetSceneExit(Enum_SceneName) public IPointOfInterest GetSceneExit(Enum_SceneName sceneName) Parameters sceneName Enum_SceneName Returns IPointOfInterest RemoveAttraction(Scriptable_Attraction) public void RemoveAttraction(Scriptable_Attraction attraction) Parameters attraction Scriptable_Attraction"
  },
  "api/Global.AudioManager.html": {
    "href": "api/Global.AudioManager.html",
    "title": "Class AudioManager | Lofi City Documentation",
    "keywords": "Class AudioManager Namespace Global Assembly Assembly-CSharp.dll public class AudioManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour AudioManager Fields _music [SerializeField] private AudioSource _music Field Value AudioSource _musicFade [SerializeField] private float _musicFade Field Value float _soundEffects [SerializeField] private AudioSource _soundEffects Field Value AudioSource Methods FadeMusic(AudioClip) public IEnumerator FadeMusic(AudioClip musicClip) Parameters musicClip AudioClip Returns IEnumerator PlayMusic(AudioClip) public void PlayMusic(AudioClip musicClip) Parameters musicClip AudioClip PlaySoundEffect(AudioClip) public void PlaySoundEffect(AudioClip soundClip) Parameters soundClip AudioClip"
  },
  "api/Global.CartData.html": {
    "href": "api/Global.CartData.html",
    "title": "Class CartData | Lofi City Documentation",
    "keywords": "Class CartData Namespace Global Assembly Assembly-CSharp.dll Used to connect the UI to the cart object. Allows for opening and closing the shop. public class CartData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CartData Fields _attractions private AttractionsInScene _attractions Field Value AttractionsInScene _cartAttraction [SerializeField] private AttractionObject _cartAttraction Field Value AttractionObject _cartInventory [SerializeField] private CartInventory _cartInventory Field Value CartInventory _data [SerializeField] private Scriptable_CartData _data Field Value Scriptable_CartData _hagglingSystem [SerializeField] private HagglingSystem _hagglingSystem Field Value HagglingSystem _hud private HUDController _hud Field Value HUDController _isOpen private bool _isOpen Field Value bool _onChangeOpen private Action<bool> _onChangeOpen Field Value Action<bool> _placableCart [SerializeField] private AddressableAsset_Item _placableCart Field Value AddressableAsset_Item _queue [SerializeField] private CustomerQueue _queue Field Value CustomerQueue _sellingSystem [SerializeField] private ItemSellingSystem _sellingSystem Field Value ItemSellingSystem Properties CartInventory public CartInventory CartInventory { get; } Property Value CartInventory Data public Scriptable_CartData Data { get; } Property Value Scriptable_CartData HagglingSystem public HagglingSystem HagglingSystem { get; } Property Value HagglingSystem IsOpen public bool IsOpen { get; } Property Value bool Queue public CustomerQueue Queue { get; } Property Value CustomerQueue SellingSystem public ItemSellingSystem SellingSystem { get; } Property Value ItemSellingSystem Methods ClearCart() public void ClearCart() Close() public void Close() OnTriggerEnter2D(Collider2D) private void OnTriggerEnter2D(Collider2D collision) Parameters collision Collider2D OnTriggerExit2D(Collider2D) private void OnTriggerExit2D(Collider2D collision) Parameters collision Collider2D Open() public void Open() Start() public void Start() SubscribeToChangeInOpenStatus(Action<bool>) public void SubscribeToChangeInOpenStatus(Action<bool> action) Parameters action Action<bool>"
  },
  "api/Global.CartInventory.html": {
    "href": "api/Global.CartInventory.html",
    "title": "Class CartInventory | Lofi City Documentation",
    "keywords": "Class CartInventory Namespace Global Assembly Assembly-CSharp.dll Store the items being sold in a cart using a slot based system. Also stores the price of each item. public class CartInventory : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CartInventory Fields _changeInPrice private Action<Scriptable_SellableItem, (int, bool)> _changeInPrice Field Value Action<Scriptable_SellableItem, (int, bool)> _changeInSlot private Action<int, ItemWithQuantity> _changeInSlot Field Value Action<int, ItemWithQuantity> _inventorySlots private ItemWithQuantity[] _inventorySlots Field Value ItemWithQuantity[] _itemPriceList private Dictionary<Scriptable_SellableItem, (int, bool)> _itemPriceList Field Value Dictionary<Scriptable_SellableItem, (int, bool)> _tables private List<ItemDisplayTable> _tables Field Value List<ItemDisplayTable> Properties ItemPriceList public Dictionary<Scriptable_SellableItem, (int, bool)> ItemPriceList { get; } Property Value Dictionary<Scriptable_SellableItem, (int, bool)> Methods AddToInventory(Scriptable_SellableItem, int, int) public int AddToInventory(Scriptable_SellableItem item, int quantity, int slot) Parameters item Scriptable_SellableItem quantity int slot int Returns int ClearInventory() public void ClearInventory() ClearSlot(int) public ItemWithQuantity ClearSlot(int slot) Parameters slot int Returns ItemWithQuantity GetAllItems() public List<Scriptable_SellableItem> GetAllItems() Returns List<Scriptable_SellableItem> GetAllItemsWithQuantity() public List<ItemWithQuantity> GetAllItemsWithQuantity() Returns List<ItemWithQuantity> GetPrice(Scriptable_SellableItem) public (int, bool) GetPrice(Scriptable_SellableItem slot) Parameters slot Scriptable_SellableItem Returns (int, bool) GetSlot(int) public ItemWithQuantity GetSlot(int slot) Parameters slot int Returns ItemWithQuantity GetSlotsContainingItem(Scriptable_Item) public List<int> GetSlotsContainingItem(Scriptable_Item item) Parameters item Scriptable_Item Returns List<int> QuantityInInventory(Scriptable_Item) public int QuantityInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns int RemoveFromInventory(Scriptable_Item, int) public void RemoveFromInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int SetItem(Scriptable_SellableItem, int, IInventory) public void SetItem(Scriptable_SellableItem item, int slot, IInventory fromInventory) Parameters item Scriptable_SellableItem slot int fromInventory IInventory SetPrice(bool, Scriptable_SellableItem) public void SetPrice(bool haggle, Scriptable_SellableItem item) Parameters haggle bool item Scriptable_SellableItem SetPrice(int, Scriptable_SellableItem) public void SetPrice(int price, Scriptable_SellableItem item) Parameters price int item Scriptable_SellableItem Setup(List<ItemDisplayTable>) public void Setup(List<ItemDisplayTable> tables) Parameters tables List<ItemDisplayTable> SubscribeToChangeInSlot(Action<int, ItemWithQuantity>) public void SubscribeToChangeInSlot(Action<int, ItemWithQuantity> actionOnAddition) Parameters actionOnAddition Action<int, ItemWithQuantity>"
  },
  "api/Global.CategorySpecificAttributes.html": {
    "href": "api/Global.CategorySpecificAttributes.html",
    "title": "Class CategorySpecificAttributes | Lofi City Documentation",
    "keywords": "Class CategorySpecificAttributes Namespace Global Assembly Assembly-CSharp.dll public class CategorySpecificAttributes Inheritance object CategorySpecificAttributes"
  },
  "api/Global.ChangeSortingLayer.html": {
    "href": "api/Global.ChangeSortingLayer.html",
    "title": "Class ChangeSortingLayer | Lofi City Documentation",
    "keywords": "Class ChangeSortingLayer Namespace Global Assembly Assembly-CSharp.dll public class ChangeSortingLayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ChangeSortingLayer Derived PlayerSortingLayer Fields _currentLayer private SceneLayer _currentLayer Field Value SceneLayer _renderer [SerializeField] private SortingGroup _renderer Field Value SortingGroup Methods OnSceneLayerChange(SceneLayer) public void OnSceneLayerChange(SceneLayer newLayer) Parameters newLayer SceneLayer OnStepChange(int) public void OnStepChange(int step) Parameters step int"
  },
  "api/Global.ClassDeclarationSyntaxReceiver.html": {
    "href": "api/Global.ClassDeclarationSyntaxReceiver.html",
    "title": "Class ClassDeclarationSyntaxReceiver | Lofi City Documentation",
    "keywords": "Class ClassDeclarationSyntaxReceiver Namespace Global Assembly YarnSpinner.Unity.SourceCodeGenerator.dll internal class ClassDeclarationSyntaxReceiver Inheritance object ClassDeclarationSyntaxReceiver Properties Classes public List<ClassDeclarationSyntax> Classes { get; private set; } Property Value List<ClassDeclarationSyntax> Methods OnVisitSyntaxNode(SyntaxNode) Called for each SyntaxNode in the compilation public void OnVisitSyntaxNode(SyntaxNode syntaxNode) Parameters syntaxNode SyntaxNode The current SyntaxNode being visited"
  },
  "api/Global.CorruptedPlant.html": {
    "href": "api/Global.CorruptedPlant.html",
    "title": "Class CorruptedPlant | Lofi City Documentation",
    "keywords": "Class CorruptedPlant Namespace Global Assembly Assembly-CSharp.dll A plant that can clean an area around it, if it is not polluted. public class CorruptedPlant : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CorruptedPlant Fields _cleanRange [SerializeField] private int _cleanRange Field Value int _ecosystemLayer private ObjectLayerBase _ecosystemLayer Field Value ObjectLayerBase _isClean [SerializeField] private bool _isClean Field Value bool _wasCleaned private Action _wasCleaned Field Value Action Properties IsClean public bool IsClean { get; } Property Value bool Methods ClearRange() private void ClearRange() SetClean() public void SetClean() Start() private void Start() SubscribeToPlantCleaned(Action) public void SubscribeToPlantCleaned(Action action) Parameters action Action TileUnderChanged(GridObject) private void TileUnderChanged(GridObject tile) Parameters tile GridObject"
  },
  "api/Global.CraftingRequestController.html": {
    "href": "api/Global.CraftingRequestController.html",
    "title": "Class CraftingRequestController | Lofi City Documentation",
    "keywords": "Class CraftingRequestController Namespace Global Assembly Assembly-CSharp.dll Manages pending and active crafting requests, and assigning machines to them. public class CraftingRequestController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CraftingRequestController Fields _activeRequestAdded private Action<PendingCraftingRequest, ActiveCraftingRequest> _activeRequestAdded Field Value Action<PendingCraftingRequest, ActiveCraftingRequest> _activeRequests private List<ActiveCraftingRequest> _activeRequests Field Value List<ActiveCraftingRequest> _connectedMachines [SerializeField] private MachineNetwork_Craft _connectedMachines Field Value MachineNetwork_Craft _inventory [SerializeField] private SerializableInterface<IInventory> _inventory Field Value SerializableInterface<IInventory> _onConvertRequestValid private Action<PendingCraftingRequest> _onConvertRequestValid Field Value Action<PendingCraftingRequest> _onCraftingRequestComplete private Action<ActiveCraftingRequest> _onCraftingRequestComplete Field Value Action<ActiveCraftingRequest> _onMachineAdded private Action<NetworkedMachineBase> _onMachineAdded Field Value Action<NetworkedMachineBase> _onMachineRemoved private Action<NetworkedMachineBase> _onMachineRemoved Field Value Action<NetworkedMachineBase> _pendingRequestAdded private Action<PendingCraftingRequest> _pendingRequestAdded Field Value Action<PendingCraftingRequest> _pendingRequests private Dictionary<Scriptable_Machine, List<PendingCraftingRequest>> _pendingRequests Field Value Dictionary<Scriptable_Machine, List<PendingCraftingRequest>> _requestCompleted private Action<ActiveCraftingRequest> _requestCompleted Field Value Action<ActiveCraftingRequest> _scheduler [SerializeField] private ScheduleEvent _scheduler Field Value ScheduleEvent _timeManager [SerializeField] private DateTimeManager _timeManager Field Value DateTimeManager Properties ActiveRequests public List<ActiveCraftingRequest> ActiveRequests { get; set; } Property Value List<ActiveCraftingRequest> PendingRequests public Dictionary<Scriptable_Machine, List<PendingCraftingRequest>> PendingRequests { get; set; } Property Value Dictionary<Scriptable_Machine, List<PendingCraftingRequest>> Methods AddCraftingRequest(Scriptable_CraftingMachine, Scriptable_CraftingRecipe, int) public void AddCraftingRequest(Scriptable_CraftingMachine machineType, Scriptable_CraftingRecipe recipe, int numberOfRequests) Parameters machineType Scriptable_CraftingMachine recipe Scriptable_CraftingRecipe numberOfRequests int Awake() private void Awake() GetQuantityOfRequests(Scriptable_CraftingRecipe) public int GetQuantityOfRequests(Scriptable_CraftingRecipe recipe) Parameters recipe Scriptable_CraftingRecipe Returns int HandleRequestCompleted(ActiveCraftingRequest) private void HandleRequestCompleted(ActiveCraftingRequest recentlyCompleted) Parameters recentlyCompleted ActiveCraftingRequest OnNetworkMachineRemoved(NetworkedMachineBase) public void OnNetworkMachineRemoved(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase SetActiveRequest(NetworkedMachine_Craft, PendingCraftingRequest) private void SetActiveRequest(NetworkedMachine_Craft machine, PendingCraftingRequest request) Parameters machine NetworkedMachine_Craft request PendingCraftingRequest SubscribeToActiveRequestAdded(Action<PendingCraftingRequest, ActiveCraftingRequest>) public void SubscribeToActiveRequestAdded(Action<PendingCraftingRequest, ActiveCraftingRequest> action) Parameters action Action<PendingCraftingRequest, ActiveCraftingRequest> SubscribeToActiveRequestCompleted(Action<ActiveCraftingRequest>) public void SubscribeToActiveRequestCompleted(Action<ActiveCraftingRequest> action) Parameters action Action<ActiveCraftingRequest> SubscribeToPendingRequestAdded(Action<PendingCraftingRequest>) public void SubscribeToPendingRequestAdded(Action<PendingCraftingRequest> action) Parameters action Action<PendingCraftingRequest> TryFillingMachine(NetworkedMachineBase) private void TryFillingMachine(NetworkedMachineBase availableMachine) Parameters availableMachine NetworkedMachineBase TryRunningRequest(PendingCraftingRequest) private void TryRunningRequest(PendingCraftingRequest craftingRequest) Parameters craftingRequest PendingCraftingRequest"
  },
  "api/Global.CurrentSaveSlot.html": {
    "href": "api/Global.CurrentSaveSlot.html",
    "title": "Class CurrentSaveSlot | Lofi City Documentation",
    "keywords": "Class CurrentSaveSlot Namespace Global Assembly Assembly-CSharp.dll Stores global information about the current save slot internal static class CurrentSaveSlot Inheritance object CurrentSaveSlot Fields SaveSlot public static string SaveSlot Field Value string"
  },
  "api/Global.CurrentSceneData.html": {
    "href": "api/Global.CurrentSceneData.html",
    "title": "Class CurrentSceneData | Lofi City Documentation",
    "keywords": "Class CurrentSceneData Namespace Global Assembly Assembly-CSharp.dll A Singleton storing scene specific data. public class CurrentSceneData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CurrentSceneData Fields _attractions [SerializeField] private AttractionsInScene _attractions Field Value AttractionsInScene _npcSpawner [SerializeField] private NamedNPC_Spawner _npcSpawner Field Value NamedNPC_Spawner _sceneLayers [SerializeField] private AllSceneLayers _sceneLayers Field Value AllSceneLayers _sceneName [SerializeField] private Enum_SceneName _sceneName Field Value Enum_SceneName _sceneSaving [SerializeField] private SceneSaving _sceneSaving Field Value SceneSaving Properties Attractions public AttractionsInScene Attractions { get; } Property Value AttractionsInScene Instance public static CurrentSceneData Instance { get; private set; } Property Value CurrentSceneData NPCSpawner public NamedNPC_Spawner NPCSpawner { get; } Property Value NamedNPC_Spawner SceneLayers public AllSceneLayers SceneLayers { get; } Property Value AllSceneLayers SceneName public Enum_SceneName SceneName { get; } Property Value Enum_SceneName SceneSaving public SceneSaving SceneSaving { get; } Property Value SceneSaving Methods Awake() private void Awake()"
  },
  "api/Global.Customer.html": {
    "href": "api/Global.Customer.html",
    "title": "Class Customer | Lofi City Documentation",
    "keywords": "Class Customer Namespace Global Assembly Assembly-CSharp.dll Stores the data about an NPC that is interacting with a Cart. public class Customer Inheritance object Customer Constructors Customer(List<(int, List<Enum_ItemAttributes>)>, int, Scriptable_Personality, Scriptable_Interest) public Customer(List<(int, List<Enum_ItemAttributes>)> itemScores, int budget, Scriptable_Personality personality, Scriptable_Interest interest) Parameters itemScores List<(int, List<Enum_ItemAttributes>)> budget int personality Scriptable_Personality interest Scriptable_Interest Fields _budget private int _budget Field Value int _interest private Scriptable_Interest _interest Field Value Scriptable_Interest _itemScores private List<(int, List<Enum_ItemAttributes>)> _itemScores Field Value List<(int, List<Enum_ItemAttributes>)> _personality private Scriptable_Personality _personality Field Value Scriptable_Personality _placeInQueue private PointOfInterest_CustomerQueue _placeInQueue Field Value PointOfInterest_CustomerQueue Properties Budget public int Budget { get; } Property Value int Interest public Scriptable_Interest Interest { get; } Property Value Scriptable_Interest ItemScores public List<(int, List<Enum_ItemAttributes>)> ItemScores { get; } Property Value List<(int, List<Enum_ItemAttributes>)> Personality public Scriptable_Personality Personality { get; } Property Value Scriptable_Personality PlaceInQueue public PointOfInterest_CustomerQueue PlaceInQueue { get; set; } Property Value PointOfInterest_CustomerQueue"
  },
  "api/Global.CustomerInQueue.html": {
    "href": "api/Global.CustomerInQueue.html",
    "title": "Class CustomerInQueue | Lofi City Documentation",
    "keywords": "Class CustomerInQueue Namespace Global Assembly Assembly-CSharp.dll Represents a customer waiting in the queue. public class CustomerInQueue Inheritance object CustomerInQueue Constructors CustomerInQueue(Customer, CustomerQueue, int) public CustomerInQueue(Customer customer, CustomerQueue queue, int slotIndex) Parameters customer Customer queue CustomerQueue slotIndex int Fields _customer private Customer _customer Field Value Customer _queue private CustomerQueue _queue Field Value CustomerQueue _slotIndex private int _slotIndex Field Value int _timeLeft private float _timeLeft Field Value float _waitingInQueue private Coroutine _waitingInQueue Field Value Coroutine Properties Customer public Customer Customer { get; } Property Value Customer SlotIndex public int SlotIndex { get; } Property Value int TimeLeft public float TimeLeft { get; } Property Value float WaitingInQueue public Coroutine WaitingInQueue { get; set; } Property Value Coroutine Methods WaitInQueue(int) public IEnumerator WaitInQueue(int wait) Parameters wait int Returns IEnumerator"
  },
  "api/Global.CustomerQueue.html": {
    "href": "api/Global.CustomerQueue.html",
    "title": "Class CustomerQueue | Lofi City Documentation",
    "keywords": "Class CustomerQueue Namespace Global Assembly Assembly-CSharp.dll Stores a queue of customers waiting to be served. Removes customers that have waited for too long. public class CustomerQueue : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour CustomerQueue Fields _customerAdded private Action<CustomerInQueue> _customerAdded Field Value Action<CustomerInQueue> _customerRemoved private Action<CustomerInQueue> _customerRemoved Field Value Action<CustomerInQueue> _maxQueueSize [SerializeField] private int _maxQueueSize Field Value int _nextCustomerSelected private Action<CustomerInQueue> _nextCustomerSelected Field Value Action<CustomerInQueue> _queue private List<CustomerInQueue> _queue Field Value List<CustomerInQueue> _sellingSystem [SerializeField] private ItemSellingSystem _sellingSystem Field Value ItemSellingSystem _waitTimeInQueue [SerializeField] private int _waitTimeInQueue Field Value int Properties Queue public List<CustomerInQueue> Queue { get; } Property Value List<CustomerInQueue> Methods AddToQueue(Customer, int) public CustomerInQueue AddToQueue(Customer customer, int slotIndex) Parameters customer Customer slotIndex int Returns CustomerInQueue GetNextCustomer() public void GetNextCustomer() RemoveFromQueue(CustomerInQueue) public void RemoveFromQueue(CustomerInQueue customer) Parameters customer CustomerInQueue SubscribeToCustomerAdded(Action<CustomerInQueue>) public void SubscribeToCustomerAdded(Action<CustomerInQueue> action) Parameters action Action<CustomerInQueue> SubscribeToCustomerRemoved(Action<CustomerInQueue>) public void SubscribeToCustomerRemoved(Action<CustomerInQueue> action) Parameters action Action<CustomerInQueue> SubscribeToNextCustomer(Action<CustomerInQueue>) public void SubscribeToNextCustomer(Action<CustomerInQueue> action) Parameters action Action<CustomerInQueue>"
  },
  "api/Global.DateTimeCondition.html": {
    "href": "api/Global.DateTimeCondition.html",
    "title": "Class DateTimeCondition | Lofi City Documentation",
    "keywords": "Class DateTimeCondition Namespace Global Assembly Assembly-CSharp.dll [Serializable] public class DateTimeCondition Inheritance object DateTimeCondition Fields _endTime [SerializeField] private TimeSlot _endTime Field Value TimeSlot _startTime [SerializeField] private TimeSlot _startTime Field Value TimeSlot _validDays [SerializeField] private List<Enum_DayOfTheWeek> _validDays Field Value List<Enum_DayOfTheWeek> _validGlobalDays [SerializeField] private List<int> _validGlobalDays Field Value List<int> Properties EndTime public TimeSlot EndTime { get; } Property Value TimeSlot StartTime public TimeSlot StartTime { get; } Property Value TimeSlot ValidDays public List<Enum_DayOfTheWeek> ValidDays { get; } Property Value List<Enum_DayOfTheWeek> ValidGlobalDays public List<int> ValidGlobalDays { get; } Property Value List<int> Methods IsProvidedDayValid(SpecificDateAndTime) public bool IsProvidedDayValid(SpecificDateAndTime givenDate) Parameters givenDate SpecificDateAndTime Returns bool"
  },
  "api/Global.DateTimeManager.html": {
    "href": "api/Global.DateTimeManager.html",
    "title": "Class DateTimeManager | Lofi City Documentation",
    "keywords": "Class DateTimeManager Namespace Global Assembly Assembly-CSharp.dll Stores and updates the current date and time. The global date ignores seasons and ranges from 0 to 111. public class DateTimeManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DateTimeManager Fields _dayUpdated [SerializeField] private UnityEvent<int> _dayUpdated Field Value UnityEvent<int> _globalDay private int _globalDay Field Value int _hours [SerializeField] private int _hours Field Value int _isTimeMoving private bool _isTimeMoving Field Value bool _jumpInMinutes [SerializeField] private int _jumpInMinutes Field Value int _minutes [SerializeField] private int _minutes Field Value int _secondsBetweenMinutes [SerializeField] private float _secondsBetweenMinutes Field Value float _skippingDay private bool _skippingDay Field Value bool _startingHour [SerializeField] private int _startingHour Field Value int _timeUpdated [SerializeField] private UnityEvent<int, int> _timeUpdated Field Value UnityEvent<int, int> _year private int _year Field Value int _yearUpdated [SerializeField] private UnityEvent<int> _yearUpdated Field Value UnityEvent<int> Properties GlobalDay public int GlobalDay { get; } Property Value int Hours public int Hours { get; } Property Value int Minutes public int Minutes { get; } Property Value int Year public int Year { get; } Property Value int Methods Awake() private void Awake() GetDay() public int GetDay() Returns int GetDayOfTheWeek() public Enum_DayOfTheWeek GetDayOfTheWeek() Returns Enum_DayOfTheWeek GetSeason() public Enum_Season GetSeason() Returns Enum_Season GetSpecificDateAndTime() public SpecificDateAndTime GetSpecificDateAndTime() Returns SpecificDateAndTime GetTimeSlot() public TimeSlot GetTimeSlot() Returns TimeSlot IncrementDay() private void IncrementDay() IncrementTime() private void IncrementTime() SkipToNextDay() public void SkipToNextDay() SubscribeToDayUpdate(UnityAction<int>) public void SubscribeToDayUpdate(UnityAction<int> action) Parameters action UnityAction<int> SubscribeToTimeUpdate(UnityAction<int, int>) public void SubscribeToTimeUpdate(UnityAction<int, int> action) Parameters action UnityAction<int, int> UpdateTime() private IEnumerator UpdateTime() Returns IEnumerator"
  },
  "api/Global.DaySpecificAttractions.html": {
    "href": "api/Global.DaySpecificAttractions.html",
    "title": "Class DaySpecificAttractions | Lofi City Documentation",
    "keywords": "Class DaySpecificAttractions Namespace Global Assembly Assembly-CSharp.dll public class DaySpecificAttractions : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DaySpecificAttractions Fields _attractionData [SerializeField] private Scriptable_Attraction _attractionData Field Value Scriptable_Attraction _attractionObject [SerializeField] private AttractionObject _attractionObject Field Value AttractionObject _attractionsInScene [SerializeField] private AttractionsInScene _attractionsInScene Field Value AttractionsInScene _dayManager private DateTimeManager _dayManager Field Value DateTimeManager Methods Awake() private void Awake()"
  },
  "api/Global.DayTransition.html": {
    "href": "api/Global.DayTransition.html",
    "title": "Class DayTransition | Lofi City Documentation",
    "keywords": "Class DayTransition Namespace Global Assembly Assembly-CSharp.dll public class DayTransition : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DayTransition Fields _dayManager private DateTimeManager _dayManager Field Value DateTimeManager _endTime [SerializeField] private TimeSlot _endTime Field Value TimeSlot _loader private LoadWorldScene _loader Field Value LoadWorldScene _playerSpawnPosition [SerializeField] private Vector3 _playerSpawnPosition Field Value Vector3 _sceneName [SerializeField] private Enum_SceneName _sceneName Field Value Enum_SceneName _scheduler private ScheduleEvent _scheduler Field Value ScheduleEvent Methods EndDay(int) public void EndDay(int day) Parameters day int OnDayUpdated(int) public void OnDayUpdated(int day) Parameters day int Start() private void Start()"
  },
  "api/Global.DestructableCart.html": {
    "href": "api/Global.DestructableCart.html",
    "title": "Class DestructableCart | Lofi City Documentation",
    "keywords": "Class DestructableCart Namespace Global Assembly Assembly-CSharp.dll public class DestructableCart : DestructableObject Inheritance object Object Component Behaviour MonoBehaviour DestructableObject DestructableCart Inherited Members DestructableObject._onDestroy DestructableObject._itemsDropped DestructableObject._itemsDroppedItems DestructableObject.Awake() Fields _cartData [SerializeField] private CartData _cartData Field Value CartData _manuallyDestroyed private bool _manuallyDestroyed Field Value bool Methods DestroySelf() public override void DestroySelf() OnDestroy() private void OnDestroy()"
  },
  "api/Global.DestructableObject.html": {
    "href": "api/Global.DestructableObject.html",
    "title": "Class DestructableObject | Lofi City Documentation",
    "keywords": "Class DestructableObject Namespace Global Assembly Assembly-CSharp.dll Used on objects that the player can destroy. public class DestructableObject : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DestructableObject Derived DestructableCart Fields _itemsDropped [SerializeField] private InspectableDictionary<AddressableAsset_Item, int> _itemsDropped Field Value InspectableDictionary<AddressableAsset_Item, int> _itemsDroppedItems protected Dictionary<Scriptable_Item, int> _itemsDroppedItems Field Value Dictionary<Scriptable_Item, int> _onDestroy [SerializeField] private UnityEvent _onDestroy Field Value UnityEvent Methods Awake() private void Awake() DestroySelf() public virtual void DestroySelf()"
  },
  "api/Global.DisplayLog.html": {
    "href": "api/Global.DisplayLog.html",
    "title": "Class DisplayLog | Lofi City Documentation",
    "keywords": "Class DisplayLog Namespace Global Assembly Assembly-CSharp.dll public class DisplayLog : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DisplayLog Fields _logParent [SerializeField] private Transform _logParent Field Value Transform Methods Start() private void Start() WriteLog(string) public void WriteLog(string msg) Parameters msg string"
  },
  "api/Global.DisplayWires.html": {
    "href": "api/Global.DisplayWires.html",
    "title": "Class DisplayWires | Lofi City Documentation",
    "keywords": "Class DisplayWires Namespace Global Assembly Assembly-CSharp.dll public class DisplayWires : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour DisplayWires Fields _layer [SerializeField] private ObjectLayerBase _layer Field Value ObjectLayerBase _tilemap [SerializeField] private Tilemap _tilemap Field Value Tilemap _wireTile [SerializeField] private RuleTile _wireTile Field Value RuleTile Methods AddWire(GridObject) private void AddWire(GridObject wire) Parameters wire GridObject Awake() private void Awake()"
  },
  "api/Global.EcosystemLayer.html": {
    "href": "api/Global.EcosystemLayer.html",
    "title": "Class EcosystemLayer | Lofi City Documentation",
    "keywords": "Class EcosystemLayer Namespace Global Assembly Assembly-CSharp.dll Populate an ecosystem layer based on an existing field layer. Start by setting all tiles as polluted. public class EcosystemLayer : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour EcosystemLayer Implements ISavableElement Fields _changedTiles private SavablePositionList<int> _changedTiles Field Value SavablePositionList<int> _defaultType [SerializeField] private Enum_EcosystemType _defaultType Field Value Enum_EcosystemType _ecosystemLayer [SerializeField] private GridBasedObjectLayer _ecosystemLayer Field Value GridBasedObjectLayer _fieldLayer [SerializeField] private GridBasedObjectLayer _fieldLayer Field Value GridBasedObjectLayer _layerName [SerializeField] private string _layerName Field Value string Methods Awake() private void Awake() OnLoad(ISavingSystem) public void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem SetGrid((int, int), Vector2Int) public void SetGrid((int, int) size, Vector2Int origin) Parameters size (int, int) origin Vector2Int SetGridCell(GridObject) private void SetGridCell(GridObject tile) Parameters tile GridObject SetGridCell(Vector2Int, Enum_EcosystemType) public void SetGridCell(Vector2Int position, Enum_EcosystemType type) Parameters position Vector2Int type Enum_EcosystemType"
  },
  "api/Global.Enum_ActivityType.html": {
    "href": "api/Global.Enum_ActivityType.html",
    "title": "Enum Enum_ActivityType | Lofi City Documentation",
    "keywords": "Enum Enum_ActivityType Namespace Global Assembly Assembly-CSharp.dll public enum Enum_ActivityType Fields Fun = 2 General = 3 Hunger = 1 Work = 0"
  },
  "api/Global.Enum_DayOfTheWeek.html": {
    "href": "api/Global.Enum_DayOfTheWeek.html",
    "title": "Enum Enum_DayOfTheWeek | Lofi City Documentation",
    "keywords": "Enum Enum_DayOfTheWeek Namespace Global Assembly Assembly-CSharp.dll public enum Enum_DayOfTheWeek Fields Friday = 4 Monday = 0 Saturday = 5 Sunday = 6 Thursday = 3 Tuesday = 1 Wednesday = 2"
  },
  "api/Global.Enum_Directions.html": {
    "href": "api/Global.Enum_Directions.html",
    "title": "Enum Enum_Directions | Lofi City Documentation",
    "keywords": "Enum Enum_Directions Namespace Global Assembly Assembly-CSharp.dll public enum Enum_Directions Fields East = 1 North = 0 South = 2 West = 3"
  },
  "api/Global.Enum_EcosystemType.html": {
    "href": "api/Global.Enum_EcosystemType.html",
    "title": "Enum Enum_EcosystemType | Lofi City Documentation",
    "keywords": "Enum Enum_EcosystemType Namespace Global Assembly Assembly-CSharp.dll public enum Enum_EcosystemType Fields Clean = 1 Forest = 3 Pasture = 2 Polluted = 0"
  },
  "api/Global.Enum_FieldTileType.html": {
    "href": "api/Global.Enum_FieldTileType.html",
    "title": "Enum Enum_FieldTileType | Lofi City Documentation",
    "keywords": "Enum Enum_FieldTileType Namespace Global Assembly Assembly-CSharp.dll public enum Enum_FieldTileType Fields Rock = 0 Soil = 1 WateredSoil = 2"
  },
  "api/Global.Enum_HUDComponent.html": {
    "href": "api/Global.Enum_HUDComponent.html",
    "title": "Enum Enum_HUDComponent | Lofi City Documentation",
    "keywords": "Enum Enum_HUDComponent Namespace Global Assembly Assembly-CSharp.dll [Serializable] public enum Enum_HUDComponent Fields Clock = 1 Dialogue = 7 Field_HUB = 0 Hotbar = 3 InWorldShop = 5 PauseMenu = 8 Player_Inventory = 2 TaskList = 6 Vendor = 4"
  },
  "api/Global.Enum_Interests.html": {
    "href": "api/Global.Enum_Interests.html",
    "title": "Enum Enum_Interests | Lofi City Documentation",
    "keywords": "Enum Enum_Interests Namespace Global Assembly Assembly-CSharp.dll public enum Enum_Interests Fields Cooking = 3 Farming = 1 Fishing = 2 None = 0"
  },
  "api/Global.Enum_ItemAttributes.html": {
    "href": "api/Global.Enum_ItemAttributes.html",
    "title": "Enum Enum_ItemAttributes | Lofi City Documentation",
    "keywords": "Enum Enum_ItemAttributes Namespace Global Assembly Assembly-CSharp.dll public enum Enum_ItemAttributes Fields Food_Bakery = 7 Food_Comfort = 6 Food_Dessert = 8 Food_Hearty = 5 Food_Light = 4 Food_Meat_Based = 1 Food_Produce = 2 Food_Seafood = 0 Food_Traditional = 3"
  },
  "api/Global.Enum_ItemCategory.html": {
    "href": "api/Global.Enum_ItemCategory.html",
    "title": "Enum Enum_ItemCategory | Lofi City Documentation",
    "keywords": "Enum Enum_ItemCategory Namespace Global Assembly Assembly-CSharp.dll public enum Enum_ItemCategory Fields Dishes = 3 Machines = 4 Produce = 2 Seeds = 1 Tools = 0"
  },
  "api/Global.Enum_ItemDisplayCondition.html": {
    "href": "api/Global.Enum_ItemDisplayCondition.html",
    "title": "Enum Enum_ItemDisplayCondition | Lofi City Documentation",
    "keywords": "Enum Enum_ItemDisplayCondition Namespace Global Assembly Assembly-CSharp.dll public enum Enum_ItemDisplayCondition Fields Food_Warmer = 0 General = 1"
  },
  "api/Global.Enum_ItemInteraction.html": {
    "href": "api/Global.Enum_ItemInteraction.html",
    "title": "Enum Enum_ItemInteraction | Lofi City Documentation",
    "keywords": "Enum Enum_ItemInteraction Namespace Global Assembly Assembly-CSharp.dll public enum Enum_ItemInteraction Fields LimitedPlacable = 5 None = 0 Placable = 1 Tool_Clean = 2 Tool_Destroy = 3 Tool_Water = 4"
  },
  "api/Global.Enum_MachineCategory.html": {
    "href": "api/Global.Enum_MachineCategory.html",
    "title": "Enum Enum_MachineCategory | Lofi City Documentation",
    "keywords": "Enum Enum_MachineCategory Namespace Global Assembly Assembly-CSharp.dll public enum Enum_MachineCategory Fields Convert = 0 Gather = 1 Power = 2"
  },
  "api/Global.Enum_NPCActivity.html": {
    "href": "api/Global.Enum_NPCActivity.html",
    "title": "Enum Enum_NPCActivity | Lofi City Documentation",
    "keywords": "Enum Enum_NPCActivity Namespace Global Assembly Assembly-CSharp.dll public enum Enum_NPCActivity Fields Attraction = 0 Exit = 2 Idle = 1"
  },
  "api/Global.Enum_NPCAnimations.html": {
    "href": "api/Global.Enum_NPCAnimations.html",
    "title": "Enum Enum_NPCAnimations | Lofi City Documentation",
    "keywords": "Enum Enum_NPCAnimations Namespace Global Assembly Assembly-CSharp.dll public enum Enum_NPCAnimations Fields Idle = 1 Shopping = 2 Walking = 0"
  },
  "api/Global.Enum_NPCVisualElements.html": {
    "href": "api/Global.Enum_NPCVisualElements.html",
    "title": "Enum Enum_NPCVisualElements | Lofi City Documentation",
    "keywords": "Enum Enum_NPCVisualElements Namespace Global Assembly Assembly-CSharp.dll public enum Enum_NPCVisualElements Fields Hat = 0 Pants = 2 Top = 1"
  },
  "api/Global.Enum_ObjectLayerType.html": {
    "href": "api/Global.Enum_ObjectLayerType.html",
    "title": "Enum Enum_ObjectLayerType | Lofi City Documentation",
    "keywords": "Enum Enum_ObjectLayerType Namespace Global Assembly Assembly-CSharp.dll public enum Enum_ObjectLayerType Fields Characters = 5 Ecosystem = 1 Field = 2 Paths = 0 Physical = 3 Plants = 6 Wires = 4"
  },
  "api/Global.Enum_PlaceAttributes.html": {
    "href": "api/Global.Enum_PlaceAttributes.html",
    "title": "Enum Enum_PlaceAttributes | Lofi City Documentation",
    "keywords": "Enum Enum_PlaceAttributes Namespace Global Assembly Assembly-CSharp.dll public enum Enum_PlaceAttributes Fields Casual = 2 Cosy = 5 Fitness = 3 Historic = 4 Quiet = 0 Social = 1"
  },
  "api/Global.Enum_PlayerAnimation.html": {
    "href": "api/Global.Enum_PlayerAnimation.html",
    "title": "Enum Enum_PlayerAnimation | Lofi City Documentation",
    "keywords": "Enum Enum_PlayerAnimation Namespace Global Assembly Assembly-CSharp.dll public enum Enum_PlayerAnimation Fields Idle = 0 Walking = 1"
  },
  "api/Global.Enum_SceneName.html": {
    "href": "api/Global.Enum_SceneName.html",
    "title": "Enum Enum_SceneName | Lofi City Documentation",
    "keywords": "Enum Enum_SceneName Namespace Global Assembly Assembly-CSharp.dll public enum Enum_SceneName Fields Artisan_Quarry = 1 CoastalTown = 0 Field = 3 None = 4 Starlit_Forest = 2"
  },
  "api/Global.Enum_Season.html": {
    "href": "api/Global.Enum_Season.html",
    "title": "Enum Enum_Season | Lofi City Documentation",
    "keywords": "Enum Enum_Season Namespace Global Assembly Assembly-CSharp.dll public enum Enum_Season Fields Autumn = 2 Spring = 0 Summer = 1 Winter = 3"
  },
  "api/Global.Enum_SortingLayers.html": {
    "href": "api/Global.Enum_SortingLayers.html",
    "title": "Enum Enum_SortingLayers | Lofi City Documentation",
    "keywords": "Enum Enum_SortingLayers Namespace Global Assembly Assembly-CSharp.dll public enum Enum_SortingLayers Fields Level_1 = 0 Level_2 = 1 Level_3 = 2 Level_4 = 3 Level_5 = 4"
  },
  "api/Global.FarmPlot.html": {
    "href": "api/Global.FarmPlot.html",
    "title": "Class FarmPlot | Lofi City Documentation",
    "keywords": "Class FarmPlot Namespace Global Assembly Assembly-CSharp.dll public class FarmPlot : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour FarmPlot Fields isWatered private bool isWatered Field Value bool Methods AddPlant() public void AddPlant() Harvest() public void Harvest() OnDayChange() public void OnDayChange() WaterPlot() public void WaterPlot()"
  },
  "api/Global.FieldWateringSystem.html": {
    "href": "api/Global.FieldWateringSystem.html",
    "title": "Class FieldWateringSystem | Lofi City Documentation",
    "keywords": "Class FieldWateringSystem Namespace Global Assembly Assembly-CSharp.dll public class FieldWateringSystem : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour FieldWateringSystem Implements ISavableElement Fields _dayManager private DateTimeManager _dayManager Field Value DateTimeManager _dayWatered private int _dayWatered Field Value int _dryTile [SerializeField] private Scriptable_FieldTile _dryTile Field Value Scriptable_FieldTile _ecosystemLayer [SerializeField] private ObjectLayerBase _ecosystemLayer Field Value ObjectLayerBase _fieldLayer [SerializeField] private ObjectLayerBase _fieldLayer Field Value ObjectLayerBase _layerName [SerializeField] private string _layerName Field Value string _plantLayer [SerializeField] private ObjectLayerBase _plantLayer Field Value ObjectLayerBase _plantLayerLoader [SerializeField] private SaveObjectLayerGameObjects _plantLayerLoader Field Value SaveObjectLayerGameObjects _wateredTile [SerializeField] private Scriptable_FieldTile _wateredTile Field Value Scriptable_FieldTile _wateredTiles private SavablePositionList _wateredTiles Field Value SavablePositionList Methods DryField() private void DryField() DryField(int) public void DryField(int day) Parameters day int OnLoad(ISavingSystem) public void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem Start() private void Start() WaterTile(Vector2Int) public void WaterTile(Vector2Int position) Parameters position Vector2Int"
  },
  "api/Global.FileLogger.html": {
    "href": "api/Global.FileLogger.html",
    "title": "Class FileLogger | Lofi City Documentation",
    "keywords": "Class FileLogger Namespace Global Assembly YarnSpinner.Unity.SourceCodeGenerator.dll public class FileLogger : ILogger Inheritance object FileLogger Implements ILogger Constructors FileLogger(TextWriter) public FileLogger(TextWriter writer) Parameters writer TextWriter Fields writer private TextWriter writer Field Value TextWriter Methods Dispose() public void Dispose() Write(object) public void Write(object text) Parameters text object WriteLine(object) public void WriteLine(object text) Parameters text object"
  },
  "api/Global.FivePointRange.html": {
    "href": "api/Global.FivePointRange.html",
    "title": "Class FivePointRange | Lofi City Documentation",
    "keywords": "Class FivePointRange Namespace Global Assembly Assembly-CSharp.dll [Serializable] public class FivePointRange Inheritance object FivePointRange Fields _valueSet [SerializeField] [Range(1, 5)] private int _valueSet Field Value int Methods GetValue() public int GetValue() Returns int"
  },
  "api/Global.FruitTree.html": {
    "href": "api/Global.FruitTree.html",
    "title": "Class FruitTree | Lofi City Documentation",
    "keywords": "Class FruitTree Namespace Global Assembly Assembly-CSharp.dll public class FruitTree : SavableObjectBase, IInteractableObject Inheritance object Object Component Behaviour MonoBehaviour SavableObjectBase FruitTree Implements IInteractableObject Inherited Members SavableObjectBase._objectReference SavableObjectBase.ObjectReference Fields _corruption [SerializeField] private CorruptedPlant _corruption Field Value CorruptedPlant _dayHarvested private int _dayHarvested Field Value int _dayManager private DateTimeManager _dayManager Field Value DateTimeManager _item private Scriptable_Item _item Field Value Scriptable_Item _itemDropped [SerializeField] private AddressableAsset_Item _itemDropped Field Value AddressableAsset_Item _onHarvest private Action _onHarvest Field Value Action _quantityToGive [SerializeField] private int _quantityToGive Field Value int Methods Awake() private void Awake() GetData() public override object GetData() Returns object GiveItem() private void GiveItem() HasFruit() public bool HasFruit() Returns bool OnInteractWithItem(Scriptable_Item) public void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() public void OnInteractWithNoItem() SetData(object) public override void SetData(object data) Parameters data object SubscribeToHarvest(Action) public void SubscribeToHarvest(Action action) Parameters action Action"
  },
  "api/Global.GenericAction-1.html": {
    "href": "api/Global.GenericAction-1.html",
    "title": "Class GenericAction<T> | Lofi City Documentation",
    "keywords": "Class GenericAction<T> Namespace Global Assembly Assembly-CSharp.dll Stores a UnityAction and its corresponding data. public class GenericAction<T> : GenericAction Type Parameters T data to return Inheritance object GenericAction GenericAction<T> Constructors GenericAction(Action<T>, T) public GenericAction(Action<T> action, T data) Parameters action Action<T> data T Fields _action private Action<T> _action Field Value Action<T> _data private T _data Field Value T Properties Action public Action<T> Action { get; } Property Value Action<T> Data public T Data { get; } Property Value T Methods InvokeAction() public override void InvokeAction()"
  },
  "api/Global.GenericAction.html": {
    "href": "api/Global.GenericAction.html",
    "title": "Class GenericAction | Lofi City Documentation",
    "keywords": "Class GenericAction Namespace Global Assembly Assembly-CSharp.dll Used to store and invoke Unity Actions without knowing their type. public abstract class GenericAction Inheritance object GenericAction Derived GenericAction<T> Methods InvokeAction() public abstract void InvokeAction()"
  },
  "api/Global.GenericUnityAction-1.html": {
    "href": "api/Global.GenericUnityAction-1.html",
    "title": "Class GenericUnityAction<T> | Lofi City Documentation",
    "keywords": "Class GenericUnityAction<T> Namespace Global Assembly Assembly-CSharp.dll public class GenericUnityAction<T> : GenericUnityAction Type Parameters T Inheritance object GenericUnityAction GenericUnityAction<T> Constructors GenericUnityAction(UnityAction<T>, T) public GenericUnityAction(UnityAction<T> action, T data) Parameters action UnityAction<T> data T Fields _action private UnityAction<T> _action Field Value UnityAction<T> _data private T _data Field Value T Methods InvokeAction() public override void InvokeAction()"
  },
  "api/Global.GenericUnityAction.html": {
    "href": "api/Global.GenericUnityAction.html",
    "title": "Class GenericUnityAction | Lofi City Documentation",
    "keywords": "Class GenericUnityAction Namespace Global Assembly Assembly-CSharp.dll public abstract class GenericUnityAction Inheritance object GenericUnityAction Derived GenericUnityAction<T> Methods InvokeAction() public abstract void InvokeAction()"
  },
  "api/Global.GlobalCartSetup.html": {
    "href": "api/Global.GlobalCartSetup.html",
    "title": "Class GlobalCartSetup | Lofi City Documentation",
    "keywords": "Class GlobalCartSetup Namespace Global Assembly Assembly-CSharp.dll public class GlobalCartSetup : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GlobalCartSetup Fields _cartData private CartData _cartData Field Value CartData _cartSetup private Action<CartData> _cartSetup Field Value Action<CartData> Properties CartData public CartData CartData { get; } Property Value CartData Methods RemoveCart() public void RemoveCart() SetupCart(CartData) public void SetupCart(CartData data) Parameters data CartData SubscribeToNewCart(Action<CartData>) public void SubscribeToNewCart(Action<CartData> action) Parameters action Action<CartData>"
  },
  "api/Global.GlobalManagers.html": {
    "href": "api/Global.GlobalManagers.html",
    "title": "Class GlobalManagers | Lofi City Documentation",
    "keywords": "Class GlobalManagers Namespace Global Assembly Assembly-CSharp.dll A Singleton class for accessing key manager components. public class GlobalManagers : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GlobalManagers Fields _audioManager [SerializeField] private AudioManager _audioManager Field Value AudioManager _cartSetup [SerializeField] private GlobalCartSetup _cartSetup Field Value GlobalCartSetup _dateTimeManager [SerializeField] private DateTimeManager _dateTimeManager Field Value DateTimeManager _dialogue [SerializeField] private DialogueRunner _dialogue Field Value DialogueRunner _eventScheduler [SerializeField] private ScheduleEvent _eventScheduler Field Value ScheduleEvent _globalSceneData [SerializeField] private GlobalSceneData _globalSceneData Field Value GlobalSceneData _hudController [SerializeField] private HUDController _hudController Field Value HUDController _loadingController [SerializeField] private LoadWorldScene _loadingController Field Value LoadWorldScene _machineController [SerializeField] private MachineNetworkController _machineController Field Value MachineNetworkController _npcManager [SerializeField] private NPCManager _npcManager Field Value NPCManager _playerStatus [SerializeField] private PlayerStatus _playerStatus Field Value PlayerStatus _savingController [SerializeField] private SavingManager _savingController Field Value SavingManager Properties AudioManager public AudioManager AudioManager { get; } Property Value AudioManager CartSetup public GlobalCartSetup CartSetup { get; } Property Value GlobalCartSetup DateTimeManager public DateTimeManager DateTimeManager { get; } Property Value DateTimeManager Dialogue public DialogueRunner Dialogue { get; } Property Value DialogueRunner EventScheduler public ScheduleEvent EventScheduler { get; } Property Value ScheduleEvent GlobalSceneData public GlobalSceneData GlobalSceneData { get; } Property Value GlobalSceneData HudController public HUDController HudController { get; } Property Value HUDController Instance public static GlobalManagers Instance { get; private set; } Property Value GlobalManagers LoadingController public LoadWorldScene LoadingController { get; } Property Value LoadWorldScene MachineController public MachineNetworkController MachineController { get; } Property Value MachineNetworkController NPCManager public NPCManager NPCManager { get; } Property Value NPCManager PlayerStatus public PlayerStatus PlayerStatus { get; } Property Value PlayerStatus SavingController public SavingManager SavingController { get; } Property Value SavingManager Methods Awake() private void Awake()"
  },
  "api/Global.GlobalSceneData.SceneNode.html": {
    "href": "api/Global.GlobalSceneData.SceneNode.html",
    "title": "Class GlobalSceneData.SceneNode | Lofi City Documentation",
    "keywords": "Class GlobalSceneData.SceneNode Namespace Global Assembly Assembly-CSharp.dll private class GlobalSceneData.SceneNode Inheritance object GlobalSceneData.SceneNode Constructors SceneNode(Enum_SceneName, SceneNode) public SceneNode(Enum_SceneName sceneName, GlobalSceneData.SceneNode previousScene) Parameters sceneName Enum_SceneName previousScene GlobalSceneData.SceneNode Fields _previousScene private GlobalSceneData.SceneNode _previousScene Field Value GlobalSceneData.SceneNode _sceneName private Enum_SceneName _sceneName Field Value Enum_SceneName Properties PreviousScene public GlobalSceneData.SceneNode PreviousScene { get; } Property Value GlobalSceneData.SceneNode SceneName public Enum_SceneName SceneName { get; } Property Value Enum_SceneName"
  },
  "api/Global.GlobalSceneData.html": {
    "href": "api/Global.GlobalSceneData.html",
    "title": "Class GlobalSceneData | Lofi City Documentation",
    "keywords": "Class GlobalSceneData Namespace Global Assembly Assembly-CSharp.dll Gives Manager classes high level data about all scenes. This includes finding all attractions and the best path between two scenes. public class GlobalSceneData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour GlobalSceneData Fields _attractionsData private Dictionary<Enum_ActivityType, List<Scriptable_Attraction>> _attractionsData Field Value Dictionary<Enum_ActivityType, List<Scriptable_Attraction>> _sceneData private Dictionary<Enum_SceneName, Scriptable_SceneData> _sceneData Field Value Dictionary<Enum_SceneName, Scriptable_SceneData> _scenePaths private Dictionary<Enum_SceneName, Dictionary<Enum_SceneName, List<Enum_SceneName>>> _scenePaths Field Value Dictionary<Enum_SceneName, Dictionary<Enum_SceneName, List<Enum_SceneName>>> _scenes [SerializeField] private List<Scriptable_SceneData> _scenes Field Value List<Scriptable_SceneData> Methods Awake() private void Awake() CalculatePathToScene(Enum_SceneName, Enum_SceneName) private List<Enum_SceneName> CalculatePathToScene(Enum_SceneName startScene, Enum_SceneName endScene) Parameters startScene Enum_SceneName endScene Enum_SceneName Returns List<Enum_SceneName> GetAttractionsofType(Enum_ActivityType) public List<Scriptable_Attraction> GetAttractionsofType(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns List<Scriptable_Attraction> GetPathToScene(Enum_SceneName, Enum_SceneName) public List<Enum_SceneName> GetPathToScene(Enum_SceneName startScene, Enum_SceneName endScene) Parameters startScene Enum_SceneName endScene Enum_SceneName Returns List<Enum_SceneName>"
  },
  "api/Global.GridBasedObjectLayer.html": {
    "href": "api/Global.GridBasedObjectLayer.html",
    "title": "Class GridBasedObjectLayer | Lofi City Documentation",
    "keywords": "Class GridBasedObjectLayer Namespace Global Assembly Assembly-CSharp.dll A 2D matrix of a given width and height is used to store GridObjects. This system works best for fixed areas where most cells have an object in them. public class GridBasedObjectLayer : ObjectLayerBase Inheritance object Object Component Behaviour MonoBehaviour ObjectLayerBase GridBasedObjectLayer Inherited Members ObjectLayerBase._positionSubscribers ObjectLayerBase._onObjectChanged ObjectLayerBase.layerType ObjectLayerBase._zPosition ObjectLayerBase.GetLayerType() ObjectLayerBase.SetZPosition(int) ObjectLayerBase.GetZPosition() ObjectLayerBase.SubscribeToChangeAtPosition(Vector2Int, Action<GridObject>) ObjectLayerBase.UnsubscribeFromChangeAtPosition(Vector2Int, Action<GridObject>) ObjectLayerBase.SubscribeToChangeInLayer(Action<GridObject>) ObjectLayerBase.AlertSubscribers(Vector2Int, GridObject) Fields _isSetUp private bool _isSetUp Field Value bool _objectsGrid private GridObject[,] _objectsGrid Field Value GridObject[,] _onGridSetup private Action<(int, int), Vector2Int> _onGridSetup Field Value Action<(int, int), Vector2Int> _originPosition The world position of the bottom left cell private Vector2Int _originPosition Field Value Vector2Int Properties IsSetUp public bool IsSetUp { get; } Property Value bool OriginPosition public Vector2Int OriginPosition { get; } Property Value Vector2Int Methods GetAllObjects() public override List<GridObject> GetAllObjects() Returns List<GridObject> GetObjectAtPosition(Vector2Int) public override GridObject GetObjectAtPosition(Vector2Int position) Parameters position Vector2Int Returns GridObject GetObjectsInArea(Vector2Int, Vector2Int) public override List<GridObject> GetObjectsInArea(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int Returns List<GridObject> GetSize() public (int, int) GetSize() Returns (int, int) RemoveObject(Vector2Int) public override void RemoveObject(Vector2Int position) Parameters position Vector2Int SetObject(Vector2Int, object) Setting an object will remove any existing object at that position. public override GridObject SetObject(Vector2Int position, object objectPrefab) Parameters position Vector2Int objectPrefab object Returns GridObject SetObject(Vector2Int, Vector2Int, object) public override GridObject SetObject(Vector2Int position, Vector2Int size, object objectPrefab) Parameters position Vector2Int size Vector2Int objectPrefab object Returns GridObject Setup(int, int, Vector2Int) Setup is used to create a new grid of the needed size. public void Setup(int width, int height, Vector2Int originPosition) Parameters width int height int originPosition Vector2Int SubscribeToGridSetup(Action<(int, int), Vector2Int>) public void SubscribeToGridSetup(Action<(int, int), Vector2Int> action) Parameters action Action<(int, int), Vector2Int> _indexToWorldPosition(Vector2Int) private Vector2Int _indexToWorldPosition(Vector2Int index) Parameters index Vector2Int Returns Vector2Int _worldPositionToIndex(Vector2Int) private Vector2Int _worldPositionToIndex(Vector2Int position) Parameters position Vector2Int Returns Vector2Int"
  },
  "api/Global.GridObject.html": {
    "href": "api/Global.GridObject.html",
    "title": "Class GridObject | Lofi City Documentation",
    "keywords": "Class GridObject Namespace Global Assembly Assembly-CSharp.dll This stores data for any object being stored in an ObjectLayer public class GridObject Inheritance object GridObject Constructors GridObject(ObjectLayerBase, Vector2Int, Vector2Int) public GridObject(ObjectLayerBase parentLayer, Vector2Int position, Vector2Int size) Parameters parentLayer ObjectLayerBase position Vector2Int size Vector2Int Fields _object protected object _object Field Value object _parentLayer protected ObjectLayerBase _parentLayer Field Value ObjectLayerBase _position This is the position of the bottom left cell of the object protected Vector2Int _position Field Value Vector2Int _size [SerializeField] protected Vector2Int _size Field Value Vector2Int Properties Object public object Object { get; set; } Property Value object ParentLayer public ObjectLayerBase ParentLayer { get; set; } Property Value ObjectLayerBase Position public Vector2Int Position { get; set; } Property Value Vector2Int Size public Vector2Int Size { get; set; } Property Value Vector2Int"
  },
  "api/Global.GridPointer_Ranged.html": {
    "href": "api/Global.GridPointer_Ranged.html",
    "title": "Class GridPointer_Ranged | Lofi City Documentation",
    "keywords": "Class GridPointer_Ranged Namespace Global Assembly Assembly-CSharp.dll This pointer is intended to work with devices that can easily point to specific tiles, like a mouse The player points to a tile, and if it is within a certain range of the player character, the grid position is returned public class GridPointer_Ranged : MonoBehaviour, IGridPointer Inheritance object Object Component Behaviour MonoBehaviour GridPointer_Ranged Implements IGridPointer Fields _interationAction private InputActions _interationAction Field Value InputActions _maxDistance [SerializeField] private float _maxDistance Field Value float _playerTransform [SerializeField] private Transform _playerTransform Field Value Transform Methods GetPosition() Calculate and return the position where the player is interacting or null if it is invalid public Vector3Int? GetPosition() Returns Vector3Int? SetUpPointer() A setup method is used to allow for changing between different pointers. public void SetUpPointer()"
  },
  "api/Global.HUDComponent.html": {
    "href": "api/Global.HUDComponent.html",
    "title": "Struct HUDComponent | Lofi City Documentation",
    "keywords": "Struct HUDComponent Namespace Global Assembly Assembly-CSharp.dll An element of the HUD that can be toggled on and off. [Serializable] public struct HUDComponent Fields _panel [SerializeField] private GameObject _panel Field Value GameObject _type [SerializeField] private Enum_HUDComponent _type Field Value Enum_HUDComponent Properties Panel public GameObject Panel { get; set; } Property Value GameObject Type public Enum_HUDComponent Type { get; set; } Property Value Enum_HUDComponent"
  },
  "api/Global.HUDController.html": {
    "href": "api/Global.HUDController.html",
    "title": "Class HUDController | Lofi City Documentation",
    "keywords": "Class HUDController Namespace Global Assembly Assembly-CSharp.dll Retrieve and toggle different elements from the Heads Up Display public class HUDController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HUDController Fields _components private Dictionary<Enum_HUDComponent, GameObject> _components Field Value Dictionary<Enum_HUDComponent, GameObject> _componentsFromInspector [SerializeField] private List<HUDComponent> _componentsFromInspector Field Value List<HUDComponent> _defaultState private Dictionary<Enum_HUDComponent, bool> _defaultState Field Value Dictionary<Enum_HUDComponent, bool> _onUIToggled [SerializeField] private UnityEvent _onUIToggled Field Value UnityEvent Methods Awake() private void Awake() GetHUDPanel(Enum_HUDComponent) public GameObject GetHUDPanel(Enum_HUDComponent type) Parameters type Enum_HUDComponent Returns GameObject ResetToDefault() public void ResetToDefault() TogglePanel(Enum_HUDComponent, bool) public void TogglePanel(Enum_HUDComponent type, bool status) Parameters type Enum_HUDComponent status bool TogglePanelOff(Enum_HUDComponent) public void TogglePanelOff(Enum_HUDComponent type) Parameters type Enum_HUDComponent TogglePanelOn(Enum_HUDComponent) public void TogglePanelOn(Enum_HUDComponent type) Parameters type Enum_HUDComponent"
  },
  "api/Global.HUDToggleButton.html": {
    "href": "api/Global.HUDToggleButton.html",
    "title": "Class HUDToggleButton | Lofi City Documentation",
    "keywords": "Class HUDToggleButton Namespace Global Assembly Assembly-CSharp.dll Connected to a button to toggle HUD elements on or off public class HUDToggleButton : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HUDToggleButton Fields _button [SerializeField] private Button _button Field Value Button _component [SerializeField] private Enum_HUDComponent _component Field Value Enum_HUDComponent _controller [SerializeField] private HUDController _controller Field Value HUDController _state [SerializeField] private bool _state Field Value bool _toggle [SerializeField] private bool _toggle Field Value bool Methods Start() private void Start() TaskOnClick() public void TaskOnClick()"
  },
  "api/Global.HagglingSystem.html": {
    "href": "api/Global.HagglingSystem.html",
    "title": "Class HagglingSystem | Lofi City Documentation",
    "keywords": "Class HagglingSystem Namespace Global Assembly Assembly-CSharp.dll Allows for the player to haggle with a customer about the price of an item. The player has a number of guesses before the customer moves on to the next item. public class HagglingSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour HagglingSystem Fields _calculator private QuantityDemandedCalculator _calculator Field Value QuantityDemandedCalculator _endHaggling [SerializeField] private Action _endHaggling Field Value Action _guesses private int _guesses Field Value int _item private Scriptable_SellableItem _item Field Value Scriptable_SellableItem _itemScore private int _itemScore Field Value int _quantityWanted [SerializeField] private Action<int, int> _quantityWanted Field Value Action<int, int> _sellingSystem [SerializeField] private ItemSellingSystem _sellingSystem Field Value ItemSellingSystem _startHaggling [SerializeField] private Action<Scriptable_SellableItem> _startHaggling Field Value Action<Scriptable_SellableItem> Methods Haggle(int) public void Haggle(int priceProposed) Parameters priceProposed int StartHaggling(Scriptable_SellableItem, QuantityDemandedCalculator) public void StartHaggling(Scriptable_SellableItem item, QuantityDemandedCalculator calculator) Parameters item Scriptable_SellableItem calculator QuantityDemandedCalculator SubscribeToEndHaggling(Action) public void SubscribeToEndHaggling(Action action) Parameters action Action SubscribeToQuantityWanted(Action<int, int>) public void SubscribeToQuantityWanted(Action<int, int> action) Parameters action Action<int, int> SubscribeToStartHaggling(Action<Scriptable_Item>) public void SubscribeToStartHaggling(Action<Scriptable_Item> action) Parameters action Action<Scriptable_Item>"
  },
  "api/Global.IActionCondition.html": {
    "href": "api/Global.IActionCondition.html",
    "title": "Interface IActionCondition | Lofi City Documentation",
    "keywords": "Interface IActionCondition Namespace Global Assembly Assembly-CSharp.dll Check if certain conditions are met and alert subscribers. public interface IActionCondition Methods IsConditionMet() bool IsConditionMet() Returns bool SubscribeToStatusChangeEvent(Action<IActionCondition, bool>) void SubscribeToStatusChangeEvent(Action<IActionCondition, bool> method) Parameters method Action<IActionCondition, bool>"
  },
  "api/Global.IGridPointer.html": {
    "href": "api/Global.IGridPointer.html",
    "title": "Interface IGridPointer | Lofi City Documentation",
    "keywords": "Interface IGridPointer Namespace Global Assembly Assembly-CSharp.dll Grid pointers get the position that the player is trying to interact with. Different pointers can be implemented to use different logic. public interface IGridPointer Methods GetPosition() Calculate and return the position where the player is interacting or null if it is invalid Vector3Int? GetPosition() Returns Vector3Int? SetUpPointer() A setup method is used to allow for changing between different pointers. void SetUpPointer()"
  },
  "api/Global.IInteractableObject.html": {
    "href": "api/Global.IInteractableObject.html",
    "title": "Interface IInteractableObject | Lofi City Documentation",
    "keywords": "Interface IInteractableObject Namespace Global Assembly Assembly-CSharp.dll Specify how the player can interact with a GameObject. public interface IInteractableObject Methods OnInteractWithItem(Scriptable_Item) void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() void OnInteractWithNoItem()"
  },
  "api/Global.IInventory.html": {
    "href": "api/Global.IInventory.html",
    "title": "Interface IInventory | Lofi City Documentation",
    "keywords": "Interface IInventory Namespace Global Assembly Assembly-CSharp.dll Interface for adding and removing items in an inventory. public interface IInventory Methods AddToInventory(Scriptable_Item, int) void AddToInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int IsInInventory(Scriptable_Item) bool IsInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns bool QuantityInInventory(Scriptable_Item) int QuantityInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns int RemoveFromInventory(Scriptable_Item, int) void RemoveFromInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int SubscribeToChangeInInventory(Action<Scriptable_Item, int>) void SubscribeToChangeInInventory(Action<Scriptable_Item, int> actionOnAddition) Parameters actionOnAddition Action<Scriptable_Item, int>"
  },
  "api/Global.IItemInteraction.html": {
    "href": "api/Global.IItemInteraction.html",
    "title": "Interface IItemInteraction | Lofi City Documentation",
    "keywords": "Interface IItemInteraction Namespace Global Assembly Assembly-CSharp.dll Specifies how a player can use an item. public interface IItemInteraction Methods GetInteractionType() Enum_ItemInteraction GetInteractionType() Returns Enum_ItemInteraction SetItem(Scriptable_Item) void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SubscribeToValidInteraction(Action<Enum_ItemInteraction>) void SubscribeToValidInteraction(Action<Enum_ItemInteraction> action) Parameters action Action<Enum_ItemInteraction> UseItem(Vector3Int) void UseItem(Vector3Int position) Parameters position Vector3Int"
  },
  "api/Global.IItemWithSetup-1.html": {
    "href": "api/Global.IItemWithSetup-1.html",
    "title": "Interface IItemWithSetup<T> | Lofi City Documentation",
    "keywords": "Interface IItemWithSetup<T> Namespace Global Assembly Assembly-CSharp.dll public interface IItemWithSetup<T> Type Parameters T Methods Setup(T) void Setup(T item) Parameters item T"
  },
  "api/Global.ILogger.html": {
    "href": "api/Global.ILogger.html",
    "title": "Interface ILogger | Lofi City Documentation",
    "keywords": "Interface ILogger Namespace Global Assembly YarnSpinner.Unity.SourceCodeGenerator.dll public interface ILogger Methods Write(object) void Write(object obj) Parameters obj object WriteLine(object) void WriteLine(object obj) Parameters obj object"
  },
  "api/Global.IMachineNetwork.html": {
    "href": "api/Global.IMachineNetwork.html",
    "title": "Interface IMachineNetwork | Lofi City Documentation",
    "keywords": "Interface IMachineNetwork Namespace Global Assembly Assembly-CSharp.dll Store and retrieve connected machines of a specifc category Can be used independent of the current scene. public interface IMachineNetwork Methods AddMachine(Scriptable_Machine, Vector3Int) NetworkedMachineBase AddMachine(Scriptable_Machine machineType, Vector3Int position) Parameters machineType Scriptable_Machine position Vector3Int Returns NetworkedMachineBase GetMachineCategory() Enum_MachineCategory GetMachineCategory() Returns Enum_MachineCategory GetMachines() Dictionary<Scriptable_Machine, List<NetworkedMachineBase>> GetMachines() Returns Dictionary<Scriptable_Machine, List<NetworkedMachineBase>> GetMachinesOfType(Scriptable_Machine) List<NetworkedMachineBase> GetMachinesOfType(Scriptable_Machine machineType) Parameters machineType Scriptable_Machine Returns List<NetworkedMachineBase> RemoveMachine(NetworkedMachineBase) void RemoveMachine(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase SubscribeToMachineAdded(Action<NetworkedMachineBase>) void SubscribeToMachineAdded(Action<NetworkedMachineBase> action) Parameters action Action<NetworkedMachineBase> SubscribeToMachineRemoved(Action<NetworkedMachineBase>) void SubscribeToMachineRemoved(Action<NetworkedMachineBase> action) Parameters action Action<NetworkedMachineBase>"
  },
  "api/Global.IMovementType.html": {
    "href": "api/Global.IMovementType.html",
    "title": "Interface IMovementType | Lofi City Documentation",
    "keywords": "Interface IMovementType Namespace Global Assembly Assembly-CSharp.dll Specifies how the player moves in a particular state. public interface IMovementType Methods ChangedDirection(Vector2) void ChangedDirection(Vector2 _currentDirection) Parameters _currentDirection Vector2 Movement() IEnumerator Movement() Returns IEnumerator Setup(Transform) void Setup(Transform transform) Parameters transform Transform SubscribeToChangeInStep(Action<int>) void SubscribeToChangeInStep(Action<int> action) Parameters action Action<int> SubscribeToChangedSceneLayer(Action<SceneLayer>) void SubscribeToChangedSceneLayer(Action<SceneLayer> _onLayerChange) Parameters _onLayerChange Action<SceneLayer>"
  },
  "api/Global.INPC_Personality.html": {
    "href": "api/Global.INPC_Personality.html",
    "title": "Interface INPC_Personality | Lofi City Documentation",
    "keywords": "Interface INPC_Personality Namespace Global Assembly Assembly-CSharp.dll public interface INPC_Personality Methods GetCustomerData() Customer GetCustomerData() Returns Customer GetInterest() Scriptable_Interest GetInterest() Returns Scriptable_Interest GetPersonality() Scriptable_Personality GetPersonality() Returns Scriptable_Personality GetPlacesLiked() List<Enum_PlaceAttributes> GetPlacesLiked() Returns List<Enum_PlaceAttributes>"
  },
  "api/Global.IPointOfInterest.html": {
    "href": "api/Global.IPointOfInterest.html",
    "title": "Interface IPointOfInterest | Lofi City Documentation",
    "keywords": "Interface IPointOfInterest Namespace Global Assembly Assembly-CSharp.dll A single position that an NPC travels to. public interface IPointOfInterest Methods GetEntryPosition() Vector3Int GetEntryPosition() Returns Vector3Int OnNPCArrived(GameObject) void OnNPCArrived(GameObject npc) Parameters npc GameObject OnNPCLeaving(GameObject) void OnNPCLeaving(GameObject npc) Parameters npc GameObject"
  },
  "api/Global.ISavableElement.html": {
    "href": "api/Global.ISavableElement.html",
    "title": "Interface ISavableElement | Lofi City Documentation",
    "keywords": "Interface ISavableElement Namespace Global Assembly Assembly-CSharp.dll Added to components that need to be saved and loaded. public interface ISavableElement Methods OnLoad(ISavingSystem) void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) void OnSave(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem"
  },
  "api/Global.ISavingSystem.html": {
    "href": "api/Global.ISavingSystem.html",
    "title": "Interface ISavingSystem | Lofi City Documentation",
    "keywords": "Interface ISavingSystem Namespace Global Assembly Assembly-CSharp.dll A system that saves and loads the requested data. public interface ISavingSystem Methods CommitData() void CommitData() LoadData<T>(string) T LoadData<T>(string filePath) Parameters filePath string Returns T Type Parameters T SaveData<T>(string, T) void SaveData<T>(string filePath, T data) Parameters filePath string data T Type Parameters T"
  },
  "api/Global.IdleSpotsInScene.html": {
    "href": "api/Global.IdleSpotsInScene.html",
    "title": "Class IdleSpotsInScene | Lofi City Documentation",
    "keywords": "Class IdleSpotsInScene Namespace Global Assembly Assembly-CSharp.dll public class IdleSpotsInScene : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour IdleSpotsInScene Fields _maxDelay [SerializeField] private int _maxDelay Field Value int _random private Random _random Field Value Random _sceneLayers [SerializeField] private AllSceneLayers _sceneLayers Field Value AllSceneLayers _validIdlePositions private List<Vector3Int> _validIdlePositions Field Value List<Vector3Int> Methods AddIdlePosition(PointOfInterest_Idle) public void AddIdlePosition(PointOfInterest_Idle freedPoint) Parameters freedPoint PointOfInterest_Idle DelayBeforeMovement(NPC_ActivityBase) private IEnumerator DelayBeforeMovement(NPC_ActivityBase activity) Parameters activity NPC_ActivityBase Returns IEnumerator GetRandomIdlePosition() public PointOfInterest_Idle GetRandomIdlePosition() Returns PointOfInterest_Idle Idle(NPC_ActivityBase) public void Idle(NPC_ActivityBase activity) Parameters activity NPC_ActivityBase SetAllPossibleIdlePositions() private void SetAllPossibleIdlePositions() Start() private void Start()"
  },
  "api/Global.InGameLog.html": {
    "href": "api/Global.InGameLog.html",
    "title": "Class InGameLog | Lofi City Documentation",
    "keywords": "Class InGameLog Namespace Global Assembly Assembly-CSharp.dll public class InGameLog : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InGameLog Fields _logs private List<string> _logs Field Value List<string> _onLogAdded [SerializeField] private Action<string> _onLogAdded Field Value Action<string> Properties Instance public static InGameLog Instance { get; private set; } Property Value InGameLog Logs public List<string> Logs { get; } Property Value List<string> Methods Awake() private void Awake() Log(string) public void Log(string msg) Parameters msg string SubscribeToOnLogUpdate(Action<string>) public void SubscribeToOnLogUpdate(Action<string> action) Parameters action Action<string>"
  },
  "api/Global.InWorldShop.html": {
    "href": "api/Global.InWorldShop.html",
    "title": "Class InWorldShop | Lofi City Documentation",
    "keywords": "Class InWorldShop Namespace Global Assembly Assembly-CSharp.dll public class InWorldShop : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour InWorldShop Fields _hud private HUDController _hud Field Value HUDController _itemsBeingSold private Dictionary<Scriptable_Item, int> _itemsBeingSold Field Value Dictionary<Scriptable_Item, int> _money private PlayerMoney _money Field Value PlayerMoney _playerInventory private IInventory _playerInventory Field Value IInventory _shopData [SerializeField] private Scriptable_InWorldShop _shopData Field Value Scriptable_InWorldShop _timeManager private DateTimeManager _timeManager Field Value DateTimeManager Properties ItemsBeingSold public Dictionary<Scriptable_Item, int> ItemsBeingSold { get; } Property Value Dictionary<Scriptable_Item, int> OpeningHours public DateTimeCondition OpeningHours { get; } Property Value DateTimeCondition Methods BuyItem(Scriptable_Item) public void BuyItem(Scriptable_Item item) Parameters item Scriptable_Item GetPrice(Scriptable_Item) public int GetPrice(Scriptable_Item item) Parameters item Scriptable_Item Returns int IsOpen() public bool IsOpen() Returns bool OnTriggerEnter2D(Collider2D) private void OnTriggerEnter2D(Collider2D collision) Parameters collision Collider2D OnTriggerExit2D(Collider2D) private void OnTriggerExit2D(Collider2D collision) Parameters collision Collider2D Start() private void Start()"
  },
  "api/Global.InputActions.DebugActions.html": {
    "href": "api/Global.InputActions.DebugActions.html",
    "title": "Struct InputActions.DebugActions | Lofi City Documentation",
    "keywords": "Struct InputActions.DebugActions Namespace Global Assembly Assembly-CSharp.dll public struct InputActions.DebugActions Constructors DebugActions(InputActions) public DebugActions(InputActions wrapper) Parameters wrapper InputActions Fields m_Wrapper private InputActions m_Wrapper Field Value InputActions Properties Action1 public InputAction Action1 { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IDebugActions) public void SetCallbacks(InputActions.IDebugActions instance) Parameters instance InputActions.IDebugActions Operators implicit operator InputActionMap(DebugActions) public static implicit operator InputActionMap(InputActions.DebugActions set) Parameters set InputActions.DebugActions Returns InputActionMap"
  },
  "api/Global.InputActions.IDebugActions.html": {
    "href": "api/Global.InputActions.IDebugActions.html",
    "title": "Interface InputActions.IDebugActions | Lofi City Documentation",
    "keywords": "Interface InputActions.IDebugActions Namespace Global Assembly Assembly-CSharp.dll public interface InputActions.IDebugActions Methods OnAction1(CallbackContext) void OnAction1(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.InputActions.IInteractionActions.html": {
    "href": "api/Global.InputActions.IInteractionActions.html",
    "title": "Interface InputActions.IInteractionActions | Lofi City Documentation",
    "keywords": "Interface InputActions.IInteractionActions Namespace Global Assembly Assembly-CSharp.dll public interface InputActions.IInteractionActions Methods OnMainAction(CallbackContext) void OnMainAction(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnPointer(CallbackContext) void OnPointer(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSecondaryAction(CallbackContext) void OnSecondaryAction(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.InputActions.IMovementActions.html": {
    "href": "api/Global.InputActions.IMovementActions.html",
    "title": "Interface InputActions.IMovementActions | Lofi City Documentation",
    "keywords": "Interface InputActions.IMovementActions Namespace Global Assembly Assembly-CSharp.dll public interface InputActions.IMovementActions Methods OnDirection(CallbackContext) void OnDirection(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.InputActions.InteractionActions.html": {
    "href": "api/Global.InputActions.InteractionActions.html",
    "title": "Struct InputActions.InteractionActions | Lofi City Documentation",
    "keywords": "Struct InputActions.InteractionActions Namespace Global Assembly Assembly-CSharp.dll public struct InputActions.InteractionActions Constructors InteractionActions(InputActions) public InteractionActions(InputActions wrapper) Parameters wrapper InputActions Fields m_Wrapper private InputActions m_Wrapper Field Value InputActions Properties MainAction public InputAction MainAction { get; } Property Value InputAction Pointer public InputAction Pointer { get; } Property Value InputAction SecondaryAction public InputAction SecondaryAction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IInteractionActions) public void SetCallbacks(InputActions.IInteractionActions instance) Parameters instance InputActions.IInteractionActions Operators implicit operator InputActionMap(InteractionActions) public static implicit operator InputActionMap(InputActions.InteractionActions set) Parameters set InputActions.InteractionActions Returns InputActionMap"
  },
  "api/Global.InputActions.MovementActions.html": {
    "href": "api/Global.InputActions.MovementActions.html",
    "title": "Struct InputActions.MovementActions | Lofi City Documentation",
    "keywords": "Struct InputActions.MovementActions Namespace Global Assembly Assembly-CSharp.dll public struct InputActions.MovementActions Constructors MovementActions(InputActions) public MovementActions(InputActions wrapper) Parameters wrapper InputActions Fields m_Wrapper private InputActions m_Wrapper Field Value InputActions Properties Direction public InputAction Direction { get; } Property Value InputAction enabled public bool enabled { get; } Property Value bool Methods Disable() public void Disable() Enable() public void Enable() Get() public InputActionMap Get() Returns InputActionMap SetCallbacks(IMovementActions) public void SetCallbacks(InputActions.IMovementActions instance) Parameters instance InputActions.IMovementActions Operators implicit operator InputActionMap(MovementActions) public static implicit operator InputActionMap(InputActions.MovementActions set) Parameters set InputActions.MovementActions Returns InputActionMap"
  },
  "api/Global.InputActions.html": {
    "href": "api/Global.InputActions.html",
    "title": "Class InputActions | Lofi City Documentation",
    "keywords": "Class InputActions Namespace Global Assembly Assembly-CSharp.dll public class InputActions Inheritance object InputActions Constructors InputActions() public InputActions() Fields m_Debug private readonly InputActionMap m_Debug Field Value InputActionMap m_DebugActionsCallbackInterface private InputActions.IDebugActions m_DebugActionsCallbackInterface Field Value InputActions.IDebugActions m_Debug_Action1 private readonly InputAction m_Debug_Action1 Field Value InputAction m_Interaction private readonly InputActionMap m_Interaction Field Value InputActionMap m_InteractionActionsCallbackInterface private InputActions.IInteractionActions m_InteractionActionsCallbackInterface Field Value InputActions.IInteractionActions m_Interaction_MainAction private readonly InputAction m_Interaction_MainAction Field Value InputAction m_Interaction_Pointer private readonly InputAction m_Interaction_Pointer Field Value InputAction m_Interaction_SecondaryAction private readonly InputAction m_Interaction_SecondaryAction Field Value InputAction m_KeyboardandMouseSchemeIndex private int m_KeyboardandMouseSchemeIndex Field Value int m_Movement private readonly InputActionMap m_Movement Field Value InputActionMap m_MovementActionsCallbackInterface private InputActions.IMovementActions m_MovementActionsCallbackInterface Field Value InputActions.IMovementActions m_Movement_Direction private readonly InputAction m_Movement_Direction Field Value InputAction Properties Debug public InputActions.DebugActions Debug { get; } Property Value InputActions.DebugActions Interaction public InputActions.InteractionActions Interaction { get; } Property Value InputActions.InteractionActions KeyboardandMouseScheme public InputControlScheme KeyboardandMouseScheme { get; } Property Value InputControlScheme Movement public InputActions.MovementActions Movement { get; } Property Value InputActions.MovementActions asset public InputActionAsset asset { get; } Property Value InputActionAsset bindingMask public InputBinding? bindingMask { get; set; } Property Value InputBinding? bindings public IEnumerable<InputBinding> bindings { get; } Property Value IEnumerable<InputBinding> controlSchemes public ReadOnlyArray<InputControlScheme> controlSchemes { get; } Property Value ReadOnlyArray<InputControlScheme> devices public ReadOnlyArray<InputDevice>? devices { get; set; } Property Value ReadOnlyArray<InputDevice>? Methods Contains(InputAction) public bool Contains(InputAction action) Parameters action InputAction Returns bool Disable() public void Disable() Dispose() public void Dispose() Enable() public void Enable() FindAction(string, bool) public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false) Parameters actionNameOrId string throwIfNotFound bool Returns InputAction FindBinding(InputBinding, out InputAction) public int FindBinding(InputBinding bindingMask, out InputAction action) Parameters bindingMask InputBinding action InputAction Returns int GetEnumerator() public IEnumerator<InputAction> GetEnumerator() Returns IEnumerator<InputAction>"
  },
  "api/Global.InspectableDictionary-2.html": {
    "href": "api/Global.InspectableDictionary-2.html",
    "title": "Class InspectableDictionary<T, U> | Lofi City Documentation",
    "keywords": "Class InspectableDictionary<T, U> Namespace Global Assembly Assembly-CSharp.dll This can be used to create dictionaries in the inspector. [Serializable] public class InspectableDictionary<T, U> Type Parameters T Key U Value Inheritance object InspectableDictionary<T, U> Fields _dictionary private Dictionary<T, U> _dictionary Field Value Dictionary<T, U> _primingData [SerializeField] private List<InspectablePair<T, U>> _primingData Field Value List<InspectablePair<T, U>> Methods GetDictionary() public Dictionary<T, U> GetDictionary() Returns Dictionary<T, U>"
  },
  "api/Global.InspectablePair-2.html": {
    "href": "api/Global.InspectablePair-2.html",
    "title": "Class InspectablePair<T, U> | Lofi City Documentation",
    "keywords": "Class InspectablePair<T, U> Namespace Global Assembly Assembly-CSharp.dll This is used in the InspectableDictionary as a Key-Value Pair [Serializable] public class InspectablePair<T, U> Type Parameters T Key U Value Inheritance object InspectablePair<T, U> Fields _key [SerializeField] private T _key Field Value T _value [SerializeField] private U _value Field Value U Properties Key public T Key { get; } Property Value T Value public U Value { get; } Property Value U"
  },
  "api/Global.InteractableObject_Bed.html": {
    "href": "api/Global.InteractableObject_Bed.html",
    "title": "Class InteractableObject_Bed | Lofi City Documentation",
    "keywords": "Class InteractableObject_Bed Namespace Global Assembly Assembly-CSharp.dll public class InteractableObject_Bed : MonoBehaviour, IInteractableObject Inheritance object Object Component Behaviour MonoBehaviour InteractableObject_Bed Implements IInteractableObject Fields _dayManager private DateTimeManager _dayManager Field Value DateTimeManager Methods ChangeDay() private void ChangeDay() OnInteractWithItem(Scriptable_Item) public void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() public void OnInteractWithNoItem() Start() private void Start()"
  },
  "api/Global.InteractableObject_Dialogue.html": {
    "href": "api/Global.InteractableObject_Dialogue.html",
    "title": "Class InteractableObject_Dialogue | Lofi City Documentation",
    "keywords": "Class InteractableObject_Dialogue Namespace Global Assembly Assembly-CSharp.dll public class InteractableObject_Dialogue : MonoBehaviour, IInteractableObject Inheritance object Object Component Behaviour MonoBehaviour InteractableObject_Dialogue Implements IInteractableObject Fields _dialogue private DialogueRunner _dialogue Field Value DialogueRunner _dialogueName [SerializeField] private string _dialogueName Field Value string Methods OnInteractWithItem(Scriptable_Item) public void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() public void OnInteractWithNoItem() RunDialogue() public void RunDialogue() Start() private void Start()"
  },
  "api/Global.InteractableObject_Hub.html": {
    "href": "api/Global.InteractableObject_Hub.html",
    "title": "Class InteractableObject_Hub | Lofi City Documentation",
    "keywords": "Class InteractableObject_Hub Namespace Global Assembly Assembly-CSharp.dll This allows the player to interact with the Field HUB. They can add items to the storage or view the UI. public class InteractableObject_Hub : MonoBehaviour, IInteractableObject Inheritance object Object Component Behaviour MonoBehaviour InteractableObject_Hub Implements IInteractableObject Fields _hubInventory private IInventory _hubInventory Field Value IInventory _hudController private HUDController _hudController Field Value HUDController _playerInventory private IInventory _playerInventory Field Value IInventory Methods OnInteractWithItem(Scriptable_Item) public void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() public void OnInteractWithNoItem() OnTriggerEnter2D(Collider2D) private void OnTriggerEnter2D(Collider2D collision) Parameters collision Collider2D OnTriggerExit2D(Collider2D) private void OnTriggerExit2D(Collider2D collision) Parameters collision Collider2D Start() private void Start()"
  },
  "api/Global.InteractableObject_ItemSource.html": {
    "href": "api/Global.InteractableObject_ItemSource.html",
    "title": "Class InteractableObject_ItemSource | Lofi City Documentation",
    "keywords": "Class InteractableObject_ItemSource Namespace Global Assembly Assembly-CSharp.dll Gives the player an endless source of items. public class InteractableObject_ItemSource : MonoBehaviour, IInteractableObject Inheritance object Object Component Behaviour MonoBehaviour InteractableObject_ItemSource Implements IInteractableObject Fields _item private Scriptable_Item _item Field Value Scriptable_Item _itemReference [SerializeField] private AssetReference _itemReference Field Value AssetReference Methods Awake() private void Awake() GiveItem() private void GiveItem() OnInteractWithItem(Scriptable_Item) public void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() public void OnInteractWithNoItem()"
  },
  "api/Global.InteractableObject_Plant.html": {
    "href": "api/Global.InteractableObject_Plant.html",
    "title": "Class InteractableObject_Plant | Lofi City Documentation",
    "keywords": "Class InteractableObject_Plant Namespace Global Assembly Assembly-CSharp.dll public class InteractableObject_Plant : MonoBehaviour, IInteractableObject Inheritance object Object Component Behaviour MonoBehaviour InteractableObject_Plant Implements IInteractableObject Fields _plant [SerializeField] private PlantObject _plant Field Value PlantObject Methods Harvest() public void Harvest() OnInteractWithItem(Scriptable_Item) public void OnInteractWithItem(Scriptable_Item item) Parameters item Scriptable_Item OnInteractWithNoItem() public void OnInteractWithNoItem()"
  },
  "api/Global.ItemDisplayTable.html": {
    "href": "api/Global.ItemDisplayTable.html",
    "title": "Class ItemDisplayTable | Lofi City Documentation",
    "keywords": "Class ItemDisplayTable Namespace Global Assembly Assembly-CSharp.dll Specify what items can be displayed in a particular slot of the cart, and what quantity. [Serializable] public class ItemDisplayTable Inheritance object ItemDisplayTable Fields _maxQuantity [SerializeField] private int _maxQuantity Field Value int _slotType [SerializeField] private Enum_ItemDisplayCondition _slotType Field Value Enum_ItemDisplayCondition Properties MaxQuantity public int MaxQuantity { get; } Property Value int SlotType public Enum_ItemDisplayCondition SlotType { get; } Property Value Enum_ItemDisplayCondition"
  },
  "api/Global.ItemInteraction_CleanTool.html": {
    "href": "api/Global.ItemInteraction_CleanTool.html",
    "title": "Class ItemInteraction_CleanTool | Lofi City Documentation",
    "keywords": "Class ItemInteraction_CleanTool Namespace Global Assembly Assembly-CSharp.dll Changes a polluted ecosystem layer tile to a clean tile. public class ItemInteraction_CleanTool : MonoBehaviour, IItemInteraction Inheritance object Object Component Behaviour MonoBehaviour ItemInteraction_CleanTool Implements IItemInteraction Fields _onPlaceItem private Action<Enum_ItemInteraction> _onPlaceItem Field Value Action<Enum_ItemInteraction> Methods CheckAdjacentTiles(Vector2Int, ObjectLayerBase) private bool CheckAdjacentTiles(Vector2Int position, ObjectLayerBase ecosystemLayer) Parameters position Vector2Int ecosystemLayer ObjectLayerBase Returns bool GetInteractionType() public Enum_ItemInteraction GetInteractionType() Returns Enum_ItemInteraction SetItem(Scriptable_Item) public void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SubscribeToValidInteraction(Action<Enum_ItemInteraction>) public void SubscribeToValidInteraction(Action<Enum_ItemInteraction> action) Parameters action Action<Enum_ItemInteraction> UseItem(Vector3Int) public void UseItem(Vector3Int position) Parameters position Vector3Int"
  },
  "api/Global.ItemInteraction_DestroyTool.html": {
    "href": "api/Global.ItemInteraction_DestroyTool.html",
    "title": "Class ItemInteraction_DestroyTool | Lofi City Documentation",
    "keywords": "Class ItemInteraction_DestroyTool Namespace Global Assembly Assembly-CSharp.dll public class ItemInteraction_DestroyTool : MonoBehaviour, IItemInteraction Inheritance object Object Component Behaviour MonoBehaviour ItemInteraction_DestroyTool Implements IItemInteraction Fields _destroyOrder [SerializeField] private List<Enum_ObjectLayerType> _destroyOrder Field Value List<Enum_ObjectLayerType> _onPlaceItem private Action<Enum_ItemInteraction> _onPlaceItem Field Value Action<Enum_ItemInteraction> _playerInventory [SerializeField] private IInventory _playerInventory Field Value IInventory Methods GetInteractionType() public Enum_ItemInteraction GetInteractionType() Returns Enum_ItemInteraction SetItem(Scriptable_Item) public void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SubscribeToValidInteraction(Action<Enum_ItemInteraction>) public void SubscribeToValidInteraction(Action<Enum_ItemInteraction> action) Parameters action Action<Enum_ItemInteraction> UseItem(Vector3Int) public void UseItem(Vector3Int position) Parameters position Vector3Int"
  },
  "api/Global.ItemInteraction_LimitedPlacement.html": {
    "href": "api/Global.ItemInteraction_LimitedPlacement.html",
    "title": "Class ItemInteraction_LimitedPlacement | Lofi City Documentation",
    "keywords": "Class ItemInteraction_LimitedPlacement Namespace Global Assembly Assembly-CSharp.dll public class ItemInteraction_LimitedPlacement : ItemInteraction_Placable, IItemInteraction Inheritance object Object Component Behaviour MonoBehaviour ItemInteraction_Placable ItemInteraction_LimitedPlacement Implements IItemInteraction Inherited Members ItemInteraction_Placable._status ItemInteraction_Placable._onPlaceItem ItemInteraction_Placable._playerInventory ItemInteraction_Placable._item ItemInteraction_Placable._allLayers ItemInteraction_Placable.Awake() ItemInteraction_Placable.SetItem(Scriptable_Item) ItemInteraction_Placable.UseItem(Vector3Int) ItemInteraction_Placable.PlaceLoadedObject(AsyncOperationHandle<GameObject>, Vector3Int) ItemInteraction_Placable.SubscribeToValidInteraction(Action<Enum_ItemInteraction>) Methods GetInteractionType() public override Enum_ItemInteraction GetInteractionType() Returns Enum_ItemInteraction IsPositionValid(Vector3Int, Vector3Int) protected override bool IsPositionValid(Vector3Int position, Vector3Int size) Parameters position Vector3Int size Vector3Int Returns bool"
  },
  "api/Global.ItemInteraction_Placable.html": {
    "href": "api/Global.ItemInteraction_Placable.html",
    "title": "Class ItemInteraction_Placable | Lofi City Documentation",
    "keywords": "Class ItemInteraction_Placable Namespace Global Assembly Assembly-CSharp.dll Place an item of any size at a given position in the scene. Creates a new GameObject and adds it to the appropriate Object Layer public class ItemInteraction_Placable : MonoBehaviour, IItemInteraction Inheritance object Object Component Behaviour MonoBehaviour ItemInteraction_Placable Implements IItemInteraction Derived ItemInteraction_LimitedPlacement Fields _allLayers private AllSceneLayers _allLayers Field Value AllSceneLayers _item protected Scriptable_PlacableItem _item Field Value Scriptable_PlacableItem _onPlaceItem private Action<Enum_ItemInteraction> _onPlaceItem Field Value Action<Enum_ItemInteraction> _playerInventory private IInventory _playerInventory Field Value IInventory _status [SerializeField] private PlayerStatus _status Field Value PlayerStatus Methods Awake() private void Awake() GetInteractionType() public virtual Enum_ItemInteraction GetInteractionType() Returns Enum_ItemInteraction IsPositionValid(Vector3Int, Vector3Int) protected virtual bool IsPositionValid(Vector3Int position, Vector3Int size) Parameters position Vector3Int size Vector3Int Returns bool PlaceLoadedObject(AsyncOperationHandle<GameObject>, Vector3Int) private void PlaceLoadedObject(AsyncOperationHandle<GameObject> asyncLoad, Vector3Int position) Parameters asyncLoad AsyncOperationHandle<GameObject> position Vector3Int SetItem(Scriptable_Item) public void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SubscribeToValidInteraction(Action<Enum_ItemInteraction>) public void SubscribeToValidInteraction(Action<Enum_ItemInteraction> action) Parameters action Action<Enum_ItemInteraction> UseItem(Vector3Int) public void UseItem(Vector3Int position) Parameters position Vector3Int"
  },
  "api/Global.ItemInteraction_WaterTool.html": {
    "href": "api/Global.ItemInteraction_WaterTool.html",
    "title": "Class ItemInteraction_WaterTool | Lofi City Documentation",
    "keywords": "Class ItemInteraction_WaterTool Namespace Global Assembly Assembly-CSharp.dll public class ItemInteraction_WaterTool : MonoBehaviour, IItemInteraction Inheritance object Object Component Behaviour MonoBehaviour ItemInteraction_WaterTool Implements IItemInteraction Fields _onPlaceItem private Action<Enum_ItemInteraction> _onPlaceItem Field Value Action<Enum_ItemInteraction> Methods GetInteractionType() public Enum_ItemInteraction GetInteractionType() Returns Enum_ItemInteraction SetItem(Scriptable_Item) public void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SubscribeToValidInteraction(Action<Enum_ItemInteraction>) public void SubscribeToValidInteraction(Action<Enum_ItemInteraction> action) Parameters action Action<Enum_ItemInteraction> UseItem(Vector3Int) public void UseItem(Vector3Int position) Parameters position Vector3Int"
  },
  "api/Global.ItemSellingSystem.html": {
    "href": "api/Global.ItemSellingSystem.html",
    "title": "Class ItemSellingSystem | Lofi City Documentation",
    "keywords": "Class ItemSellingSystem Namespace Global Assembly Assembly-CSharp.dll Determine the items that a customer would like to purchase in order of preference. For each item, sell the quantity that they are willing to pay for. public class ItemSellingSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ItemSellingSystem Fields _calculator private QuantityDemandedCalculator _calculator Field Value QuantityDemandedCalculator _cart [SerializeField] private CartData _cart Field Value CartData _currentCustomer private Customer _currentCustomer Field Value Customer _endOfSale private Action _endOfSale Field Value Action _haggle [SerializeField] private HagglingSystem _haggle Field Value HagglingSystem _itemSold private Action<(Scriptable_Item, int, int)> _itemSold Field Value Action<(Scriptable_Item, int, int)> _itemsSold private List<(Scriptable_Item, int, int)> _itemsSold Field Value List<(Scriptable_Item, int, int)> _itemsWanted private List<(int, Scriptable_SellableItem)> _itemsWanted Field Value List<(int, Scriptable_SellableItem)> _money private PlayerMoney _money Field Value PlayerMoney _newCustomer private Action<Customer> _newCustomer Field Value Action<Customer> _remainingBudget private int _remainingBudget Field Value int Properties ItemsSold public List<(Scriptable_Item, int, int)> ItemsSold { get; } Property Value List<(Scriptable_Item, int, int)> Methods Awake() private void Awake() ConsiderItems() public void ConsiderItems() ConsiderNextItemPrice() public void ConsiderNextItemPrice() FinishedSelling() public void FinishedSelling() PurchaseItem(Scriptable_SellableItem, int, int) public void PurchaseItem(Scriptable_SellableItem item, int quantityWanted, int price) Parameters item Scriptable_SellableItem quantityWanted int price int SetNewCustomer(Customer) public void SetNewCustomer(Customer newCustomer) Parameters newCustomer Customer SubscribeToEndOfSale(Action) public void SubscribeToEndOfSale(Action action) Parameters action Action SubscribeToItemSold(Action<(Scriptable_Item, int, int)>) public void SubscribeToItemSold(Action<(Scriptable_Item, int, int)> action) Parameters action Action<(Scriptable_Item, int, int)> SubscribeToNewCustomer(Action<Customer>) public void SubscribeToNewCustomer(Action<Customer> action) Parameters action Action<Customer>"
  },
  "api/Global.ItemTransportWire.html": {
    "href": "api/Global.ItemTransportWire.html",
    "title": "Class ItemTransportWire | Lofi City Documentation",
    "keywords": "Class ItemTransportWire Namespace Global Assembly Assembly-CSharp.dll The physical wire connecting machines to a network public class ItemTransportWire : WireBase Inheritance object Object Component Behaviour MonoBehaviour WireBase ItemTransportWire Inherited Members WireBase._adjacentWires WireBase._objectOnTop WireBase._allLayers WireBase._currentLayer WireBase._wirePositionsSubscribed WireBase._objectLayerType WireBase._connectionAdded WireBase._connectionRemoved WireBase._wireDestroyed WireBase.AdjacentWires WireBase.Awake() WireBase.ConnectToWires(Vector2Int, SceneLayer) WireBase.ConnectToObjectOnTop(Vector2Int) WireBase.CheckAdjacentWire(Vector2Int, Action<GridObject>, SceneLayer) WireBase.SubscribeToConnectionAdded(Action<WireBase>) WireBase.SubscribeToConnectionRemoved(Action<WireBase>) WireBase.SubscribeToWireDestroyed(Action<WireBase>) WireBase.UnsubscribeFromConnectionAdded(Action<WireBase>) WireBase.UnsubscribeFromConnectionRemoved(Action<WireBase>) WireBase.UnsubscribeFromWireDestroyed(Action<WireBase>) WireBase.OnWireDestroyed() Fields _connectedToWire private MachineObjectBase _connectedToWire Field Value MachineObjectBase _machineAdded private Action<Scriptable_Machine, Vector3Int, MachineObjectBase> _machineAdded Field Value Action<Scriptable_Machine, Vector3Int, MachineObjectBase> _machineRemoved private Action<MachineObjectBase> _machineRemoved Field Value Action<MachineObjectBase> Properties ConnectedToWire public MachineObjectBase ConnectedToWire { get; } Property Value MachineObjectBase Methods OnObjectPlacedAbove(GridObject) protected override void OnObjectPlacedAbove(GridObject objectPlaced) Parameters objectPlaced GridObject OnWirePlacedOnSide(GridObject) protected override void OnWirePlacedOnSide(GridObject objectPlaced) Parameters objectPlaced GridObject SubscribeToMachineAdded(Action<Scriptable_Machine, Vector3Int, MachineObjectBase>) public void SubscribeToMachineAdded(Action<Scriptable_Machine, Vector3Int, MachineObjectBase> action) Parameters action Action<Scriptable_Machine, Vector3Int, MachineObjectBase> SubscrieToMachineRemoved(Action<MachineObjectBase>) public void SubscrieToMachineRemoved(Action<MachineObjectBase> action) Parameters action Action<MachineObjectBase> UnsubscribeFromMachineAdded(Action<Scriptable_Machine, Vector3Int, MachineObjectBase>) public void UnsubscribeFromMachineAdded(Action<Scriptable_Machine, Vector3Int, MachineObjectBase> action) Parameters action Action<Scriptable_Machine, Vector3Int, MachineObjectBase> UnsubscribeFromMachineRemoved(Action<MachineObjectBase>) public void UnsubscribeFromMachineRemoved(Action<MachineObjectBase> action) Parameters action Action<MachineObjectBase>"
  },
  "api/Global.ItemUseManager.html": {
    "href": "api/Global.ItemUseManager.html",
    "title": "Class ItemUseManager | Lofi City Documentation",
    "keywords": "Class ItemUseManager Namespace Global Assembly Assembly-CSharp.dll Calls the UseItem method on the IItemInteraction of the active item in the Player State. public class ItemUseManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ItemUseManager Fields _activeItem private Scriptable_Item _activeItem Field Value Scriptable_Item _gridPointer [SerializeField] private SerializableInterface<IGridPointer> _gridPointer Field Value SerializableInterface<IGridPointer> _itemInteraction private IItemInteraction _itemInteraction Field Value IItemInteraction _itemInteractionTypes [SerializeField] private List<SerializableInterface<IItemInteraction>> _itemInteractionTypes Field Value List<SerializableInterface<IItemInteraction>> _itemInteractions private Dictionary<Enum_ItemInteraction, IItemInteraction> _itemInteractions Field Value Dictionary<Enum_ItemInteraction, IItemInteraction> _objectLayerOrder [SerializeField] private List<Enum_ObjectLayerType> _objectLayerOrder Field Value List<Enum_ObjectLayerType> _playerStatus [SerializeField] private PlayerStatus _playerStatus Field Value PlayerStatus Methods Awake() private void Awake() GetAllInteractions() public List<IItemInteraction> GetAllInteractions() Returns List<IItemInteraction> OnInteractWithObject(CallbackContext) public void OnInteractWithObject(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnUseItem(CallbackContext) Called when the Use Item button is pressed. Gets the position from the grid pointer and passes it to the item interaction method. public void OnUseItem(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext SetActiveItem(Scriptable_Item) Called when the active item is changed. public void SetActiveItem(Scriptable_Item item) Parameters item Scriptable_Item Start() private void Start()"
  },
  "api/Global.ItemWithQuantity.html": {
    "href": "api/Global.ItemWithQuantity.html",
    "title": "Struct ItemWithQuantity | Lofi City Documentation",
    "keywords": "Struct ItemWithQuantity Namespace Global Assembly Assembly-CSharp.dll [Serializable] public struct ItemWithQuantity Constructors ItemWithQuantity(Scriptable_Item, int) public ItemWithQuantity(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int Fields _item [SerializeField] private Scriptable_Item _item Field Value Scriptable_Item _quantity [SerializeField] private int _quantity Field Value int Properties Item public Scriptable_Item Item { get; } Property Value Scriptable_Item Quantity public int Quantity { get; set; } Property Value int"
  },
  "api/Global.JSONBasedSavingSystem.html": {
    "href": "api/Global.JSONBasedSavingSystem.html",
    "title": "Class JSONBasedSavingSystem | Lofi City Documentation",
    "keywords": "Class JSONBasedSavingSystem Namespace Global Assembly Assembly-CSharp.dll Stores and retrieves the given data in the form of json files. public class JSONBasedSavingSystem : MonoBehaviour, ISavingSystem Inheritance object Object Component Behaviour MonoBehaviour JSONBasedSavingSystem Implements ISavingSystem Fields _dataStored private Dictionary<string, string> _dataStored Field Value Dictionary<string, string> _jsonfilePath [SerializeField] private string _jsonfilePath Field Value string Methods CommitData() public void CommitData() LoadData<T>(string) public T LoadData<T>(string relativePath) Parameters relativePath string Returns T Type Parameters T SaveData<T>(string, T) public void SaveData<T>(string relativePath, T data) Parameters relativePath string data T Type Parameters T"
  },
  "api/Global.LimitlessInventory.html": {
    "href": "api/Global.LimitlessInventory.html",
    "title": "Class LimitlessInventory | Lofi City Documentation",
    "keywords": "Class LimitlessInventory Namespace Global Assembly Assembly-CSharp.dll This version can store any number and quantity of items. A nested dictionary is used based on categories to quickly get all items in a particular category. public class LimitlessInventory : MonoBehaviour, IInventory Inheritance object Object Component Behaviour MonoBehaviour LimitlessInventory Implements IInventory Fields _itemsByCategory private Dictionary<Enum_ItemCategory, Dictionary<Scriptable_Item, int>> _itemsByCategory Field Value Dictionary<Enum_ItemCategory, Dictionary<Scriptable_Item, int>> _onChangeInventory private Action<Scriptable_Item, int> _onChangeInventory Field Value Action<Scriptable_Item, int> Properties ItemsByCategory public Dictionary<Enum_ItemCategory, Dictionary<Scriptable_Item, int>> ItemsByCategory { get; set; } Property Value Dictionary<Enum_ItemCategory, Dictionary<Scriptable_Item, int>> Methods AddToInventory(Scriptable_Item, int) public void AddToInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int GetAllItems() public Dictionary<Scriptable_Item, int> GetAllItems() Returns Dictionary<Scriptable_Item, int> GetCategories() public Enum_ItemCategory[] GetCategories() Returns Enum_ItemCategory[] GetItemsOfCategory(Enum_ItemCategory) public Dictionary<Scriptable_Item, int> GetItemsOfCategory(Enum_ItemCategory category) Parameters category Enum_ItemCategory Returns Dictionary<Scriptable_Item, int> IsInInventory(Scriptable_Item) public bool IsInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns bool QuantityInInventory(Scriptable_Item) public int QuantityInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns int RemoveFromInventory(Scriptable_Item, int) public void RemoveFromInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int SubscribeToChangeInInventory(Action<Scriptable_Item, int>) public void SubscribeToChangeInInventory(Action<Scriptable_Item, int> actionOnChange) Parameters actionOnChange Action<Scriptable_Item, int>"
  },
  "api/Global.ListBasedObjectLayer.html": {
    "href": "api/Global.ListBasedObjectLayer.html",
    "title": "Class ListBasedObjectLayer | Lofi City Documentation",
    "keywords": "Class ListBasedObjectLayer Namespace Global Assembly Assembly-CSharp.dll This system works best for areas where most cells will not have objects. A dictionary is used where the position is the key. public class ListBasedObjectLayer : ObjectLayerBase Inheritance object Object Component Behaviour MonoBehaviour ObjectLayerBase ListBasedObjectLayer Inherited Members ObjectLayerBase._positionSubscribers ObjectLayerBase._onObjectChanged ObjectLayerBase.layerType ObjectLayerBase._zPosition ObjectLayerBase.GetLayerType() ObjectLayerBase.SetZPosition(int) ObjectLayerBase.GetZPosition() ObjectLayerBase.SubscribeToChangeAtPosition(Vector2Int, Action<GridObject>) ObjectLayerBase.UnsubscribeFromChangeAtPosition(Vector2Int, Action<GridObject>) ObjectLayerBase.SubscribeToChangeInLayer(Action<GridObject>) ObjectLayerBase.AlertSubscribers(Vector2Int, GridObject) Fields objects private Dictionary<Vector2Int, GridObject> objects Field Value Dictionary<Vector2Int, GridObject> Methods GetAllObjects() public override List<GridObject> GetAllObjects() Returns List<GridObject> GetObjectAtPosition(Vector2Int) public override GridObject GetObjectAtPosition(Vector2Int position) Parameters position Vector2Int Returns GridObject GetObjectsInArea(Vector2Int, Vector2Int) public override List<GridObject> GetObjectsInArea(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int Returns List<GridObject> RemoveObject(Vector2Int) public override void RemoveObject(Vector2Int position) Parameters position Vector2Int SetObject(Vector2Int, object) Setting an object will remove any existing object at that position. public override GridObject SetObject(Vector2Int position, object objectPrefab) Parameters position Vector2Int objectPrefab object Returns GridObject SetObject(Vector2Int, Vector2Int, object) public override GridObject SetObject(Vector2Int position, Vector2Int size, object data) Parameters position Vector2Int size Vector2Int data object Returns GridObject"
  },
  "api/Global.LoadWorldScene.html": {
    "href": "api/Global.LoadWorldScene.html",
    "title": "Class LoadWorldScene | Lofi City Documentation",
    "keywords": "Class LoadWorldScene Namespace Global Assembly Assembly-CSharp.dll Load a new scene and set the data. public class LoadWorldScene : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour LoadWorldScene Fields _delayBeforeStart [SerializeField] private float _delayBeforeStart Field Value float _onEndTransition [SerializeField] private UnityEvent _onEndTransition Field Value UnityEvent _onStartTransition [SerializeField] private UnityEvent _onStartTransition Field Value UnityEvent _player [SerializeField] private Transform _player Field Value Transform _playerStatus [SerializeField] private PlayerStatus _playerStatus Field Value PlayerStatus Methods Awake() private void Awake() ChangeScene(string, Scene, Vector3) public void ChangeScene(string newSceneName, Scene previousScene, Vector3 characterPosition) Parameters newSceneName string previousScene Scene characterPosition Vector3 DelayBeforeStart(string, Scene, Vector3) private IEnumerator DelayBeforeStart(string newSceneName, Scene previousScene, Vector3 characterPosition) Parameters newSceneName string previousScene Scene characterPosition Vector3 Returns IEnumerator OnSceneLoaded(Vector3) private void OnSceneLoaded(Vector3 characterPosition) Parameters characterPosition Vector3 OnSceneUnloaded(string, Vector3) private void OnSceneUnloaded(string newSceneName, Vector3 characterPosition) Parameters newSceneName string characterPosition Vector3"
  },
  "api/Global.MachineNetworkController.html": {
    "href": "api/Global.MachineNetworkController.html",
    "title": "Class MachineNetworkController | Lofi City Documentation",
    "keywords": "Class MachineNetworkController Namespace Global Assembly Assembly-CSharp.dll Handles the different types of connected machine networks. public class MachineNetworkController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MachineNetworkController Fields _connectedNetworks private Dictionary<Enum_MachineCategory, IMachineNetwork> _connectedNetworks Field Value Dictionary<Enum_MachineCategory, IMachineNetwork> _convertNetwork [SerializeField] private MachineNetwork_Craft _convertNetwork Field Value MachineNetwork_Craft _machineNetworks [SerializeField] private List<SerializableInterface<IMachineNetwork>> _machineNetworks Field Value List<SerializableInterface<IMachineNetwork>> Methods AddMachine(Scriptable_Machine, Vector3Int) public NetworkedMachineBase AddMachine(Scriptable_Machine machineType, Vector3Int position) Parameters machineType Scriptable_Machine position Vector3Int Returns NetworkedMachineBase Awake() private void Awake() GetAllMachines() public Dictionary<Scriptable_Machine, List<NetworkedMachineBase>> GetAllMachines() Returns Dictionary<Scriptable_Machine, List<NetworkedMachineBase>> GetNetwork(Enum_MachineCategory) public IMachineNetwork GetNetwork(Enum_MachineCategory category) Parameters category Enum_MachineCategory Returns IMachineNetwork RemoveMachine(NetworkedMachineBase) public void RemoveMachine(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase"
  },
  "api/Global.MachineNetwork_Craft.html": {
    "href": "api/Global.MachineNetwork_Craft.html",
    "title": "Class MachineNetwork_Craft | Lofi City Documentation",
    "keywords": "Class MachineNetwork_Craft Namespace Global Assembly Assembly-CSharp.dll Store and retreive networked machines. Different dictionaries are used for fast access using different criteria. public class MachineNetwork_Craft : MonoBehaviour, IMachineNetwork Inheritance object Object Component Behaviour MonoBehaviour MachineNetwork_Craft Implements IMachineNetwork Fields _inventory [SerializeField] private SerializableInterface<IInventory> _inventory Field Value SerializableInterface<IInventory> _machineTypeByOutput private Dictionary<Scriptable_Item, Scriptable_Machine> _machineTypeByOutput Field Value Dictionary<Scriptable_Item, Scriptable_Machine> _networkMachinesByType private Dictionary<Scriptable_Machine, List<NetworkedMachine_Craft>> _networkMachinesByType Field Value Dictionary<Scriptable_Machine, List<NetworkedMachine_Craft>> _networkedMachineByPosition private Dictionary<Vector3Int, NetworkedMachineBase> _networkedMachineByPosition Field Value Dictionary<Vector3Int, NetworkedMachineBase> _onCraftableItemAdded private Action<Scriptable_Item> _onCraftableItemAdded Field Value Action<Scriptable_Item> _onCraftingMachineAdded private Action<NetworkedMachineBase> _onCraftingMachineAdded Field Value Action<NetworkedMachineBase> _onCraftingMachineRemoved private Action<NetworkedMachineBase> _onCraftingMachineRemoved Field Value Action<NetworkedMachineBase> _onNetworkMachineCompleted private Action<NetworkedMachineBase> _onNetworkMachineCompleted Field Value Action<NetworkedMachineBase> Properties MachineTypeByOutput public Dictionary<Scriptable_Item, Scriptable_Machine> MachineTypeByOutput { get; } Property Value Dictionary<Scriptable_Item, Scriptable_Machine> NetworkMachinesByType public Dictionary<Scriptable_Machine, List<NetworkedMachine_Craft>> NetworkMachinesByType { get; } Property Value Dictionary<Scriptable_Machine, List<NetworkedMachine_Craft>> NetworkedMachineByPosition public Dictionary<Vector3Int, NetworkedMachineBase> NetworkedMachineByPosition { get; } Property Value Dictionary<Vector3Int, NetworkedMachineBase> Methods AddMachine(Scriptable_Machine, Vector3Int) public NetworkedMachineBase AddMachine(Scriptable_Machine machineTypeGeneric, Vector3Int position) Parameters machineTypeGeneric Scriptable_Machine position Vector3Int Returns NetworkedMachineBase Awake() private void Awake() GetAvailableMachine(Scriptable_Machine) public NetworkedMachine_Craft GetAvailableMachine(Scriptable_Machine machineType) Parameters machineType Scriptable_Machine Returns NetworkedMachine_Craft GetMachineCategory() public Enum_MachineCategory GetMachineCategory() Returns Enum_MachineCategory GetMachines() public Dictionary<Scriptable_Machine, List<NetworkedMachineBase>> GetMachines() Returns Dictionary<Scriptable_Machine, List<NetworkedMachineBase>> GetMachinesOfType(Scriptable_Machine) public List<NetworkedMachineBase> GetMachinesOfType(Scriptable_Machine machineType) Parameters machineType Scriptable_Machine Returns List<NetworkedMachineBase> GetRecipeForItem(Scriptable_Item) public Scriptable_CraftingRecipe GetRecipeForItem(Scriptable_Item item) Parameters item Scriptable_Item Returns Scriptable_CraftingRecipe MaxCraftingQuantity(Scriptable_Item, Scriptable_CraftingRecipe) public int MaxCraftingQuantity(Scriptable_Item item, Scriptable_CraftingRecipe recipe) Parameters item Scriptable_Item recipe Scriptable_CraftingRecipe Returns int RemoveMachine(NetworkedMachineBase) public void RemoveMachine(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase SubscribeToMachineAdded(Action<NetworkedMachineBase>) public void SubscribeToMachineAdded(Action<NetworkedMachineBase> action) Parameters action Action<NetworkedMachineBase> SubscribeToMachineRemoved(Action<NetworkedMachineBase>) public void SubscribeToMachineRemoved(Action<NetworkedMachineBase> action) Parameters action Action<NetworkedMachineBase> SubscribeToNewMachineTypeAdded(Action<Scriptable_Item>) public void SubscribeToNewMachineTypeAdded(Action<Scriptable_Item> action) Parameters action Action<Scriptable_Item>"
  },
  "api/Global.MachineObjectBase.html": {
    "href": "api/Global.MachineObjectBase.html",
    "title": "Class MachineObjectBase | Lofi City Documentation",
    "keywords": "Class MachineObjectBase Namespace Global Assembly Assembly-CSharp.dll MachineObjects are the physical counterpart of networked machines This is used for adding new machines, interaction with the player and animations public abstract class MachineObjectBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MachineObjectBase Derived MachineObject_Craft Fields _conditionsBeforeWorking [SerializeField] private List<SerializableInterface<IActionCondition>> _conditionsBeforeWorking Field Value List<SerializableInterface<IActionCondition>> _currentStatusOfConditions private Dictionary<IActionCondition, bool> _currentStatusOfConditions Field Value Dictionary<IActionCondition, bool> _isFunctional protected bool _isFunctional Field Value bool _machine protected NetworkedMachineBase _machine Field Value NetworkedMachineBase Properties IsFunctional public bool IsFunctional { get; set; } Property Value bool Machine public NetworkedMachineBase Machine { get; } Property Value NetworkedMachineBase Methods AreConditionsMet() private bool AreConditionsMet() Returns bool Awake() private void Awake() GetMachineInstanceData() public abstract (Scriptable_Machine, Vector3Int) GetMachineInstanceData() Returns (Scriptable_Machine, Vector3Int) SetNetworkedMachine(NetworkedMachineBase) public virtual void SetNetworkedMachine(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase WaitForCondition(IActionCondition, bool) private void WaitForCondition(IActionCondition condition, bool isConditionMet) Parameters condition IActionCondition isConditionMet bool"
  },
  "api/Global.MachineObject_Craft.html": {
    "href": "api/Global.MachineObject_Craft.html",
    "title": "Class MachineObject_Craft | Lofi City Documentation",
    "keywords": "Class MachineObject_Craft Namespace Global Assembly Assembly-CSharp.dll Machines that can craft outputs from requirements. public class MachineObject_Craft : MachineObjectBase Inheritance object Object Component Behaviour MonoBehaviour MachineObjectBase MachineObject_Craft Inherited Members MachineObjectBase._conditionsBeforeWorking MachineObjectBase._currentStatusOfConditions MachineObjectBase._isFunctional MachineObjectBase._machine MachineObjectBase.IsFunctional MachineObjectBase.Machine MachineObjectBase.Awake() MachineObjectBase.WaitForCondition(IActionCondition, bool) MachineObjectBase.AreConditionsMet() Fields _machineData [SerializeField] private Scriptable_CraftingMachine _machineData Field Value Scriptable_CraftingMachine Methods GetMachineInstanceData() public override (Scriptable_Machine, Vector3Int) GetMachineInstanceData() Returns (Scriptable_Machine, Vector3Int) SetNetworkedMachine(NetworkedMachineBase) public override void SetNetworkedMachine(NetworkedMachineBase machine) Parameters machine NetworkedMachineBase UpdateVisual(NetworkedMachine_Craft, bool) private void UpdateVisual(NetworkedMachine_Craft machine, bool status) Parameters machine NetworkedMachine_Craft status bool"
  },
  "api/Global.MergedPosition-1.html": {
    "href": "api/Global.MergedPosition-1.html",
    "title": "Class MergedPosition<U> | Lofi City Documentation",
    "keywords": "Class MergedPosition<U> Namespace Global Assembly Assembly-CSharp.dll public class MergedPosition<U> : MergedPosition Type Parameters U Inheritance object MergedPosition MergedPosition<U> Inherited Members MergedPosition.X MergedPosition.StartY MergedPosition.EndY Constructors MergedPosition(U, int, int, int) public MergedPosition(U data, int x, int startY, int endY) Parameters data U x int startY int endY int Fields Data public U Data Field Value U"
  },
  "api/Global.MergedPosition.html": {
    "href": "api/Global.MergedPosition.html",
    "title": "Class MergedPosition | Lofi City Documentation",
    "keywords": "Class MergedPosition Namespace Global Assembly Assembly-CSharp.dll public class MergedPosition Inheritance object MergedPosition Derived MergedPosition<U> Constructors MergedPosition(int, int, int) public MergedPosition(int x, int startY, int endY) Parameters x int startY int endY int Fields EndY public int EndY Field Value int StartY public int StartY Field Value int X public int X Field Value int"
  },
  "api/Global.MovementManager.html": {
    "href": "api/Global.MovementManager.html",
    "title": "Class MovementManager | Lofi City Documentation",
    "keywords": "Class MovementManager Namespace Global Assembly Assembly-CSharp.dll The movement system changes between different states (IMovementType) This script responds to player input and switches between different modes public class MovementManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour MovementManager Fields _animator [SerializeField] private Player_Animation _animator Field Value Player_Animation _currentDirection private Vector2 _currentDirection Field Value Vector2 _currentMovement private IMovementType _currentMovement Field Value IMovementType _isMoving private bool _isMoving Field Value bool _movementTypeNames [SerializeField] private List<string> _movementTypeNames Field Value List<string> _movementTypes private Dictionary<string, IMovementType> _movementTypes Field Value Dictionary<string, IMovementType> _onLayerChange private Action<SceneLayer> _onLayerChange Field Value Action<SceneLayer> _playerStatus [SerializeField] private PlayerStatus _playerStatus Field Value PlayerStatus _transform [SerializeField] private Transform _transform Field Value Transform _walkingState [SerializeField] private MovementType_Walk _walkingState Field Value MovementType_Walk Properties CurrentMovement public IMovementType CurrentMovement { get; } Property Value IMovementType Methods Awake() private void Awake() OnMove(CallbackContext) public void OnMove(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext OnSceneLayerChanged(SceneLayer) public void OnSceneLayerChanged(SceneLayer newLayer) Parameters newLayer SceneLayer SetState(IMovementType) public void SetState(IMovementType newMovement) Parameters newMovement IMovementType SetStateByName(string) public void SetStateByName(string name) Parameters name string"
  },
  "api/Global.MovementType_Walk.html": {
    "href": "api/Global.MovementType_Walk.html",
    "title": "Class MovementType_Walk | Lofi City Documentation",
    "keywords": "Class MovementType_Walk Namespace Global Assembly Assembly-CSharp.dll This is the default movement system. The player can freely move arount a layer and climb 1 block high steps public class MovementType_Walk : MonoBehaviour, IMovementType Inheritance object Object Component Behaviour MonoBehaviour MovementType_Walk Implements IMovementType Fields _animator [SerializeField] private Player_Animation _animator Field Value Player_Animation _changeInLayer private Action<SceneLayer> _changeInLayer Field Value Action<SceneLayer> _changeInStep private Action<int> _changeInStep Field Value Action<int> _changedMovement private bool _changedMovement Field Value bool _currentDirection private Vector2 _currentDirection Field Value Vector2 _currentOffset private int _currentOffset Field Value int _movementSpeed [SerializeField] private float _movementSpeed Field Value float _playerStatus private PlayerStatus _playerStatus Field Value PlayerStatus _playerTransform private Transform _playerTransform Field Value Transform _tileLeeway [SerializeField] private float _tileLeeway Field Value float Methods ChangedDirection(Vector2) public void ChangedDirection(Vector2 currentDirection) Parameters currentDirection Vector2 FloorVector2(Vector2) private Vector2Int FloorVector2(Vector2 position) Parameters position Vector2 Returns Vector2Int GetTileAtPosition(Vector2Int) private Scriptable_PathTile GetTileAtPosition(Vector2Int playerPosition) Parameters playerPosition Vector2Int Returns Scriptable_PathTile Movement() public IEnumerator Movement() Returns IEnumerator Setup(Transform) public void Setup(Transform transform) Parameters transform Transform SubscribeToChangeInStep(Action<int>) public void SubscribeToChangeInStep(Action<int> action) Parameters action Action<int> SubscribeToChangedSceneLayer(Action<SceneLayer>) public void SubscribeToChangedSceneLayer(Action<SceneLayer> onLayerChange) Parameters onLayerChange Action<SceneLayer> checkIfPositionIsValid(Vector2) private bool checkIfPositionIsValid(Vector2 newPosition) Parameters newPosition Vector2 Returns bool"
  },
  "api/Global.NPCData.html": {
    "href": "api/Global.NPCData.html",
    "title": "Class NPCData | Lofi City Documentation",
    "keywords": "Class NPCData Namespace Global Assembly Assembly-CSharp.dll public class NPCData : ScriptableObject Inheritance object Object ScriptableObject NPCData Fields _interest [SerializeField] private Enum_Interests _interest Field Value Enum_Interests _placesLiked [SerializeField] private List<Enum_PlaceAttributes> _placesLiked Field Value List<Enum_PlaceAttributes>"
  },
  "api/Global.NPCManager.html": {
    "href": "api/Global.NPCManager.html",
    "title": "Class NPCManager | Lofi City Documentation",
    "keywords": "Class NPCManager Namespace Global Assembly Assembly-CSharp.dll Load and store all NPCs in the Manager scene. public class NPCManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPCManager Fields _loadedNPCs private List<NPC_GlobalData> _loadedNPCs Field Value List<NPC_GlobalData> _npcs [SerializeField] private List<NPC_GlobalData> _npcs Field Value List<NPC_GlobalData> Properties LoadedNPCs public List<NPC_GlobalData> LoadedNPCs { get; } Property Value List<NPC_GlobalData> Npcs public List<NPC_GlobalData> Npcs { get; } Property Value List<NPC_GlobalData> Methods Awake() private void Awake() GetNPCsInScene(Enum_SceneName) public List<NPC_GlobalData> GetNPCsInScene(Enum_SceneName sceneName) Parameters sceneName Enum_SceneName Returns List<NPC_GlobalData>"
  },
  "api/Global.NPCVisuals_Directional.html": {
    "href": "api/Global.NPCVisuals_Directional.html",
    "title": "Class NPCVisuals_Directional | Lofi City Documentation",
    "keywords": "Class NPCVisuals_Directional Namespace Global Assembly Assembly-CSharp.dll public class NPCVisuals_Directional : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPCVisuals_Directional Fields _baseSkinRenderers [SerializeField] private List<SpriteRenderer> _baseSkinRenderers Field Value List<SpriteRenderer> _clothing [SerializeField] private InspectableDictionary<Enum_NPCVisualElements, List<SpriteResolver>> _clothing Field Value InspectableDictionary<Enum_NPCVisualElements, List<SpriteResolver>> Methods SetClothes(Enum_NPCVisualElements, string) public void SetClothes(Enum_NPCVisualElements element, string category) Parameters element Enum_NPCVisualElements category string SetSkinColour(Color) public void SetSkinColour(Color color) Parameters color Color"
  },
  "api/Global.NPC_Activity.html": {
    "href": "api/Global.NPC_Activity.html",
    "title": "Class NPC_Activity | Lofi City Documentation",
    "keywords": "Class NPC_Activity Namespace Global Assembly Assembly-CSharp.dll Determine the activity and attraction that an NPC is currently at or moving to. public class NPC_Activity : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_Activity Fields _attractions [SerializeField] private GlobalSceneData _attractions Field Value GlobalSceneData _chosenAttraction private (Enum_SceneName, Scriptable_Attraction) _chosenAttraction Field Value (Enum_SceneName, Scriptable_Attraction) _dateTimeManager private DateTimeManager _dateTimeManager Field Value DateTimeManager _newActivitySet private Action _newActivitySet Field Value Action _previousAttraction private Scriptable_Attraction _previousAttraction Field Value Scriptable_Attraction _sceneTracker [SerializeField] private NPC_SceneTracker _sceneTracker Field Value NPC_SceneTracker _schedule [SerializeField] private Scriptable_NPCSchedule _schedule Field Value Scriptable_NPCSchedule _scheduler private ScheduleEvent _scheduler Field Value ScheduleEvent _setActivity private Action<TimeSlot> _setActivity Field Value Action<TimeSlot> Properties ChosenAttraction public (Enum_SceneName, Scriptable_Attraction) ChosenAttraction { get; } Property Value (Enum_SceneName, Scriptable_Attraction) PreviousAttraction public Scriptable_Attraction PreviousAttraction { get; } Property Value Scriptable_Attraction Methods CalculateAttractionScore(int, Scriptable_Attraction) private int CalculateAttractionScore(int distance, Scriptable_Attraction attraction) Parameters distance int attraction Scriptable_Attraction Returns int SelectActivity(Enum_ActivityType) private (Enum_SceneName, Scriptable_Attraction) SelectActivity(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns (Enum_SceneName, Scriptable_Attraction) SetActivity(TimeSlot) private void SetActivity(TimeSlot startTime) Parameters startTime TimeSlot Start() private void Start() SubscribeToNewActivity(Action) public void SubscribeToNewActivity(Action action) Parameters action Action UnsubscribeFromNewActivity(Action) public void UnsubscribeFromNewActivity(Action action) Parameters action Action"
  },
  "api/Global.NPC_ActivityBase.html": {
    "href": "api/Global.NPC_ActivityBase.html",
    "title": "Class NPC_ActivityBase | Lofi City Documentation",
    "keywords": "Class NPC_ActivityBase Namespace Global Assembly Assembly-CSharp.dll Determine what the NPC is currently doing. Can select the most appropriate attraction. public abstract class NPC_ActivityBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_ActivityBase Derived NamedNPC_Activity RandomNPC_Activity Fields _chosenAttraction protected Scriptable_Attraction _chosenAttraction Field Value Scriptable_Attraction _dateTimeManager protected DateTimeManager _dateTimeManager Field Value DateTimeManager _newActivitySet protected Action _newActivitySet Field Value Action _personality [SerializeField] protected SerializableInterface<INPC_Personality> _personality Field Value SerializableInterface<INPC_Personality> _previousAttraction protected Scriptable_Attraction _previousAttraction Field Value Scriptable_Attraction _random private Random _random Field Value Random _schedule [SerializeField] protected Scriptable_Schedule<Enum_ActivityType> _schedule Field Value Scriptable_Schedule<Enum_ActivityType> _scheduler protected ScheduleEvent _scheduler Field Value ScheduleEvent _setActivity protected Action<TimeSlot> _setActivity Field Value Action<TimeSlot> Properties ChosenAttraction public Scriptable_Attraction ChosenAttraction { get; } Property Value Scriptable_Attraction PreviousAttraction public Scriptable_Attraction PreviousAttraction { get; } Property Value Scriptable_Attraction Methods CalculateAttractionScore(Scriptable_Attraction) private int CalculateAttractionScore(Scriptable_Attraction attraction) Parameters attraction Scriptable_Attraction Returns int GetAllAttractions(Enum_ActivityType) protected abstract List<Scriptable_Attraction> GetAllAttractions(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns List<Scriptable_Attraction> GoToNextActivity() public void GoToNextActivity() SelectAttraction(Enum_ActivityType) protected Scriptable_Attraction SelectAttraction(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns Scriptable_Attraction SetActivity(TimeSlot) public abstract void SetActivity(TimeSlot startTime) Parameters startTime TimeSlot SetSpecificAttraction(Scriptable_Attraction) public abstract void SetSpecificAttraction(Scriptable_Attraction attraction) Parameters attraction Scriptable_Attraction Setup() public virtual void Setup() SubscribeToNewActivity(Action) public void SubscribeToNewActivity(Action action) Parameters action Action UnsubscribeFromNewActivity(Action) public void UnsubscribeFromNewActivity(Action action) Parameters action Action"
  },
  "api/Global.NPC_Animations.html": {
    "href": "api/Global.NPC_Animations.html",
    "title": "Class NPC_Animations | Lofi City Documentation",
    "keywords": "Class NPC_Animations Namespace Global Assembly Assembly-CSharp.dll public class NPC_Animations : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_Animations Fields _npcAnimator [SerializeField] private Animator _npcAnimator Field Value Animator _npcVisualObject [SerializeField] private GameObject _npcVisualObject Field Value GameObject _npcVisuals [SerializeField] private SetupNPCVisuals _npcVisuals Field Value SetupNPCVisuals _previousDirection private Enum_Directions _previousDirection Field Value Enum_Directions Methods PlayAnimation(Enum_NPCAnimations) public void PlayAnimation(Enum_NPCAnimations animation) Parameters animation Enum_NPCAnimations PlayAnimationWithDirection(Enum_NPCAnimations, Enum_Directions) public void PlayAnimationWithDirection(Enum_NPCAnimations animation, Enum_Directions direction) Parameters animation Enum_NPCAnimations direction Enum_Directions SetDirection(int, int) public void SetDirection(int x, int y) Parameters x int y int SetStep(int) public void SetStep(int step) Parameters step int"
  },
  "api/Global.NPC_GlobalData.html": {
    "href": "api/Global.NPC_GlobalData.html",
    "title": "Class NPC_GlobalData | Lofi City Documentation",
    "keywords": "Class NPC_GlobalData Namespace Global Assembly Assembly-CSharp.dll Points to all the components of a particular NPC in the manager scene. public class NPC_GlobalData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_GlobalData Fields _activity [SerializeField] private NPC_ActivityBase _activity Field Value NPC_ActivityBase _sceneTracker [SerializeField] private NamedNPC_SceneTracker _sceneTracker Field Value NamedNPC_SceneTracker _schedule [SerializeField] private Scriptable_Schedule<Enum_ActivityType> _schedule Field Value Scriptable_Schedule<Enum_ActivityType> Properties Activity public NPC_ActivityBase Activity { get; } Property Value NPC_ActivityBase SceneTracker public NamedNPC_SceneTracker SceneTracker { get; } Property Value NamedNPC_SceneTracker"
  },
  "api/Global.NPC_Movement.html": {
    "href": "api/Global.NPC_Movement.html",
    "title": "Class NPC_Movement | Lofi City Documentation",
    "keywords": "Class NPC_Movement Namespace Global Assembly Assembly-CSharp.dll Determines the exact position where an NPC should move to based on their current activity. Handles NPCs and the Player leaving the scene. public class NPC_Movement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_Movement Fields _activity private NPC_Activity _activity Field Value NPC_Activity _attractions private AttractionsInScene _attractions Field Value AttractionsInScene _pathMovement [SerializeField] private PathBasedMovement _pathMovement Field Value PathBasedMovement _tracker private NPC_SceneTracker _tracker Field Value NPC_SceneTracker Methods GetEndPosition() private Vector3Int GetEndPosition() Returns Vector3Int GetStartPosition() private Vector3Int GetStartPosition() Returns Vector3Int OnDisable() private void OnDisable() OnMovementFinished() private void OnMovementFinished() OnNewActivity() public void OnNewActivity() OnSceneChange(Enum_SceneName) private void OnSceneChange(Enum_SceneName newScene) Parameters newScene Enum_SceneName Setup(NPC_GlobalData, AttractionsInScene) public void Setup(NPC_GlobalData npcData, AttractionsInScene attractions) Parameters npcData NPC_GlobalData attractions AttractionsInScene"
  },
  "api/Global.NPC_MovementBase.html": {
    "href": "api/Global.NPC_MovementBase.html",
    "title": "Class NPC_MovementBase | Lofi City Documentation",
    "keywords": "Class NPC_MovementBase Namespace Global Assembly Assembly-CSharp.dll Determines the exact position where an NPC should move to based on their current activity. Handles NPCs and the Player leaving the scene. public abstract class NPC_MovementBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_MovementBase Derived NamedNPC_Movement RandomNPC_Movement Fields _activity protected NPC_ActivityBase _activity Field Value NPC_ActivityBase _animator [SerializeField] protected NPC_Animations _animator Field Value NPC_Animations _attractions protected AttractionsInScene _attractions Field Value AttractionsInScene _currentPointOfInterest protected IPointOfInterest _currentPointOfInterest Field Value IPointOfInterest _onMovementStart private Action<NPC_MovementBase> _onMovementStart Field Value Action<NPC_MovementBase> _pathMovement [SerializeField] protected PathBasedMovement _pathMovement Field Value PathBasedMovement _previousPointOfInterest protected IPointOfInterest _previousPointOfInterest Field Value IPointOfInterest _sorting [SerializeField] protected ChangeSortingLayer _sorting Field Value ChangeSortingLayer Properties CurrentPointOfInterest public IPointOfInterest CurrentPointOfInterest { get; } Property Value IPointOfInterest PreviousPointOfInterest public IPointOfInterest PreviousPointOfInterest { get; } Property Value IPointOfInterest Methods GetNextDestination() protected abstract IPointOfInterest GetNextDestination() Returns IPointOfInterest GetStartingProgress() protected abstract float GetStartingProgress() Returns float MoveToAttraction(IPointOfInterest) public void MoveToAttraction(IPointOfInterest element) Parameters element IPointOfInterest OnActivityChanged() protected void OnActivityChanged() OnDirectionChange(Vector2Int) protected void OnDirectionChange(Vector2Int direction) Parameters direction Vector2Int OnMovementFinished() protected virtual void OnMovementFinished() OnStepChange(int) protected void OnStepChange(int step) Parameters step int Setup(NPC_ActivityBase) public virtual void Setup(NPC_ActivityBase activity) Parameters activity NPC_ActivityBase SubscribeToMovementStart(Action<NPC_MovementBase>) public void SubscribeToMovementStart(Action<NPC_MovementBase> action) Parameters action Action<NPC_MovementBase>"
  },
  "api/Global.NPC_Need.html": {
    "href": "api/Global.NPC_Need.html",
    "title": "Class NPC_Need | Lofi City Documentation",
    "keywords": "Class NPC_Need Namespace Global Assembly Assembly-CSharp.dll Part of the NPC Utility AI. Determine how much a certain action is needed. 0 means it is not needed, 100 means it is urgent. public class NPC_Need Inheritance object NPC_Need Constructors NPC_Need(Enum_ActivityType, int, int) public NPC_Need(Enum_ActivityType needType, int status, int importance) Parameters needType Enum_ActivityType status int importance int Fields _currentState private int _currentState Field Value int _importance private int _importance Field Value int _needType private Enum_ActivityType _needType Field Value Enum_ActivityType Methods AdjustStatus(int) public void AdjustStatus(int difference) Parameters difference int GetValue() public int GetValue() Returns int"
  },
  "api/Global.NPC_SceneTracker.html": {
    "href": "api/Global.NPC_SceneTracker.html",
    "title": "Class NPC_SceneTracker | Lofi City Documentation",
    "keywords": "Class NPC_SceneTracker Namespace Global Assembly Assembly-CSharp.dll Simulates NPC Movement between unloaded scenes and stores their current path. public class NPC_SceneTracker : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_SceneTracker Fields _currentMovement private IEnumerator _currentMovement Field Value IEnumerator _currentPath private List<Enum_SceneName> _currentPath Field Value List<Enum_SceneName> _currentScene [SerializeField] private Enum_SceneName _currentScene Field Value Enum_SceneName _data private NPC_GlobalData _data Field Value NPC_GlobalData _movementProgress [SerializeField] private float _movementProgress Field Value float _onSceneChange private Action<Enum_SceneName> _onSceneChange Field Value Action<Enum_SceneName> _sceneData [SerializeField] private GlobalSceneData _sceneData Field Value GlobalSceneData _startingScene [SerializeField] private Enum_SceneName _startingScene Field Value Enum_SceneName Properties CurrentPath public List<Enum_SceneName> CurrentPath { get; } Property Value List<Enum_SceneName> CurrentScene public Enum_SceneName CurrentScene { get; } Property Value Enum_SceneName MovementProgress public float MovementProgress { get; set; } Property Value float Methods Awake() private void Awake() Move(List<Enum_SceneName>) private IEnumerator Move(List<Enum_SceneName> path) Parameters path List<Enum_SceneName> Returns IEnumerator MoveToScene(Enum_SceneName) public void MoveToScene(Enum_SceneName destination) Parameters destination Enum_SceneName SubscribeToSceneChange(Action<Enum_SceneName>) public void SubscribeToSceneChange(Action<Enum_SceneName> action) Parameters action Action<Enum_SceneName> UnsubscribeFromSceneChange(Action<Enum_SceneName>) public void UnsubscribeFromSceneChange(Action<Enum_SceneName> action) Parameters action Action<Enum_SceneName>"
  },
  "api/Global.NPC_ScheduleSlot-1.html": {
    "href": "api/Global.NPC_ScheduleSlot-1.html",
    "title": "Class NPC_ScheduleSlot<T> | Lofi City Documentation",
    "keywords": "Class NPC_ScheduleSlot<T> Namespace Global Assembly Assembly-CSharp.dll Denotes what activity an NPC should be doing at a certain time. [Serializable] public class NPC_ScheduleSlot<T> Type Parameters T Inheritance object NPC_ScheduleSlot<T> Fields _data [SerializeField] private T _data Field Value T _startTime [SerializeField] private TimeSlot _startTime Field Value TimeSlot Properties Data public T Data { get; } Property Value T StartTime public TimeSlot StartTime { get; } Property Value TimeSlot"
  },
  "api/Global.NPC_ScheduleSlot.html": {
    "href": "api/Global.NPC_ScheduleSlot.html",
    "title": "Class NPC_ScheduleSlot | Lofi City Documentation",
    "keywords": "Class NPC_ScheduleSlot Namespace Global Assembly Assembly-CSharp.dll Denotes what activity an NPC should be doing at a certain time. [Serializable] public class NPC_ScheduleSlot Inheritance object NPC_ScheduleSlot Fields _activityType [SerializeField] private Enum_ActivityType _activityType Field Value Enum_ActivityType _startTime [SerializeField] private TimeSlot _startTime Field Value TimeSlot Properties ActivityType public Enum_ActivityType ActivityType { get; } Property Value Enum_ActivityType StartTime public TimeSlot StartTime { get; } Property Value TimeSlot"
  },
  "api/Global.NPC_Spawner.html": {
    "href": "api/Global.NPC_Spawner.html",
    "title": "Class NPC_Spawner | Lofi City Documentation",
    "keywords": "Class NPC_Spawner Namespace Global Assembly Assembly-CSharp.dll Instantiates the NPCs when either they or the player enters a scene. public class NPC_Spawner : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NPC_Spawner Fields _attractions [SerializeField] private AttractionsInScene _attractions Field Value AttractionsInScene _currentScene private Enum_SceneName _currentScene Field Value Enum_SceneName _prefabNPC [SerializeField] private GameObject _prefabNPC Field Value GameObject _sceneLayers [SerializeField] private AllSceneLayers _sceneLayers Field Value AllSceneLayers Methods CreateNPCAtPosition(Vector3) private GameObject CreateNPCAtPosition(Vector3 position) Parameters position Vector3 Returns GameObject OnNPCEnter(NPC_GlobalData) public void OnNPCEnter(NPC_GlobalData data) Parameters data NPC_GlobalData Start() private void Start()"
  },
  "api/Global.NamedNPC_Activity.html": {
    "href": "api/Global.NamedNPC_Activity.html",
    "title": "Class NamedNPC_Activity | Lofi City Documentation",
    "keywords": "Class NamedNPC_Activity Namespace Global Assembly Assembly-CSharp.dll Determine the activity and attraction that an NPC is currently at or moving to. public class NamedNPC_Activity : NPC_ActivityBase Inheritance object Object Component Behaviour MonoBehaviour NPC_ActivityBase NamedNPC_Activity Inherited Members NPC_ActivityBase._schedule NPC_ActivityBase._personality NPC_ActivityBase._dateTimeManager NPC_ActivityBase._scheduler NPC_ActivityBase._setActivity NPC_ActivityBase._newActivitySet NPC_ActivityBase._previousAttraction NPC_ActivityBase._chosenAttraction NPC_ActivityBase.ChosenAttraction NPC_ActivityBase.PreviousAttraction NPC_ActivityBase._random NPC_ActivityBase.Setup() NPC_ActivityBase.GoToNextActivity() NPC_ActivityBase.SelectAttraction(Enum_ActivityType) NPC_ActivityBase.CalculateAttractionScore(Scriptable_Attraction) NPC_ActivityBase.SubscribeToNewActivity(Action) NPC_ActivityBase.UnsubscribeFromNewActivity(Action) Fields _sceneData [SerializeField] private GlobalSceneData _sceneData Field Value GlobalSceneData Methods GetAllAttractions(Enum_ActivityType) protected override List<Scriptable_Attraction> GetAllAttractions(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns List<Scriptable_Attraction> SetActivity(TimeSlot) public override void SetActivity(TimeSlot startTime) Parameters startTime TimeSlot SetSpecificAttraction(Scriptable_Attraction) public override void SetSpecificAttraction(Scriptable_Attraction attraction) Parameters attraction Scriptable_Attraction Start() private void Start()"
  },
  "api/Global.NamedNPC_Movement.html": {
    "href": "api/Global.NamedNPC_Movement.html",
    "title": "Class NamedNPC_Movement | Lofi City Documentation",
    "keywords": "Class NamedNPC_Movement Namespace Global Assembly Assembly-CSharp.dll Move to an attraction or a scene exit. public class NamedNPC_Movement : NPC_MovementBase Inheritance object Object Component Behaviour MonoBehaviour NPC_MovementBase NamedNPC_Movement Inherited Members NPC_MovementBase._pathMovement NPC_MovementBase._animator NPC_MovementBase._sorting NPC_MovementBase._activity NPC_MovementBase._attractions NPC_MovementBase._currentPointOfInterest NPC_MovementBase._previousPointOfInterest NPC_MovementBase._onMovementStart NPC_MovementBase.CurrentPointOfInterest NPC_MovementBase.PreviousPointOfInterest NPC_MovementBase.Setup(NPC_ActivityBase) NPC_MovementBase.MoveToAttraction(IPointOfInterest) NPC_MovementBase.OnActivityChanged() NPC_MovementBase.OnDirectionChange(Vector2Int) NPC_MovementBase.OnStepChange(int) NPC_MovementBase.SubscribeToMovementStart(Action<NPC_MovementBase>) Fields _tracker private NamedNPC_SceneTracker _tracker Field Value NamedNPC_SceneTracker Methods GetNextDestination() protected override IPointOfInterest GetNextDestination() Returns IPointOfInterest GetStartingProgress() protected override float GetStartingProgress() Returns float OnDisable() private void OnDisable() OnMovementFinished() protected override void OnMovementFinished() SetTracker(NamedNPC_SceneTracker) public void SetTracker(NamedNPC_SceneTracker tracker) Parameters tracker NamedNPC_SceneTracker"
  },
  "api/Global.NamedNPC_Personality.html": {
    "href": "api/Global.NamedNPC_Personality.html",
    "title": "Class NamedNPC_Personality | Lofi City Documentation",
    "keywords": "Class NamedNPC_Personality Namespace Global Assembly Assembly-CSharp.dll public class NamedNPC_Personality : MonoBehaviour, INPC_Personality Inheritance object Object Component Behaviour MonoBehaviour NamedNPC_Personality Implements INPC_Personality Fields _interest [SerializeField] private Scriptable_Interest _interest Field Value Scriptable_Interest _personality [SerializeField] private Scriptable_Personality _personality Field Value Scriptable_Personality Methods GetCustomerData() public Customer GetCustomerData() Returns Customer GetInterest() public Scriptable_Interest GetInterest() Returns Scriptable_Interest GetPersonality() public Scriptable_Personality GetPersonality() Returns Scriptable_Personality GetPlacesLiked() public List<Enum_PlaceAttributes> GetPlacesLiked() Returns List<Enum_PlaceAttributes>"
  },
  "api/Global.NamedNPC_SceneTracker.html": {
    "href": "api/Global.NamedNPC_SceneTracker.html",
    "title": "Class NamedNPC_SceneTracker | Lofi City Documentation",
    "keywords": "Class NamedNPC_SceneTracker Namespace Global Assembly Assembly-CSharp.dll Simulates NPC Movement between unloaded scenes and stores their current path. public class NamedNPC_SceneTracker : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NamedNPC_SceneTracker Fields _activity [SerializeField] private NamedNPC_Activity _activity Field Value NamedNPC_Activity _currentMovement private IEnumerator _currentMovement Field Value IEnumerator _currentPath private List<Enum_SceneName> _currentPath Field Value List<Enum_SceneName> _currentScene private Enum_SceneName _currentScene Field Value Enum_SceneName _data private NPC_GlobalData _data Field Value NPC_GlobalData _movementProgress [SerializeField] private float _movementProgress Field Value float _onSceneChange private Action<Enum_SceneName> _onSceneChange Field Value Action<Enum_SceneName> _sceneData [SerializeField] private GlobalSceneData _sceneData Field Value GlobalSceneData _startingScene [SerializeField] private Enum_SceneName _startingScene Field Value Enum_SceneName Properties CurrentPath public List<Enum_SceneName> CurrentPath { get; } Property Value List<Enum_SceneName> CurrentScene public Enum_SceneName CurrentScene { get; } Property Value Enum_SceneName MovementProgress public float MovementProgress { get; set; } Property Value float Methods Awake() private void Awake() Move(List<Enum_SceneName>) private IEnumerator Move(List<Enum_SceneName> path) Parameters path List<Enum_SceneName> Returns IEnumerator MoveToScene() public void MoveToScene() SubscribeToSceneChange(Action<Enum_SceneName>) public void SubscribeToSceneChange(Action<Enum_SceneName> action) Parameters action Action<Enum_SceneName> UnsubscribeFromSceneChange(Action<Enum_SceneName>) public void UnsubscribeFromSceneChange(Action<Enum_SceneName> action) Parameters action Action<Enum_SceneName>"
  },
  "api/Global.NamedNPC_Spawner.html": {
    "href": "api/Global.NamedNPC_Spawner.html",
    "title": "Class NamedNPC_Spawner | Lofi City Documentation",
    "keywords": "Class NamedNPC_Spawner Namespace Global Assembly Assembly-CSharp.dll Instantiates the NPCs when either they or the player enters a scene. public class NamedNPC_Spawner : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour NamedNPC_Spawner Fields _attractions [SerializeField] private AttractionsInScene _attractions Field Value AttractionsInScene _currentScene private Enum_SceneName _currentScene Field Value Enum_SceneName _prefabNPC [SerializeField] private GameObject _prefabNPC Field Value GameObject _sceneLayers [SerializeField] private AllSceneLayers _sceneLayers Field Value AllSceneLayers Methods CreateNPCAtPosition(Vector3) private GameObject CreateNPCAtPosition(Vector3 position) Parameters position Vector3 Returns GameObject GetSpawnPosition(NPC_GlobalData) protected Vector3Int GetSpawnPosition(NPC_GlobalData npc) Parameters npc NPC_GlobalData Returns Vector3Int OnNPCEnter(NPC_GlobalData) public void OnNPCEnter(NPC_GlobalData npc) Parameters npc NPC_GlobalData Start() private void Start()"
  },
  "api/Global.NetworkedMachineBase.html": {
    "href": "api/Global.NetworkedMachineBase.html",
    "title": "Class NetworkedMachineBase | Lofi City Documentation",
    "keywords": "Class NetworkedMachineBase Namespace Global Assembly Assembly-CSharp.dll A virtual representation of a Machine Object connected to a network [Serializable] public abstract class NetworkedMachineBase Inheritance object NetworkedMachineBase Derived NetworkedMachine_Craft Fields _machineType protected Scriptable_Machine _machineType Field Value Scriptable_Machine _position protected Vector3Int _position Field Value Vector3Int Properties MachineType public Scriptable_Machine MachineType { get; set; } Property Value Scriptable_Machine Position public Vector3Int Position { get; set; } Property Value Vector3Int"
  },
  "api/Global.NetworkedMachine_Craft.html": {
    "href": "api/Global.NetworkedMachine_Craft.html",
    "title": "Class NetworkedMachine_Craft | Lofi City Documentation",
    "keywords": "Class NetworkedMachine_Craft Namespace Global Assembly Assembly-CSharp.dll Crafting machines are busy while they are crafting an item. public class NetworkedMachine_Craft : NetworkedMachineBase Inheritance object NetworkedMachineBase NetworkedMachine_Craft Inherited Members NetworkedMachineBase._position NetworkedMachineBase._machineType NetworkedMachineBase.MachineType NetworkedMachineBase.Position Constructors NetworkedMachine_Craft(Scriptable_CraftingMachine, Vector3Int) public NetworkedMachine_Craft(Scriptable_CraftingMachine machineType, Vector3Int position) Parameters machineType Scriptable_CraftingMachine position Vector3Int Fields _isBusy protected bool _isBusy Field Value bool _onStatusChange private Action<NetworkedMachine_Craft, bool> _onStatusChange Field Value Action<NetworkedMachine_Craft, bool> Properties IsBusy public bool IsBusy { get; } Property Value bool Methods EndProcess() public void EndProcess() GetProcessingTime(Scriptable_CraftingRecipe) public SpecificDateAndTime GetProcessingTime(Scriptable_CraftingRecipe recipe) Parameters recipe Scriptable_CraftingRecipe Returns SpecificDateAndTime StartProcess() public void StartProcess() SubscribeToStatusChange(Action<NetworkedMachine_Craft, bool>) public void SubscribeToStatusChange(Action<NetworkedMachine_Craft, bool> action) Parameters action Action<NetworkedMachine_Craft, bool>"
  },
  "api/Global.NullLogger.html": {
    "href": "api/Global.NullLogger.html",
    "title": "Class NullLogger | Lofi City Documentation",
    "keywords": "Class NullLogger Namespace Global Assembly YarnSpinner.Unity.SourceCodeGenerator.dll public class NullLogger : ILogger Inheritance object NullLogger Implements ILogger Methods Dispose() public void Dispose() Write(object) public void Write(object text) Parameters text object WriteLine(object) public void WriteLine(object text) Parameters text object"
  },
  "api/Global.ObjectLayerBase.html": {
    "href": "api/Global.ObjectLayerBase.html",
    "title": "Class ObjectLayerBase | Lofi City Documentation",
    "keywords": "Class ObjectLayerBase Namespace Global Assembly Assembly-CSharp.dll Object layers store grid objects at the same Z position for more efficient interaction between them. They allow for adding and retrieving objects at a certain position. public abstract class ObjectLayerBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ObjectLayerBase Derived GridBasedObjectLayer ListBasedObjectLayer Fields _onObjectChanged protected Action<GridObject> _onObjectChanged Field Value Action<GridObject> _positionSubscribers protected Dictionary<Vector2Int, List<Action<GridObject>>> _positionSubscribers Field Value Dictionary<Vector2Int, List<Action<GridObject>>> _zPosition protected int _zPosition Field Value int layerType [SerializeField] protected Enum_ObjectLayerType layerType Field Value Enum_ObjectLayerType Methods AlertSubscribers(Vector2Int, GridObject) protected void AlertSubscribers(Vector2Int position, GridObject objectPlaced) Parameters position Vector2Int objectPlaced GridObject GetAllObjects() public abstract List<GridObject> GetAllObjects() Returns List<GridObject> GetLayerType() There can be multiple object layers at a certain height using scene layers. The layer type can distinguish them. public Enum_ObjectLayerType GetLayerType() Returns Enum_ObjectLayerType GetObjectAtPosition(Vector2Int) public abstract GridObject GetObjectAtPosition(Vector2Int position) Parameters position Vector2Int Returns GridObject GetObjectsInArea(Vector2Int, Vector2Int) public abstract List<GridObject> GetObjectsInArea(Vector2Int position, Vector2Int size) Parameters position Vector2Int size Vector2Int Returns List<GridObject> GetZPosition() public int GetZPosition() Returns int RemoveObject(Vector2Int) public abstract void RemoveObject(Vector2Int position) Parameters position Vector2Int SetObject(Vector2Int, object) Setting an object will remove any existing object at that position. public abstract GridObject SetObject(Vector2Int position, object objectPrefab) Parameters position Vector2Int objectPrefab object Returns GridObject SetObject(Vector2Int, Vector2Int, object) public abstract GridObject SetObject(Vector2Int position, Vector2Int size, object objectPrefab) Parameters position Vector2Int size Vector2Int objectPrefab object Returns GridObject SetZPosition(int) public void SetZPosition(int zPosition) Parameters zPosition int SubscribeToChangeAtPosition(Vector2Int, Action<GridObject>) Invoke a given UnityAction when a change occurs at a specific position public void SubscribeToChangeAtPosition(Vector2Int position, Action<GridObject> linkedEvent) Parameters position Vector2Int linkedEvent Action<GridObject> SubscribeToChangeInLayer(Action<GridObject>) Invoke a given Action when a change occurs anywhere in the layer public void SubscribeToChangeInLayer(Action<GridObject> action) Parameters action Action<GridObject> UnsubscribeFromChangeAtPosition(Vector2Int, Action<GridObject>) public void UnsubscribeFromChangeAtPosition(Vector2Int position, Action<GridObject> linkedEvent) Parameters position Vector2Int linkedEvent Action<GridObject>"
  },
  "api/Global.ObjectLayerChange.html": {
    "href": "api/Global.ObjectLayerChange.html",
    "title": "Struct ObjectLayerChange | Lofi City Documentation",
    "keywords": "Struct ObjectLayerChange Namespace Global Assembly Assembly-CSharp.dll [Serializable] public struct ObjectLayerChange Constructors ObjectLayerChange(Vector2Int, int, Enum_ObjectLayerType, string) public ObjectLayerChange(Vector2Int position, int zPosition, Enum_ObjectLayerType objectLayerType, string prefabGUID) Parameters position Vector2Int zPosition int objectLayerType Enum_ObjectLayerType prefabGUID string Fields _objectLayerType [SerializeField] private Enum_ObjectLayerType _objectLayerType Field Value Enum_ObjectLayerType _position [SerializeField] private Vector2Int _position Field Value Vector2Int _prefabGUID [SerializeField] private string _prefabGUID Field Value string _zPosition [SerializeField] private int _zPosition Field Value int Properties ObjectLayerType public Enum_ObjectLayerType ObjectLayerType { get; } Property Value Enum_ObjectLayerType Position public Vector2Int Position { get; } Property Value Vector2Int ZPosition public int ZPosition { get; } Property Value int prefabGUID public string prefabGUID { get; } Property Value string"
  },
  "api/Global.ObjectsOnFirstLoad.html": {
    "href": "api/Global.ObjectsOnFirstLoad.html",
    "title": "Class ObjectsOnFirstLoad | Lofi City Documentation",
    "keywords": "Class ObjectsOnFirstLoad Namespace Global Assembly Assembly-CSharp.dll public class ObjectsOnFirstLoad : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour ObjectsOnFirstLoad Implements ISavableElement Fields _parentObject [SerializeField] private GameObject _parentObject Field Value GameObject Methods OnLoad(ISavingSystem) public void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem"
  },
  "api/Global.OffsetAnimatedWater.html": {
    "href": "api/Global.OffsetAnimatedWater.html",
    "title": "Class OffsetAnimatedWater | Lofi City Documentation",
    "keywords": "Class OffsetAnimatedWater Namespace Global Assembly Assembly-CSharp.dll public class OffsetAnimatedWater : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour OffsetAnimatedWater Fields _random private Random _random Field Value Random _tileVariants private List<AnimatedTile> _tileVariants Field Value List<AnimatedTile> _waterTile [SerializeField] private AnimatedTile _waterTile Field Value AnimatedTile _waterTilemap [SerializeField] private Tilemap _waterTilemap Field Value Tilemap Methods Awake() private void Awake()"
  },
  "api/Global.PathBasedMovement.html": {
    "href": "api/Global.PathBasedMovement.html",
    "title": "Class PathBasedMovement | Lofi City Documentation",
    "keywords": "Class PathBasedMovement Namespace Global Assembly Assembly-CSharp.dll Move a game object to a new position based on Pathfinding. Allows for continuing along an axisting path. public class PathBasedMovement : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PathBasedMovement Fields _allLayers private AllSceneLayers _allLayers Field Value AllSceneLayers _changeInLayer [SerializeField] private UnityEvent<SceneLayer> _changeInLayer Field Value UnityEvent<SceneLayer> _characterLayer private ObjectLayerBase _characterLayer Field Value ObjectLayerBase _currentStep private int _currentStep Field Value int _delayAfterCharacter [SerializeField] private float _delayAfterCharacter Field Value float _movementCoplete private Action _movementCoplete Field Value Action _onDirectionChange private Action<Vector2Int> _onDirectionChange Field Value Action<Vector2Int> _onStepChange private Action<int> _onStepChange Field Value Action<int> _pathLayer private ObjectLayerBase _pathLayer Field Value ObjectLayerBase _pathfinding private Pathfinding _pathfinding Field Value Pathfinding _positionsInPath private int _positionsInPath Field Value int _positionsMoved private int _positionsMoved Field Value int _timePerStep [SerializeField] private float _timePerStep Field Value float _zPosition private int _zPosition Field Value int Methods Awake() private void Awake() DivertPath(Vector3Int, Vector3Int) private void DivertPath(Vector3Int startPosition, Vector3Int endPosition) Parameters startPosition Vector3Int endPosition Vector3Int GetMovementProgress() public float GetMovementProgress() Returns float Move(List<Vector3Int>) private IEnumerator Move(List<Vector3Int> path) Parameters path List<Vector3Int> Returns IEnumerator MoveOnExistingPath(Vector3Int, Vector3Int, float) public void MoveOnExistingPath(Vector3Int startPosition, Vector3Int endPosition, float progress) Parameters startPosition Vector3Int endPosition Vector3Int progress float MoveToPosition(Vector3) public void MoveToPosition(Vector3 endPosition) Parameters endPosition Vector3 MoveToPosition(Vector3Int) public void MoveToPosition(Vector3Int endPosition) Parameters endPosition Vector3Int StartMovingFromPosition(Vector3Int) private void StartMovingFromPosition(Vector3Int endPosition) Parameters endPosition Vector3Int SubscribeToDirectionChanged(Action<Vector2Int>) public void SubscribeToDirectionChanged(Action<Vector2Int> action) Parameters action Action<Vector2Int> SubscribeToElevationChange(Action<int>) public void SubscribeToElevationChange(Action<int> action) Parameters action Action<int> SubscribeToMovementComplete(Action) public void SubscribeToMovementComplete(Action action) Parameters action Action"
  },
  "api/Global.PathNode.html": {
    "href": "api/Global.PathNode.html",
    "title": "Class PathNode | Lofi City Documentation",
    "keywords": "Class PathNode Namespace Global Assembly Assembly-CSharp.dll Used in pathfinding to represent the distances of a particular cell. public class PathNode Inheritance object PathNode Constructors PathNode(Vector3Int, Scriptable_PathTile) public PathNode(Vector3Int position, Scriptable_PathTile pathTile) Parameters position Vector3Int pathTile Scriptable_PathTile Fields _directDistanceToEnd private int _directDistanceToEnd Field Value int _distanceFromStart private int _distanceFromStart Field Value int _pathTile private Scriptable_PathTile _pathTile Field Value Scriptable_PathTile _position private Vector3Int _position Field Value Vector3Int _previousNode private PathNode _previousNode Field Value PathNode _totalDistance private int _totalDistance Field Value int baseDistance private const int baseDistance = 10 Field Value int Properties DistanceFromStart public int DistanceFromStart { get; } Property Value int PathTile public Scriptable_PathTile PathTile { get; } Property Value Scriptable_PathTile Position public Vector3Int Position { get; } Property Value Vector3Int PreviousNode public PathNode PreviousNode { get; } Property Value PathNode TotalDistance public int TotalDistance { get; } Property Value int Methods SetDistanceToEnd(Vector3Int) private void SetDistanceToEnd(Vector3Int endPoint) Parameters endPoint Vector3Int SetDistances(Vector3Int, PathNode) public void SetDistances(Vector3Int endPoint, PathNode previousNode) Parameters endPoint Vector3Int previousNode PathNode"
  },
  "api/Global.Pathfinding.html": {
    "href": "api/Global.Pathfinding.html",
    "title": "Class Pathfinding | Lofi City Documentation",
    "keywords": "Class Pathfinding Namespace Global Assembly Assembly-CSharp.dll Find the shortest path between two positions in the current scene. Based on the A* Algorithm. public class Pathfinding Inheritance object Pathfinding Constructors Pathfinding() public Pathfinding() Fields _closedList private Dictionary<Vector3Int, PathNode> _closedList Field Value Dictionary<Vector3Int, PathNode> _endPosition private Vector3Int _endPosition Field Value Vector3Int _openList private Dictionary<Vector3Int, PathNode> _openList Field Value Dictionary<Vector3Int, PathNode> _pathLayers private Dictionary<int, ObjectLayerBase> _pathLayers Field Value Dictionary<int, ObjectLayerBase> _startPosition private Vector3Int _startPosition Field Value Vector3Int Methods CalculatedPath(List<Vector3Int>, PathNode) private List<Vector3Int> CalculatedPath(List<Vector3Int> path, PathNode currentNode) Parameters path List<Vector3Int> currentNode PathNode Returns List<Vector3Int> FindPath(Vector3Int, Vector3Int) public List<Vector3Int> FindPath(Vector3Int startWorldPosition, Vector3Int endWorldPosition) Parameters startWorldPosition Vector3Int endWorldPosition Vector3Int Returns List<Vector3Int> GetAdjacentPathNodes(PathNode) private List<PathNode> GetAdjacentPathNodes(PathNode currentNode) Parameters currentNode PathNode Returns List<PathNode> GetNodeWithShortestDistance() private PathNode GetNodeWithShortestDistance() Returns PathNode GetPathNode(Vector3Int) private PathNode GetPathNode(Vector3Int cellPosition) Parameters cellPosition Vector3Int Returns PathNode GetTileAtPosition(Vector3Int) private Scriptable_PathTile GetTileAtPosition(Vector3Int position) Parameters position Vector3Int Returns Scriptable_PathTile"
  },
  "api/Global.PauseGame.html": {
    "href": "api/Global.PauseGame.html",
    "title": "Class PauseGame | Lofi City Documentation",
    "keywords": "Class PauseGame Namespace Global Assembly Assembly-CSharp.dll public class PauseGame : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PauseGame Methods OnDisable() private void OnDisable() OnEnable() private void OnEnable()"
  },
  "api/Global.PendingCraftingRequest.html": {
    "href": "api/Global.PendingCraftingRequest.html",
    "title": "Class PendingCraftingRequest | Lofi City Documentation",
    "keywords": "Class PendingCraftingRequest Namespace Global Assembly Assembly-CSharp.dll Stores the data for a crafting request that is still waiting to be assigned a machine public class PendingCraftingRequest Inheritance object PendingCraftingRequest Constructors PendingCraftingRequest(Scriptable_CraftingRecipe, Scriptable_Machine, ActionCondition_ItemInInventory) public PendingCraftingRequest(Scriptable_CraftingRecipe recipe, Scriptable_Machine machine, ActionCondition_ItemInInventory areResourcesAvailable) Parameters recipe Scriptable_CraftingRecipe machine Scriptable_Machine areResourcesAvailable ActionCondition_ItemInInventory Fields _areResourcesAvailable private ActionCondition_ItemInInventory _areResourcesAvailable Field Value ActionCondition_ItemInInventory _machine private Scriptable_Machine _machine Field Value Scriptable_Machine _onReadyToCraft private Action<PendingCraftingRequest> _onReadyToCraft Field Value Action<PendingCraftingRequest> _recipe private Scriptable_CraftingRecipe _recipe Field Value Scriptable_CraftingRecipe _status private bool _status Field Value bool Properties AreResourcesAvailable public ActionCondition_ItemInInventory AreResourcesAvailable { get; } Property Value ActionCondition_ItemInInventory Machine public Scriptable_Machine Machine { get; } Property Value Scriptable_Machine Recipe public Scriptable_CraftingRecipe Recipe { get; } Property Value Scriptable_CraftingRecipe Status public bool Status { get; } Property Value bool Methods OnCraftingStatusChanged(IActionCondition, bool) private void OnCraftingStatusChanged(IActionCondition condition, bool status) Parameters condition IActionCondition status bool SubscribeToPendingRequest(Action<PendingCraftingRequest>) public void SubscribeToPendingRequest(Action<PendingCraftingRequest> action) Parameters action Action<PendingCraftingRequest> UnubscribeFromPendingRequest(Action<PendingCraftingRequest>) public void UnubscribeFromPendingRequest(Action<PendingCraftingRequest> action) Parameters action Action<PendingCraftingRequest>"
  },
  "api/Global.Personality.html": {
    "href": "api/Global.Personality.html",
    "title": "Class Personality | Lofi City Documentation",
    "keywords": "Class Personality Namespace Global Assembly Assembly-CSharp.dll [TODO] Implement personality public class Personality : ScriptableObject Inheritance object Object ScriptableObject Personality Fields _interest [SerializeField] private Enum_Interests _interest Field Value Enum_Interests _placesLiked [SerializeField] private List<Enum_PlaceAttributes> _placesLiked Field Value List<Enum_PlaceAttributes>"
  },
  "api/Global.PhysicalObject.html": {
    "href": "api/Global.PhysicalObject.html",
    "title": "Class PhysicalObject | Lofi City Documentation",
    "keywords": "Class PhysicalObject Namespace Global Assembly Assembly-CSharp.dll Added to GameObjects that the player can collide with and climb on top of. public class PhysicalObject : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PhysicalObject Fields _isClimbable [SerializeField] private bool _isClimbable Field Value bool _objectSize [SerializeField] private Vector3Int _objectSize Field Value Vector3Int Properties IsClimbable public bool IsClimbable { get; } Property Value bool ObjectSize public Vector3Int ObjectSize { get; } Property Value Vector3Int"
  },
  "api/Global.PhysicalObjectLayerToPath.html": {
    "href": "api/Global.PhysicalObjectLayerToPath.html",
    "title": "Class PhysicalObjectLayerToPath | Lofi City Documentation",
    "keywords": "Class PhysicalObjectLayerToPath Namespace Global Assembly Assembly-CSharp.dll Changes the path tiles under physical objects into steps of the needed height. public class PhysicalObjectLayerToPath : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PhysicalObjectLayerToPath Fields _clearTile [SerializeField] private Scriptable_PathTile _clearTile Field Value Scriptable_PathTile _physicalLayer [SerializeField] private ObjectLayerBase _physicalLayer Field Value ObjectLayerBase _placableTiles [SerializeField] private Scriptable_TileGroup _placableTiles Field Value Scriptable_TileGroup _tileLayer [SerializeField] private ObjectLayerBase _tileLayer Field Value ObjectLayerBase _tileRefernce private Dictionary<int, Scriptable_Tile> _tileRefernce Field Value Dictionary<int, Scriptable_Tile> Methods Awake() private void Awake() ClearObject(GridObject) public void ClearObject(GridObject gridObject) Parameters gridObject GridObject SetPathTile(Vector2Int, PhysicalObject) public void SetPathTile(Vector2Int position, PhysicalObject obj) Parameters position Vector2Int obj PhysicalObject SetPhysicalObject(GridObject) private void SetPhysicalObject(GridObject objectPlaced) Parameters objectPlaced GridObject"
  },
  "api/Global.PlantObject.html": {
    "href": "api/Global.PlantObject.html",
    "title": "Class PlantObject | Lofi City Documentation",
    "keywords": "Class PlantObject Namespace Global Assembly Assembly-CSharp.dll public class PlantObject : SavableObjectBase Inheritance object Object Component Behaviour MonoBehaviour SavableObjectBase PlantObject Inherited Members SavableObjectBase._objectReference SavableObjectBase.ObjectReference Fields _daysWatered private int _daysWatered Field Value int _fieldLayer private ObjectLayerBase _fieldLayer Field Value ObjectLayerBase _isGrown private bool _isGrown Field Value bool _lastDayWatered private int _lastDayWatered Field Value int _plantData [SerializeField] private Scriptable_Plant _plantData Field Value Scriptable_Plant _renderer [SerializeField] private SpriteRenderer _renderer Field Value SpriteRenderer Properties IsGrown public bool IsGrown { get; } Property Value bool PlantData public Scriptable_Plant PlantData { get; } Property Value Scriptable_Plant Methods Awake() private void Awake() GetData() public override object GetData() Returns object GrowPlant() public void GrowPlant() SetData(object) public override void SetData(object data) Parameters data object SetVisual() private void SetVisual()"
  },
  "api/Global.PlayMusicInScene.html": {
    "href": "api/Global.PlayMusicInScene.html",
    "title": "Class PlayMusicInScene | Lofi City Documentation",
    "keywords": "Class PlayMusicInScene Namespace Global Assembly Assembly-CSharp.dll public class PlayMusicInScene : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayMusicInScene Fields _music [SerializeField] private AudioClip _music Field Value AudioClip Methods Start() private void Start()"
  },
  "api/Global.PlaySoundEffect.html": {
    "href": "api/Global.PlaySoundEffect.html",
    "title": "Class PlaySoundEffect | Lofi City Documentation",
    "keywords": "Class PlaySoundEffect Namespace Global Assembly Assembly-CSharp.dll public class PlaySoundEffect : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlaySoundEffect Fields _audioManager private AudioManager _audioManager Field Value AudioManager _clip [SerializeField] private AudioClip _clip Field Value AudioClip Methods Awake() private void Awake() Play() public void Play()"
  },
  "api/Global.PlaySoundWithPlayerAction.html": {
    "href": "api/Global.PlaySoundWithPlayerAction.html",
    "title": "Class PlaySoundWithPlayerAction | Lofi City Documentation",
    "keywords": "Class PlaySoundWithPlayerAction Namespace Global Assembly Assembly-CSharp.dll public class PlaySoundWithPlayerAction : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlaySoundWithPlayerAction Fields _audioManager private AudioManager _audioManager Field Value AudioManager _audioReference [SerializeField] private InspectableDictionary<Enum_ItemInteraction, AudioClip> _audioReference Field Value InspectableDictionary<Enum_ItemInteraction, AudioClip> _manager [SerializeField] private ItemUseManager _manager Field Value ItemUseManager Methods PlaySoundEffect(Enum_ItemInteraction) private void PlaySoundEffect(Enum_ItemInteraction type) Parameters type Enum_ItemInteraction Start() private void Start()"
  },
  "api/Global.PlayerMoney.html": {
    "href": "api/Global.PlayerMoney.html",
    "title": "Class PlayerMoney | Lofi City Documentation",
    "keywords": "Class PlayerMoney Namespace Global Assembly Assembly-CSharp.dll public class PlayerMoney : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerMoney Fields _coins [SerializeField] private int _coins Field Value int _moneyUpdated private Action<int> _moneyUpdated Field Value Action<int> Properties Coins public int Coins { get; } Property Value int Methods AddMoney(int) public void AddMoney(int amount) Parameters amount int CanAfford(int) public bool CanAfford(int amount) Parameters amount int Returns bool PayMoney(int) public void PayMoney(int amount) Parameters amount int SubscribeToChangeInMoney(Action<int>) public void SubscribeToChangeInMoney(Action<int> action) Parameters action Action<int>"
  },
  "api/Global.PlayerSortingLayer.html": {
    "href": "api/Global.PlayerSortingLayer.html",
    "title": "Class PlayerSortingLayer | Lofi City Documentation",
    "keywords": "Class PlayerSortingLayer Namespace Global Assembly Assembly-CSharp.dll public class PlayerSortingLayer : ChangeSortingLayer Inheritance object Object Component Behaviour MonoBehaviour ChangeSortingLayer PlayerSortingLayer Inherited Members ChangeSortingLayer._renderer ChangeSortingLayer._currentLayer ChangeSortingLayer.OnStepChange(int) ChangeSortingLayer.OnSceneLayerChange(SceneLayer) Fields _movement [SerializeField] private MovementManager _movement Field Value MovementManager _status [SerializeField] private PlayerStatus _status Field Value PlayerStatus Methods Awake() private void Awake()"
  },
  "api/Global.PlayerStatus.html": {
    "href": "api/Global.PlayerStatus.html",
    "title": "Class PlayerStatus | Lofi City Documentation",
    "keywords": "Class PlayerStatus Namespace Global Assembly Assembly-CSharp.dll Stores various different attributes related to the player for easy access. public class PlayerStatus : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PlayerStatus Fields _activeItem private Scriptable_Item _activeItem Field Value Scriptable_Item _changeActiveItem [SerializeField] private UnityEvent<Scriptable_Item> _changeActiveItem Field Value UnityEvent<Scriptable_Item> _changeInSceneLayer [SerializeField] private Action<SceneLayer> _changeInSceneLayer Field Value Action<SceneLayer> _currentSceneLayer [SerializeField] private SceneLayer _currentSceneLayer Field Value SceneLayer _directionFacing private Vector2 _directionFacing Field Value Vector2 _inventory [SerializeField] private SerializableInterface<IInventory> _inventory Field Value SerializableInterface<IInventory> _playerMoney [SerializeField] private PlayerMoney _playerMoney Field Value PlayerMoney Properties CurrentSceneLayer public SceneLayer CurrentSceneLayer { get; } Property Value SceneLayer DirectionFacing public Vector2 DirectionFacing { get; } Property Value Vector2 Inventory public IInventory Inventory { get; } Property Value IInventory PlayerMoney public PlayerMoney PlayerMoney { get; } Property Value PlayerMoney Methods OnInventoryChange(Scriptable_Item, int) public void OnInventoryChange(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int SetActiveItem(Scriptable_Item) public void SetActiveItem(Scriptable_Item item) Parameters item Scriptable_Item SetDirectionFacing(CallbackContext) public void SetDirectionFacing(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext SetSceneLayer(SceneLayer) public void SetSceneLayer(SceneLayer layer) Parameters layer SceneLayer Start() private void Start() SubscribeToSceneLayerChange(Action<SceneLayer>) public void SubscribeToSceneLayerChange(Action<SceneLayer> action) Parameters action Action<SceneLayer>"
  },
  "api/Global.PlayerTask.html": {
    "href": "api/Global.PlayerTask.html",
    "title": "Class PlayerTask | Lofi City Documentation",
    "keywords": "Class PlayerTask Namespace Global Assembly Assembly-CSharp.dll public class PlayerTask Inheritance object PlayerTask Constructors PlayerTask(IActionCondition, Scriptable_Task) public PlayerTask(IActionCondition monitor, Scriptable_Task taskData) Parameters monitor IActionCondition taskData Scriptable_Task Fields _finished private bool _finished Field Value bool _monitor private IActionCondition _monitor Field Value IActionCondition _onCompletion private Action<PlayerTask> _onCompletion Field Value Action<PlayerTask> _taskData private Scriptable_Task _taskData Field Value Scriptable_Task _taskDescription private string _taskDescription Field Value string _taskName private string _taskName Field Value string Properties Monitor public IActionCondition Monitor { get; } Property Value IActionCondition TaskData public Scriptable_Task TaskData { get; } Property Value Scriptable_Task TaskDescription public string TaskDescription { get; } Property Value string TaskName public string TaskName { get; } Property Value string Methods SubscribeToTaskCompletion(Action<PlayerTask>) public void SubscribeToTaskCompletion(Action<PlayerTask> action) Parameters action Action<PlayerTask> TaskCompleted(IActionCondition, bool) public void TaskCompleted(IActionCondition condition, bool status) Parameters condition IActionCondition status bool"
  },
  "api/Global.Player_Animation.html": {
    "href": "api/Global.Player_Animation.html",
    "title": "Class Player_Animation | Lofi City Documentation",
    "keywords": "Class Player_Animation Namespace Global Assembly Assembly-CSharp.dll public class Player_Animation : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour Player_Animation Fields _npcAnimator [SerializeField] private Animator _npcAnimator Field Value Animator Methods PlayAnimation(Enum_PlayerAnimation) public void PlayAnimation(Enum_PlayerAnimation animation) Parameters animation Enum_PlayerAnimation SetDirection(int, int) public void SetDirection(int x, int y) Parameters x int y int"
  },
  "api/Global.PointOfInterest_CustomerQueue.html": {
    "href": "api/Global.PointOfInterest_CustomerQueue.html",
    "title": "Class PointOfInterest_CustomerQueue | Lofi City Documentation",
    "keywords": "Class PointOfInterest_CustomerQueue Namespace Global Assembly Assembly-CSharp.dll public class PointOfInterest_CustomerQueue : MonoBehaviour, IPointOfInterest Inheritance object Object Component Behaviour MonoBehaviour PointOfInterest_CustomerQueue Implements IPointOfInterest Fields _currentCustomer private CustomerInQueue _currentCustomer Field Value CustomerInQueue _currentNpc private GameObject _currentNpc Field Value GameObject _position private Vector3Int _position Field Value Vector3Int _queue [SerializeField] private CustomerQueue _queue Field Value CustomerQueue _renderer [SerializeField] private SpriteRenderer _renderer Field Value SpriteRenderer _slotId [SerializeField] private int _slotId Field Value int Properties SlotId public int SlotId { get; } Property Value int Methods GetEntryPosition() public Vector3Int GetEntryPosition() Returns Vector3Int LeaveStand() public void LeaveStand() OnNPCArrived(GameObject) public void OnNPCArrived(GameObject npc) Parameters npc GameObject OnNPCLeaving(GameObject) public void OnNPCLeaving(GameObject npc) Parameters npc GameObject Start() private void Start()"
  },
  "api/Global.PointOfInterest_Delay.html": {
    "href": "api/Global.PointOfInterest_Delay.html",
    "title": "Class PointOfInterest_Delay | Lofi City Documentation",
    "keywords": "Class PointOfInterest_Delay Namespace Global Assembly Assembly-CSharp.dll public class PointOfInterest_Delay : MonoBehaviour, IPointOfInterest Inheritance object Object Component Behaviour MonoBehaviour PointOfInterest_Delay Implements IPointOfInterest Fields _delay [SerializeField] private SpecificDateAndTime _delay Field Value SpecificDateAndTime _position private Vector3Int _position Field Value Vector3Int _scheduler private ScheduleEvent _scheduler Field Value ScheduleEvent Methods GetEntryPosition() public Vector3Int GetEntryPosition() Returns Vector3Int LeavePosition(GameObject) public void LeavePosition(GameObject npc) Parameters npc GameObject OnNPCArrived(GameObject) public void OnNPCArrived(GameObject npc) Parameters npc GameObject OnNPCLeaving(GameObject) public void OnNPCLeaving(GameObject npc) Parameters npc GameObject Start() private void Start()"
  },
  "api/Global.PointOfInterest_Idle.html": {
    "href": "api/Global.PointOfInterest_Idle.html",
    "title": "Class PointOfInterest_Idle | Lofi City Documentation",
    "keywords": "Class PointOfInterest_Idle Namespace Global Assembly Assembly-CSharp.dll Empty points in a scene where background NPCs can stand. public class PointOfInterest_Idle : IPointOfInterest Inheritance object PointOfInterest_Idle Implements IPointOfInterest Constructors PointOfInterest_Idle(Vector3Int, IdleSpotsInScene) public PointOfInterest_Idle(Vector3Int entryPosition, IdleSpotsInScene allSpots) Parameters entryPosition Vector3Int allSpots IdleSpotsInScene Fields _allSpots private IdleSpotsInScene _allSpots Field Value IdleSpotsInScene _entryPosition private Vector3Int _entryPosition Field Value Vector3Int Methods GetEntryPosition() public Vector3Int GetEntryPosition() Returns Vector3Int OnNPCArrived(GameObject) public void OnNPCArrived(GameObject npc) Parameters npc GameObject OnNPCLeaving(GameObject) public void OnNPCLeaving(GameObject npc) Parameters npc GameObject"
  },
  "api/Global.PointOfInterest_Obstructed.html": {
    "href": "api/Global.PointOfInterest_Obstructed.html",
    "title": "Class PointOfInterest_Obstructed | Lofi City Documentation",
    "keywords": "Class PointOfInterest_Obstructed Namespace Global Assembly Assembly-CSharp.dll The NPC is directed to a particular point and is then transported to another. public class PointOfInterest_Obstructed : MonoBehaviour, IPointOfInterest Inheritance object Object Component Behaviour MonoBehaviour PointOfInterest_Obstructed Implements IPointOfInterest Fields _entryPosition protected Vector3Int _entryPosition Field Value Vector3Int _moveToPosition private Vector3 _moveToPosition Field Value Vector3 _offset [SerializeField] private Vector3Int _offset Field Value Vector3Int Methods Awake() private void Awake() GetEntryPosition() public Vector3Int GetEntryPosition() Returns Vector3Int OnNPCArrived(GameObject) public void OnNPCArrived(GameObject npc) Parameters npc GameObject OnNPCLeaving(GameObject) public void OnNPCLeaving(GameObject npc) Parameters npc GameObject"
  },
  "api/Global.PointOfInterest_SceneTransition.html": {
    "href": "api/Global.PointOfInterest_SceneTransition.html",
    "title": "Class PointOfInterest_SceneTransition | Lofi City Documentation",
    "keywords": "Class PointOfInterest_SceneTransition Namespace Global Assembly Assembly-CSharp.dll The point where NPCs leave a scene. public class PointOfInterest_SceneTransition : MonoBehaviour, IPointOfInterest Inheritance object Object Component Behaviour MonoBehaviour PointOfInterest_SceneTransition Implements IPointOfInterest Fields _entryPosition [SerializeField] protected Vector3Int _entryPosition Field Value Vector3Int _spawner [SerializeField] protected RandomNPC_Spawner _spawner Field Value RandomNPC_Spawner Methods GetEntryPosition() public Vector3Int GetEntryPosition() Returns Vector3Int OnNPCArrived(GameObject) public void OnNPCArrived(GameObject npc) Parameters npc GameObject OnNPCLeaving(GameObject) public void OnNPCLeaving(GameObject npc) Parameters npc GameObject"
  },
  "api/Global.PopulateFieldTilemap.html": {
    "href": "api/Global.PopulateFieldTilemap.html",
    "title": "Class PopulateFieldTilemap | Lofi City Documentation",
    "keywords": "Class PopulateFieldTilemap Namespace Global Assembly Assembly-CSharp.dll Create the visual tilemap for the field floor based on the field and ecosystem tiles. public class PopulateFieldTilemap : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour PopulateFieldTilemap Fields _baseRockTilemap [SerializeField] private Tilemap _baseRockTilemap Field Value Tilemap _baseSoilTilemap [SerializeField] private Tilemap _baseSoilTilemap Field Value Tilemap _ecosystemLayer [SerializeField] private ObjectLayerBase _ecosystemLayer Field Value ObjectLayerBase _ecosystemTilemap [SerializeField] private Tilemap _ecosystemTilemap Field Value Tilemap _fieldLayer [SerializeField] private ObjectLayerBase _fieldLayer Field Value ObjectLayerBase _tileReference private Scriptable_VisualFieldTile[,] _tileReference Field Value Scriptable_VisualFieldTile[,] _visualFieldTiles [SerializeField] private Scriptable_TileGroup _visualFieldTiles Field Value Scriptable_TileGroup Methods SetTile(GridObject) private void SetTile(GridObject tileChange) Parameters tileChange GridObject Start() private void Start()"
  },
  "api/Global.PriceListUI.html": {
    "href": "api/Global.PriceListUI.html",
    "title": "Class PriceListUI | Lofi City Documentation",
    "keywords": "Class PriceListUI Namespace Global Assembly Assembly-CSharp.dll Shows the price of each item in the cart. public class PriceListUI : UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>> Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>> PriceListUI Inherited Members UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>>._prefabSlot UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>>._slotParent UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>>._existingObjects UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>>.Setup(ICollection<KeyValuePair<Scriptable_SellableItem, (int, bool)>>) UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>>.AddItem(KeyValuePair<Scriptable_SellableItem, (int, bool)>) UI_DisplayList<KeyValuePair<Scriptable_SellableItem, (int, bool)>>.RemoveItem(KeyValuePair<Scriptable_SellableItem, (int, bool)>) Fields _data [SerializeField] private UI_VendorSystem _data Field Value UI_VendorSystem Methods OnEnable() private void OnEnable() Setup(CartInventory) public void Setup(CartInventory inventory) Parameters inventory CartInventory"
  },
  "api/Global.QuantityDemandedCalculator.html": {
    "href": "api/Global.QuantityDemandedCalculator.html",
    "title": "Class QuantityDemandedCalculator | Lofi City Documentation",
    "keywords": "Class QuantityDemandedCalculator Namespace Global Assembly Assembly-CSharp.dll Gives a score of how well an item is liked based on its attributes. Determine how much of an item will be purchased at a particular price based on that score. public class QuantityDemandedCalculator Inheritance object QuantityDemandedCalculator Fields _attributeScores private Dictionary<Enum_ItemAttributes, int> _attributeScores Field Value Dictionary<Enum_ItemAttributes, int> Methods AddAttribute(Enum_ItemAttributes, int) public void AddAttribute(Enum_ItemAttributes attribute, int score) Parameters attribute Enum_ItemAttributes score int AddAttribute(Dictionary<Enum_ItemAttributes, int>) public void AddAttribute(Dictionary<Enum_ItemAttributes, int> attributes) Parameters attributes Dictionary<Enum_ItemAttributes, int> AddAttribute(List<Enum_ItemAttributes>, int) public void AddAttribute(List<Enum_ItemAttributes> attributes, int score) Parameters attributes List<Enum_ItemAttributes> score int GetItemScore(Scriptable_SellableItem) public int GetItemScore(Scriptable_SellableItem item) Parameters item Scriptable_SellableItem Returns int GetQuantity(int, int, int) public int GetQuantity(int price, int basePrice, int demand) Parameters price int basePrice int demand int Returns int"
  },
  "api/Global.RandomNPC_Activity.html": {
    "href": "api/Global.RandomNPC_Activity.html",
    "title": "Class RandomNPC_Activity | Lofi City Documentation",
    "keywords": "Class RandomNPC_Activity Namespace Global Assembly Assembly-CSharp.dll Random NPCs visits various attractions/idle points before leaving the scene. public class RandomNPC_Activity : NPC_ActivityBase Inheritance object Object Component Behaviour MonoBehaviour NPC_ActivityBase RandomNPC_Activity Inherited Members NPC_ActivityBase._schedule NPC_ActivityBase._personality NPC_ActivityBase._dateTimeManager NPC_ActivityBase._scheduler NPC_ActivityBase._setActivity NPC_ActivityBase._newActivitySet NPC_ActivityBase._previousAttraction NPC_ActivityBase._chosenAttraction NPC_ActivityBase.ChosenAttraction NPC_ActivityBase.PreviousAttraction NPC_ActivityBase.Setup() NPC_ActivityBase.GoToNextActivity() NPC_ActivityBase.SelectAttraction(Enum_ActivityType) NPC_ActivityBase.CalculateAttractionScore(Scriptable_Attraction) NPC_ActivityBase.SubscribeToNewActivity(Action) NPC_ActivityBase.UnsubscribeFromNewActivity(Action) Fields _attractions private AttractionsInScene _attractions Field Value AttractionsInScene _chanceForAttraction [SerializeField] [Range(1, 10)] private int _chanceForAttraction Field Value int _leaveScene private bool _leaveScene Field Value bool _maxDelay [SerializeField] private int _maxDelay Field Value int _maxPoints [SerializeField] private int _maxPoints Field Value int _pointsVisited private int _pointsVisited Field Value int _random private Random _random Field Value Random _state private Enum_NPCActivity _state Field Value Enum_NPCActivity Properties Attractions public AttractionsInScene Attractions { get; set; } Property Value AttractionsInScene State public Enum_NPCActivity State { get; set; } Property Value Enum_NPCActivity Methods GetAllAttractions(Enum_ActivityType) protected override List<Scriptable_Attraction> GetAllAttractions(Enum_ActivityType activityType) Parameters activityType Enum_ActivityType Returns List<Scriptable_Attraction> LeaveScene() public void LeaveScene() SetActivity(TimeSlot) public override void SetActivity(TimeSlot startTime) Parameters startTime TimeSlot SetSpecificAttraction(Scriptable_Attraction) public override void SetSpecificAttraction(Scriptable_Attraction attraction) Parameters attraction Scriptable_Attraction Setup(Scriptable_Schedule<Enum_ActivityType>, AttractionsInScene) public void Setup(Scriptable_Schedule<Enum_ActivityType> schedule, AttractionsInScene attractions) Parameters schedule Scriptable_Schedule<Enum_ActivityType> attractions AttractionsInScene"
  },
  "api/Global.RandomNPC_Movement.html": {
    "href": "api/Global.RandomNPC_Movement.html",
    "title": "Class RandomNPC_Movement | Lofi City Documentation",
    "keywords": "Class RandomNPC_Movement Namespace Global Assembly Assembly-CSharp.dll Move to attraction or random idle spot based on activity. public class RandomNPC_Movement : NPC_MovementBase Inheritance object Object Component Behaviour MonoBehaviour NPC_MovementBase RandomNPC_Movement Inherited Members NPC_MovementBase._pathMovement NPC_MovementBase._animator NPC_MovementBase._sorting NPC_MovementBase._activity NPC_MovementBase._attractions NPC_MovementBase._currentPointOfInterest NPC_MovementBase._previousPointOfInterest NPC_MovementBase._onMovementStart NPC_MovementBase.CurrentPointOfInterest NPC_MovementBase.PreviousPointOfInterest NPC_MovementBase.Setup(NPC_ActivityBase) NPC_MovementBase.MoveToAttraction(IPointOfInterest) NPC_MovementBase.OnActivityChanged() NPC_MovementBase.OnMovementFinished() NPC_MovementBase.OnDirectionChange(Vector2Int) NPC_MovementBase.OnStepChange(int) NPC_MovementBase.SubscribeToMovementStart(Action<NPC_MovementBase>) Fields _idleSpots private IdleSpotsInScene _idleSpots Field Value IdleSpotsInScene _progress private float _progress Field Value float _random private Random _random Field Value Random _randomActivity private RandomNPC_Activity _randomActivity Field Value RandomNPC_Activity Methods GetNextDestination() protected override IPointOfInterest GetNextDestination() Returns IPointOfInterest GetStartingProgress() protected override float GetStartingProgress() Returns float Setup(NPC_ActivityBase, bool, IdleSpotsInScene) public void Setup(NPC_ActivityBase activity, bool isPreexisting, IdleSpotsInScene idleSpots) Parameters activity NPC_ActivityBase isPreexisting bool idleSpots IdleSpotsInScene"
  },
  "api/Global.RandomNPC_Personality.html": {
    "href": "api/Global.RandomNPC_Personality.html",
    "title": "Class RandomNPC_Personality | Lofi City Documentation",
    "keywords": "Class RandomNPC_Personality Namespace Global Assembly Assembly-CSharp.dll public class RandomNPC_Personality : MonoBehaviour, INPC_Personality Inheritance object Object Component Behaviour MonoBehaviour RandomNPC_Personality Implements INPC_Personality Fields _interest private Scriptable_Interest _interest Field Value Scriptable_Interest _personality private Scriptable_Personality _personality Field Value Scriptable_Personality Methods GetCustomerData() public Customer GetCustomerData() Returns Customer GetInterest() public Scriptable_Interest GetInterest() Returns Scriptable_Interest GetPersonality() public Scriptable_Personality GetPersonality() Returns Scriptable_Personality GetPlacesLiked() public List<Enum_PlaceAttributes> GetPlacesLiked() Returns List<Enum_PlaceAttributes> Setup(Scriptable_Personality, Scriptable_Interest) public void Setup(Scriptable_Personality personality, Scriptable_Interest interest) Parameters personality Scriptable_Personality interest Scriptable_Interest"
  },
  "api/Global.RandomNPC_ScenePopulation.html": {
    "href": "api/Global.RandomNPC_ScenePopulation.html",
    "title": "Class RandomNPC_ScenePopulation | Lofi City Documentation",
    "keywords": "Class RandomNPC_ScenePopulation Namespace Global Assembly Assembly-CSharp.dll Determine how many background NPCs to create at any point in time. [Serializable] public class RandomNPC_ScenePopulation Inheritance object RandomNPC_ScenePopulation Fields _interests [SerializeField] private List<Scriptable_Interest> _interests Field Value List<Scriptable_Interest> _personalities [SerializeField] private List<Scriptable_Personality> _personalities Field Value List<Scriptable_Personality> _quantity [SerializeField] [Range(0, 5)] private int _quantity Field Value int Properties Interests public List<Scriptable_Interest> Interests { get; } Property Value List<Scriptable_Interest> Personalities public List<Scriptable_Personality> Personalities { get; } Property Value List<Scriptable_Personality> Quantity public int Quantity { get; } Property Value int"
  },
  "api/Global.RandomNPC_Spawner.html": {
    "href": "api/Global.RandomNPC_Spawner.html",
    "title": "Class RandomNPC_Spawner | Lofi City Documentation",
    "keywords": "Class RandomNPC_Spawner Namespace Global Assembly Assembly-CSharp.dll Create a number of random NPCs to populate a scene. public class RandomNPC_Spawner : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour RandomNPC_Spawner Fields _allActivitySchedules [SerializeField] private AllSchedules<Enum_ActivityType> _allActivitySchedules Field Value AllSchedules<Enum_ActivityType> _allRandomNPCSchedules [SerializeField] private AllSchedules<RandomNPC_ScenePopulation> _allRandomNPCSchedules Field Value AllSchedules<RandomNPC_ScenePopulation> _attractionsInScene [SerializeField] private AttractionsInScene _attractionsInScene Field Value AttractionsInScene _currentNPCSchedule private Scriptable_Schedule<RandomNPC_ScenePopulation> _currentNPCSchedule Field Value Scriptable_Schedule<RandomNPC_ScenePopulation> _currentPopulation private RandomNPC_ScenePopulation _currentPopulation Field Value RandomNPC_ScenePopulation _currentSchedule private Scriptable_Schedule<Enum_ActivityType> _currentSchedule Field Value Scriptable_Schedule<Enum_ActivityType> _idleSpotsInScene [SerializeField] private IdleSpotsInScene _idleSpotsInScene Field Value IdleSpotsInScene _populationMultiplier [SerializeField] private int _populationMultiplier Field Value int _prefabNPC [SerializeField] private GameObject _prefabNPC Field Value GameObject _random private Random _random Field Value Random _randomNPCsCreated private List<GameObject> _randomNPCsCreated Field Value List<GameObject> _sceneLayers [SerializeField] private AllSceneLayers _sceneLayers Field Value AllSceneLayers _scheduler private ScheduleEvent _scheduler Field Value ScheduleEvent _skinColours [SerializeField] private Scriptable_ColourPalette _skinColours Field Value Scriptable_ColourPalette Methods AddExistingNPCs(RandomNPC_ScenePopulation) private void AddExistingNPCs(RandomNPC_ScenePopulation target) Parameters target RandomNPC_ScenePopulation AdjustScenePopulation(TimeSlot) private void AdjustScenePopulation(TimeSlot time) Parameters time TimeSlot ClearNPCs(RandomNPC_ScenePopulation) private void ClearNPCs(RandomNPC_ScenePopulation target) Parameters target RandomNPC_ScenePopulation CreateNPCAtPosition(Vector3, bool) private GameObject CreateNPCAtPosition(Vector3 position, bool alreadyExisting) Parameters position Vector3 alreadyExisting bool Returns GameObject GetRandomEntrance() private Vector3Int GetRandomEntrance() Returns Vector3Int OnNPCLeave(GameObject) public void OnNPCLeave(GameObject npc) Parameters npc GameObject RandomFromList<T>(List<T>) private T RandomFromList<T>(List<T> values) Parameters values List<T> Returns T Type Parameters T SetNextChange(TimeSlot) private void SetNextChange(TimeSlot time) Parameters time TimeSlot SetUpNPC(GameObject, bool) private void SetUpNPC(GameObject npc, bool alreadyExisting) Parameters npc GameObject alreadyExisting bool SpawnNPCsAtEntrances(int) private IEnumerator SpawnNPCsAtEntrances(int neededPopulation) Parameters neededPopulation int Returns IEnumerator Start() private void Start()"
  },
  "api/Global.SavableMachine.html": {
    "href": "api/Global.SavableMachine.html",
    "title": "Class SavableMachine | Lofi City Documentation",
    "keywords": "Class SavableMachine Namespace Global Assembly Assembly-CSharp.dll public class SavableMachine : SavableObjectBase Inheritance object Object Component Behaviour MonoBehaviour SavableObjectBase SavableMachine Inherited Members SavableObjectBase._objectReference SavableObjectBase.ObjectReference Methods GetData() public override object GetData() Returns object SetData(object) public override void SetData(object data) Parameters data object"
  },
  "api/Global.SavableObject.html": {
    "href": "api/Global.SavableObject.html",
    "title": "Class SavableObject | Lofi City Documentation",
    "keywords": "Class SavableObject Namespace Global Assembly Assembly-CSharp.dll Retrieve the Addressable Asset for the GameObject prefab. [Serializable] public class SavableObject : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SavableObject Fields _objectReference [SerializeField] private AssetReference _objectReference Field Value AssetReference Properties ObjectReference public AssetReference ObjectReference { get; } Property Value AssetReference"
  },
  "api/Global.SavableObjectBase.html": {
    "href": "api/Global.SavableObjectBase.html",
    "title": "Class SavableObjectBase | Lofi City Documentation",
    "keywords": "Class SavableObjectBase Namespace Global Assembly Assembly-CSharp.dll Retrieve the Addressable Asset for the GameObject prefab. [Serializable] public abstract class SavableObjectBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SavableObjectBase Derived FruitTree PlantObject SavableMachine Fields _objectReference [SerializeField] private AssetReference _objectReference Field Value AssetReference Properties ObjectReference public AssetReference ObjectReference { get; } Property Value AssetReference Methods GetData() public abstract object GetData() Returns object SetData(object) public abstract void SetData(object data) Parameters data object"
  },
  "api/Global.SavablePositionList-1.html": {
    "href": "api/Global.SavablePositionList-1.html",
    "title": "Class SavablePositionList<T> | Lofi City Documentation",
    "keywords": "Class SavablePositionList<T> Namespace Global Assembly Assembly-CSharp.dll public class SavablePositionList<T> : SavablePositionList Type Parameters T Inheritance object SavablePositionList SavablePositionList<T> Inherited Members SavablePositionList.AddItem(Vector2Int) Fields _data private List<MergedPosition<T>> _data Field Value List<MergedPosition<T>> _previous private MergedPosition<T> _previous Field Value MergedPosition<T> Properties Data public List<MergedPosition<T>> Data { get; set; } Property Value List<MergedPosition<T>> Methods AddItem(Vector2Int, T) public void AddItem(Vector2Int position, T data) Parameters position Vector2Int data T"
  },
  "api/Global.SavablePositionList.html": {
    "href": "api/Global.SavablePositionList.html",
    "title": "Class SavablePositionList | Lofi City Documentation",
    "keywords": "Class SavablePositionList Namespace Global Assembly Assembly-CSharp.dll public class SavablePositionList Inheritance object SavablePositionList Derived SavablePositionList<T> Fields _data protected List<MergedPosition> _data Field Value List<MergedPosition> _previous protected MergedPosition _previous Field Value MergedPosition Properties Data public List<MergedPosition> Data { get; set; } Property Value List<MergedPosition> Methods AddItem(Vector2Int) public void AddItem(Vector2Int position) Parameters position Vector2Int"
  },
  "api/Global.SaveCraftingRequests.html": {
    "href": "api/Global.SaveCraftingRequests.html",
    "title": "Class SaveCraftingRequests | Lofi City Documentation",
    "keywords": "Class SaveCraftingRequests Namespace Global Assembly Assembly-CSharp.dll [TODO] Implement Request Saving public class SaveCraftingRequests : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour SaveCraftingRequests Implements ISavableElement Fields _requestController [SerializeField] private CraftingRequestController _requestController Field Value CraftingRequestController Methods OnLoad(ISavingSystem) public void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem"
  },
  "api/Global.SaveLimitlessInventory.html": {
    "href": "api/Global.SaveLimitlessInventory.html",
    "title": "Class SaveLimitlessInventory | Lofi City Documentation",
    "keywords": "Class SaveLimitlessInventory Namespace Global Assembly Assembly-CSharp.dll Save the items in an inventory, or populate it if not previously saved. public class SaveLimitlessInventory : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour SaveLimitlessInventory Implements ISavableElement Fields _fileName [SerializeField] private string _fileName Field Value string _inventory [SerializeField] private LimitlessInventory _inventory Field Value LimitlessInventory _startingInventory [SerializeField] private InspectableDictionary<AssetReference, int> _startingInventory Field Value InspectableDictionary<AssetReference, int> Methods LoadItem(AsyncOperationHandle<Scriptable_Item>, int) private void LoadItem(AsyncOperationHandle<Scriptable_Item> item, int quantity) Parameters item AsyncOperationHandle<Scriptable_Item> quantity int OnLoad(ISavingSystem) public void OnLoad(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem"
  },
  "api/Global.SaveMachineNetwork.html": {
    "href": "api/Global.SaveMachineNetwork.html",
    "title": "Class SaveMachineNetwork | Lofi City Documentation",
    "keywords": "Class SaveMachineNetwork Namespace Global Assembly Assembly-CSharp.dll Save and load all the machines connected to a network controller. public class SaveMachineNetwork : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour SaveMachineNetwork Implements ISavableElement Fields _filePath [SerializeField] private string _filePath Field Value string _networkController [SerializeField] private MachineNetworkController _networkController Field Value MachineNetworkController Methods AddMachineType(AsyncOperationHandle<Scriptable_Machine>, List<Vector3Int>) private void AddMachineType(AsyncOperationHandle<Scriptable_Machine> machineType, List<Vector3Int> machineInstances) Parameters machineType AsyncOperationHandle<Scriptable_Machine> machineInstances List<Vector3Int> OnLoad(ISavingSystem) public void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem"
  },
  "api/Global.SaveObjectLayerChanges.html": {
    "href": "api/Global.SaveObjectLayerChanges.html",
    "title": "Class SaveObjectLayerChanges | Lofi City Documentation",
    "keywords": "Class SaveObjectLayerChanges Namespace Global Assembly Assembly-CSharp.dll Save and load all objects stored in the object layers of a given type. public class SaveObjectLayerChanges : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour SaveObjectLayerChanges Implements ISavableElement Fields _allLayers [SerializeField] private AllSceneLayers _allLayers Field Value AllSceneLayers _filePath [SerializeField] private string _filePath Field Value string _layerTypesToMonitor [SerializeField] private List<Enum_ObjectLayerType> _layerTypesToMonitor Field Value List<Enum_ObjectLayerType> _objects private Dictionary<string, List<WorldPosition>> _objects Field Value Dictionary<string, List<WorldPosition>> Methods AddObject(GridObject) private void AddObject(GridObject gridObject) Parameters gridObject GridObject OnLoad(ISavingSystem) public void OnLoad(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem PlaceItem(AsyncOperationHandle<GameObject>, List<WorldPosition>) public void PlaceItem(AsyncOperationHandle<GameObject> asyncLoad, List<WorldPosition> positions) Parameters asyncLoad AsyncOperationHandle<GameObject> positions List<WorldPosition>"
  },
  "api/Global.SaveObjectLayerData.html": {
    "href": "api/Global.SaveObjectLayerData.html",
    "title": "Class SaveObjectLayerData | Lofi City Documentation",
    "keywords": "Class SaveObjectLayerData Namespace Global Assembly Assembly-CSharp.dll public class SaveObjectLayerData : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour SaveObjectLayerData Implements ISavableElement Fields _allLayers [SerializeField] private AllSceneLayers _allLayers Field Value AllSceneLayers _filePath [SerializeField] private string _filePath Field Value string _layerTypesToMonitor [SerializeField] private List<Enum_ObjectLayerType> _layerTypesToMonitor Field Value List<Enum_ObjectLayerType> _objects private Dictionary<object, List<WorldPosition>> _objects Field Value Dictionary<object, List<WorldPosition>> Methods AddObject(GridObject) private void AddObject(GridObject gridObject) Parameters gridObject GridObject OnLoad(ISavingSystem) public void OnLoad(ISavingSystem savingSystem) Parameters savingSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem"
  },
  "api/Global.SaveObjectLayerGameObjects.html": {
    "href": "api/Global.SaveObjectLayerGameObjects.html",
    "title": "Class SaveObjectLayerGameObjects | Lofi City Documentation",
    "keywords": "Class SaveObjectLayerGameObjects Namespace Global Assembly Assembly-CSharp.dll Save and load all objects stored in the object layers of a given type. public class SaveObjectLayerGameObjects : MonoBehaviour, ISavableElement Inheritance object Object Component Behaviour MonoBehaviour SaveObjectLayerGameObjects Implements ISavableElement Fields _allLayers [SerializeField] private AllSceneLayers _allLayers Field Value AllSceneLayers _filePath [SerializeField] private string _filePath Field Value string _layerTypesToMonitor [SerializeField] private List<Enum_ObjectLayerType> _layerTypesToMonitor Field Value List<Enum_ObjectLayerType> _objectCount private int _objectCount Field Value int _objects private Dictionary<string, List<(WorldPosition position, object data)>> _objects Field Value Dictionary<string, List<(WorldPosition position, object data)>> _objectsLoaded private int _objectsLoaded Field Value int _onLoaded private Action _onLoaded Field Value Action Methods AddObject(GridObject) private void AddObject(GridObject gridObject) Parameters gridObject GridObject OnLoad(ISavingSystem) public void OnLoad(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem OnSave(ISavingSystem) public void OnSave(ISavingSystem saveSystem) Parameters saveSystem ISavingSystem PlaceItem(AsyncOperationHandle<GameObject>, List<(WorldPosition, object)>) public void PlaceItem(AsyncOperationHandle<GameObject> asyncLoad, List<(WorldPosition, object)> positions) Parameters asyncLoad AsyncOperationHandle<GameObject> positions List<(WorldPosition, object)> SubscribeToObjectsLoaded(Action) public void SubscribeToObjectsLoaded(Action action) Parameters action Action"
  },
  "api/Global.SaveSlotManager.html": {
    "href": "api/Global.SaveSlotManager.html",
    "title": "Class SaveSlotManager | Lofi City Documentation",
    "keywords": "Class SaveSlotManager Namespace Global Assembly Assembly-CSharp.dll Create and retreive different save slots. public class SaveSlotManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SaveSlotManager Methods CreateSaveSlot(string) public string CreateSaveSlot(string name) Parameters name string Returns string GetSaveSlots() public string[] GetSaveSlots() Returns string[]"
  },
  "api/Global.SavingManager.html": {
    "href": "api/Global.SavingManager.html",
    "title": "Class SavingManager | Lofi City Documentation",
    "keywords": "Class SavingManager Namespace Global Assembly Assembly-CSharp.dll Saves and loads all provided SavableElements simultaneously. public class SavingManager : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SavingManager Fields _savableElements [SerializeField] private List<SerializableInterface<ISavableElement>> _savableElements Field Value List<SerializableInterface<ISavableElement>> _saveSystem [SerializeField] private SerializableInterface<ISavingSystem> _saveSystem Field Value SerializableInterface<ISavingSystem> Properties SaveSystem public ISavingSystem SaveSystem { get; } Property Value ISavingSystem Methods Awake() private void Awake() CommitData() public void CommitData() LoadElements() private void LoadElements() SaveElements() public void SaveElements()"
  },
  "api/Global.SceneChange.html": {
    "href": "api/Global.SceneChange.html",
    "title": "Class SceneChange | Lofi City Documentation",
    "keywords": "Class SceneChange Namespace Global Assembly Assembly-CSharp.dll Trigger a change in the current world scene. public class SceneChange : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneChange Fields _beforeSceneChange [SerializeField] private UnityEvent _beforeSceneChange Field Value UnityEvent _newPlayerPosition [SerializeField] private Vector3 _newPlayerPosition Field Value Vector3 _sceneToLoad [SerializeField] private string _sceneToLoad Field Value string Methods OnTriggerEnter2D(Collider2D) private void OnTriggerEnter2D(Collider2D collision) Parameters collision Collider2D"
  },
  "api/Global.SceneDependentData.html": {
    "href": "api/Global.SceneDependentData.html",
    "title": "Class SceneDependentData | Lofi City Documentation",
    "keywords": "Class SceneDependentData Namespace Global Assembly Assembly-CSharp.dll public class SceneDependentData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneDependentData Fields _sceneLayers private AllSceneLayers _sceneLayers Field Value AllSceneLayers _sceneSave private SceneSaving _sceneSave Field Value SceneSaving Properties SceneLayers public AllSceneLayers SceneLayers { get; } Property Value AllSceneLayers SceneSave public SceneSaving SceneSave { get; set; } Property Value SceneSaving Methods OnSceneSetUp() public void OnSceneSetUp() Start() private void Start()"
  },
  "api/Global.SceneLayer.html": {
    "href": "api/Global.SceneLayer.html",
    "title": "Class SceneLayer | Lofi City Documentation",
    "keywords": "Class SceneLayer Namespace Global Assembly Assembly-CSharp.dll Scene layers contain and manage all the object layers at a specific Z position. Specific layers can be retrieved based on their type. public class SceneLayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneLayer Fields _objectLayerParent [SerializeField] private GameObject _objectLayerParent Field Value GameObject _objectLayers private Dictionary<Enum_ObjectLayerType, ObjectLayerBase> _objectLayers Field Value Dictionary<Enum_ObjectLayerType, ObjectLayerBase> _sortingLayer [SerializeField] private Enum_SortingLayers _sortingLayer Field Value Enum_SortingLayers _zPosition [SerializeField] private int _zPosition Field Value int Properties SortingLayer public Enum_SortingLayers SortingLayer { get; } Property Value Enum_SortingLayers ZPosition public int ZPosition { get; } Property Value int Methods Awake() private void Awake() CompareTo(object) public int CompareTo(object obj) Parameters obj object Returns int GetObjectLayer(Enum_ObjectLayerType) public ObjectLayerBase GetObjectLayer(Enum_ObjectLayerType layerType) Parameters layerType Enum_ObjectLayerType Returns ObjectLayerBase"
  },
  "api/Global.SceneSaving.html": {
    "href": "api/Global.SceneSaving.html",
    "title": "Class SceneSaving | Lofi City Documentation",
    "keywords": "Class SceneSaving Namespace Global Assembly Assembly-CSharp.dll Saves the provided Savable Elements in the currently open scene. public class SceneSaving : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SceneSaving Fields _savableElements [SerializeField] private List<SerializableInterface<ISavableElement>> _savableElements Field Value List<SerializableInterface<ISavableElement>> _saveSystem private ISavingSystem _saveSystem Field Value ISavingSystem _savingManager private SavingManager _savingManager Field Value SavingManager Methods Awake() private void Awake() LoadElements() private void LoadElements() SaveElements() public void SaveElements() TriggerSave() public void TriggerSave()"
  },
  "api/Global.ScheduleEvent.html": {
    "href": "api/Global.ScheduleEvent.html",
    "title": "Class ScheduleEvent | Lofi City Documentation",
    "keywords": "Class ScheduleEvent Namespace Global Assembly Assembly-CSharp.dll Invokes an Action at a specific date and time. public class ScheduleEvent : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ScheduleEvent Fields _futureEvents private List<(SpecificDateAndTime, GenericAction)> _futureEvents Field Value List<(SpecificDateAndTime, GenericAction)> _scheduledEventsToday private Dictionary<TimeSlot, List<GenericAction>> _scheduledEventsToday Field Value Dictionary<TimeSlot, List<GenericAction>> _timeManager [SerializeField] private DateTimeManager _timeManager Field Value DateTimeManager Methods AddToSchedule(SpecificDateAndTime, GenericAction) private void AddToSchedule(SpecificDateAndTime eventDate, GenericAction linkedAction) Parameters eventDate SpecificDateAndTime linkedAction GenericAction Awake() private void Awake() OnDayChange() public void OnDayChange() OnTimeUpdate() public void OnTimeUpdate() RemoveFromSchedule<T>(TimeSlot, Action<T>, T) public void RemoveFromSchedule<T>(TimeSlot time, Action<T> action, T data) Parameters time TimeSlot action Action<T> data T Type Parameters T ScheduleAfterTimePassed<T>(SpecificDateAndTime, Action<T>, T) public void ScheduleAfterTimePassed<T>(SpecificDateAndTime delay, Action<T> action, T data) Parameters delay SpecificDateAndTime action Action<T> data T Type Parameters T ScheduleAtSpecificTime<T>(TimeSlot, Action<T>, T) public void ScheduleAtSpecificTime<T>(TimeSlot time, Action<T> action, T data) Parameters time TimeSlot action Action<T> data T Type Parameters T"
  },
  "api/Global.Scriptable_ActivitySchedule.html": {
    "href": "api/Global.Scriptable_ActivitySchedule.html",
    "title": "Class Scriptable_ActivitySchedule | Lofi City Documentation",
    "keywords": "Class Scriptable_ActivitySchedule Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Schedule/Activity\")] public class Scriptable_ActivitySchedule : Scriptable_Schedule<Enum_ActivityType> Inheritance object Object ScriptableObject Scriptable_Schedule<Enum_ActivityType> Scriptable_ActivitySchedule Inherited Members Scriptable_Schedule<Enum_ActivityType>._activities Scriptable_Schedule<Enum_ActivityType>._validDays Scriptable_Schedule<Enum_ActivityType>.Activities Scriptable_Schedule<Enum_ActivityType>.ValidDays Scriptable_Schedule<Enum_ActivityType>.GetActivityAtTime(TimeSlot) Scriptable_Schedule<Enum_ActivityType>.GetNextActivity(TimeSlot)"
  },
  "api/Global.Scriptable_Attraction.html": {
    "href": "api/Global.Scriptable_Attraction.html",
    "title": "Class Scriptable_Attraction | Lofi City Documentation",
    "keywords": "Class Scriptable_Attraction Namespace Global Assembly Assembly-CSharp.dll A point of interest in the world for NPCs to move to and stay at. [CreateAssetMenu(menuName = \"ScriptableObject/Attraction\")] public class Scriptable_Attraction : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Attraction Derived Scriptable_PersonalityAttractions Fields _dateTimeCondition [SerializeField] private DateTimeCondition _dateTimeCondition Field Value DateTimeCondition _interest [SerializeField] private Enum_Interests _interest Field Value Enum_Interests _location [SerializeField] private Enum_SceneName _location Field Value Enum_SceneName _placeAttributes [SerializeField] private List<Enum_PlaceAttributes> _placeAttributes Field Value List<Enum_PlaceAttributes> _placeType [SerializeField] private Enum_ActivityType _placeType Field Value Enum_ActivityType _priority [SerializeField] private int _priority Field Value int Properties DateTimeCondition public DateTimeCondition DateTimeCondition { get; } Property Value DateTimeCondition Interest public Enum_Interests Interest { get; } Property Value Enum_Interests Location public Enum_SceneName Location { get; } Property Value Enum_SceneName PlaceAttributes public List<Enum_PlaceAttributes> PlaceAttributes { get; } Property Value List<Enum_PlaceAttributes> PlaceType public Enum_ActivityType PlaceType { get; } Property Value Enum_ActivityType Priority public int Priority { get; } Property Value int"
  },
  "api/Global.Scriptable_CartData.html": {
    "href": "api/Global.Scriptable_CartData.html",
    "title": "Class Scriptable_CartData | Lofi City Documentation",
    "keywords": "Class Scriptable_CartData Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Cart\")] public class Scriptable_CartData : ScriptableObject Inheritance object Object ScriptableObject Scriptable_CartData Fields _cartUI [SerializeField] private GameObject _cartUI Field Value GameObject Properties CartUI public GameObject CartUI { get; } Property Value GameObject Methods GetSlotTypes() public List<ItemDisplayTable> GetSlotTypes() Returns List<ItemDisplayTable>"
  },
  "api/Global.Scriptable_ColourPalette.html": {
    "href": "api/Global.Scriptable_ColourPalette.html",
    "title": "Class Scriptable_ColourPalette | Lofi City Documentation",
    "keywords": "Class Scriptable_ColourPalette Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/ColourPalette\")] public class Scriptable_ColourPalette : ScriptableObject Inheritance object Object ScriptableObject Scriptable_ColourPalette Fields _validColours [SerializeField] private List<Color> _validColours Field Value List<Color> Properties ValidColours public List<Color> ValidColours { get; set; } Property Value List<Color>"
  },
  "api/Global.Scriptable_ConnectMachineTask.html": {
    "href": "api/Global.Scriptable_ConnectMachineTask.html",
    "title": "Class Scriptable_ConnectMachineTask | Lofi City Documentation",
    "keywords": "Class Scriptable_ConnectMachineTask Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Tasks/ConnectMachines\")] public class Scriptable_ConnectMachineTask : Scriptable_Task Inheritance object Object ScriptableObject Scriptable_Task Scriptable_ConnectMachineTask Inherited Members Scriptable_Task._taskName Scriptable_Task._taskDescription Scriptable_Task._followingTasks Scriptable_Task.TaskName Scriptable_Task.TaskDescription Scriptable_Task.FollowingTasks Fields _machineCategory [SerializeField] private Enum_MachineCategory _machineCategory Field Value Enum_MachineCategory _machinesNeeded [SerializeField] private List<AssetReference> _machinesNeeded Field Value List<AssetReference> Methods GetNewTask() public override PlayerTask GetNewTask() Returns PlayerTask"
  },
  "api/Global.Scriptable_CraftingMachine.html": {
    "href": "api/Global.Scriptable_CraftingMachine.html",
    "title": "Class Scriptable_CraftingMachine | Lofi City Documentation",
    "keywords": "Class Scriptable_CraftingMachine Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Machines/ConvertMachine\")] public class Scriptable_CraftingMachine : Scriptable_Machine Inheritance object Object ScriptableObject Scriptable_Machine Scriptable_CraftingMachine Inherited Members Scriptable_Machine._category Scriptable_Machine._assetRefernce Scriptable_Machine.Category Scriptable_Machine.AssetRefernce Fields _craftingSpeedMultiplier [SerializeField] private float _craftingSpeedMultiplier Field Value float _possibleRecipes [SerializeField] private List<Scriptable_CraftingRecipe> _possibleRecipes Field Value List<Scriptable_CraftingRecipe> Properties CraftingSpeedMultiplier public float CraftingSpeedMultiplier { get; } Property Value float PossibleRecipes public List<Scriptable_CraftingRecipe> PossibleRecipes { get; } Property Value List<Scriptable_CraftingRecipe> Methods GetRecipeFromItem(Scriptable_Item) public Scriptable_CraftingRecipe GetRecipeFromItem(Scriptable_Item item) Parameters item Scriptable_Item Returns Scriptable_CraftingRecipe"
  },
  "api/Global.Scriptable_CraftingRecipe.html": {
    "href": "api/Global.Scriptable_CraftingRecipe.html",
    "title": "Class Scriptable_CraftingRecipe | Lofi City Documentation",
    "keywords": "Class Scriptable_CraftingRecipe Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/CraftingRecipe\")] public class Scriptable_CraftingRecipe : ScriptableObject Inheritance object Object ScriptableObject Scriptable_CraftingRecipe Fields _assetReference [SerializeField] private AssetReference _assetReference Field Value AssetReference _baseMinutesNeeded [SerializeField] private int _baseMinutesNeeded Field Value int _outputs [SerializeField] private List<ItemWithQuantity> _outputs Field Value List<ItemWithQuantity> _requirements [SerializeField] private List<ItemWithQuantity> _requirements Field Value List<ItemWithQuantity> Properties AssetReference public AssetReference AssetReference { get; } Property Value AssetReference BaseMinutesNeeded public int BaseMinutesNeeded { get; } Property Value int Outputs public List<ItemWithQuantity> Outputs { get; } Property Value List<ItemWithQuantity> Requirements public List<ItemWithQuantity> Requirements { get; } Property Value List<ItemWithQuantity>"
  },
  "api/Global.Scriptable_FieldTile.html": {
    "href": "api/Global.Scriptable_FieldTile.html",
    "title": "Class Scriptable_FieldTile | Lofi City Documentation",
    "keywords": "Class Scriptable_FieldTile Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Tiles/Scriptable_FieldTile\")] public class Scriptable_FieldTile : Scriptable_Tile Inheritance object Object ScriptableObject Scriptable_Tile Scriptable_FieldTile Inherited Members Scriptable_Tile._validTile Scriptable_Tile.ValidTile Fields _fieldTileType [SerializeField] private Enum_FieldTileType _fieldTileType Field Value Enum_FieldTileType Properties FieldTileType public Enum_FieldTileType FieldTileType { get; } Property Value Enum_FieldTileType"
  },
  "api/Global.Scriptable_InWorldShop.html": {
    "href": "api/Global.Scriptable_InWorldShop.html",
    "title": "Class Scriptable_InWorldShop | Lofi City Documentation",
    "keywords": "Class Scriptable_InWorldShop Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/InWorldShop\")] public class Scriptable_InWorldShop : ScriptableObject Inheritance object Object ScriptableObject Scriptable_InWorldShop Fields _itemsBeingSold [SerializeField] private InspectableDictionary<AddressableAsset_Item, int> _itemsBeingSold Field Value InspectableDictionary<AddressableAsset_Item, int> _openingHours [SerializeField] private DateTimeCondition _openingHours Field Value DateTimeCondition Properties ItemsBeingSold public Dictionary<AddressableAsset_Item, int> ItemsBeingSold { get; } Property Value Dictionary<AddressableAsset_Item, int> OpeningHours public DateTimeCondition OpeningHours { get; } Property Value DateTimeCondition"
  },
  "api/Global.Scriptable_Interest.html": {
    "href": "api/Global.Scriptable_Interest.html",
    "title": "Class Scriptable_Interest | Lofi City Documentation",
    "keywords": "Class Scriptable_Interest Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/NPC/Interest\")] public class Scriptable_Interest : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Interest Fields _hat [SerializeField] private Scriptable_Outfit _hat Field Value Scriptable_Outfit _icon [SerializeField] private Sprite _icon Field Value Sprite _interest [SerializeField] private Enum_Interests _interest Field Value Enum_Interests _itemsDisliked [SerializeField] private List<Enum_ItemAttributes> _itemsDisliked Field Value List<Enum_ItemAttributes> _itemsLiked [SerializeField] private List<Enum_ItemAttributes> _itemsLiked Field Value List<Enum_ItemAttributes> Properties Hat public Scriptable_Outfit Hat { get; } Property Value Scriptable_Outfit Icon public Sprite Icon { get; } Property Value Sprite Interest public Enum_Interests Interest { get; } Property Value Enum_Interests ItemsDisliked public List<Enum_ItemAttributes> ItemsDisliked { get; } Property Value List<Enum_ItemAttributes> ItemsLiked public List<Enum_ItemAttributes> ItemsLiked { get; } Property Value List<Enum_ItemAttributes>"
  },
  "api/Global.Scriptable_Item.html": {
    "href": "api/Global.Scriptable_Item.html",
    "title": "Class Scriptable_Item | Lofi City Documentation",
    "keywords": "Class Scriptable_Item Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Items/Item\")] public class Scriptable_Item : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Item Derived Scriptable_PlacableItem Scriptable_SellableItem Fields _assetReference [SerializeField] private AssetReference _assetReference Field Value AssetReference _category [SerializeField] private Enum_ItemCategory _category Field Value Enum_ItemCategory _icon [SerializeField] private Sprite _icon Field Value Sprite _interaction [SerializeField] protected Enum_ItemInteraction _interaction Field Value Enum_ItemInteraction _name [SerializeField] private string _name Field Value string Properties AssetReference public AssetReference AssetReference { get; set; } Property Value AssetReference Category public Enum_ItemCategory Category { get; } Property Value Enum_ItemCategory Icon public Sprite Icon { get; } Property Value Sprite Interaction public Enum_ItemInteraction Interaction { get; } Property Value Enum_ItemInteraction Name public string Name { get; } Property Value string"
  },
  "api/Global.Scriptable_ItemCollectedTask.html": {
    "href": "api/Global.Scriptable_ItemCollectedTask.html",
    "title": "Class Scriptable_ItemCollectedTask | Lofi City Documentation",
    "keywords": "Class Scriptable_ItemCollectedTask Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Tasks/ItemCollected\")] public class Scriptable_ItemCollectedTask : Scriptable_Task Inheritance object Object ScriptableObject Scriptable_Task Scriptable_ItemCollectedTask Inherited Members Scriptable_Task._taskName Scriptable_Task._taskDescription Scriptable_Task._followingTasks Scriptable_Task.TaskName Scriptable_Task.TaskDescription Scriptable_Task.FollowingTasks Fields _itemsNeeded [SerializeField] private InspectableDictionary<AddressableAsset_Item, int> _itemsNeeded Field Value InspectableDictionary<AddressableAsset_Item, int> Methods GetNewTask() public override PlayerTask GetNewTask() Returns PlayerTask"
  },
  "api/Global.Scriptable_LimitedPlacableItem.html": {
    "href": "api/Global.Scriptable_LimitedPlacableItem.html",
    "title": "Class Scriptable_LimitedPlacableItem | Lofi City Documentation",
    "keywords": "Class Scriptable_LimitedPlacableItem Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Items/LimitedPlacable\")] public class Scriptable_LimitedPlacableItem : Scriptable_PlacableItem Inheritance object Object ScriptableObject Scriptable_Item Scriptable_PlacableItem Scriptable_LimitedPlacableItem Inherited Members Scriptable_PlacableItem._placableGameObject Scriptable_PlacableItem._layerPlacedIn Scriptable_PlacableItem.PlacableGameObject Scriptable_PlacableItem.LayerPlacedIn Scriptable_Item._name Scriptable_Item._icon Scriptable_Item._category Scriptable_Item._assetReference Scriptable_Item._interaction Scriptable_Item.Name Scriptable_Item.Icon Scriptable_Item.Category Scriptable_Item.Interaction Scriptable_Item.AssetReference Fields _validEcosystem [SerializeField] private List<Enum_EcosystemType> _validEcosystem Field Value List<Enum_EcosystemType> _validFieldTypes [SerializeField] private List<Enum_FieldTileType> _validFieldTypes Field Value List<Enum_FieldTileType> Properties ValidEcosystem public List<Enum_EcosystemType> ValidEcosystem { get; } Property Value List<Enum_EcosystemType> ValidFieldTypes public List<Enum_FieldTileType> ValidFieldTypes { get; } Property Value List<Enum_FieldTileType>"
  },
  "api/Global.Scriptable_Machine.html": {
    "href": "api/Global.Scriptable_Machine.html",
    "title": "Class Scriptable_Machine | Lofi City Documentation",
    "keywords": "Class Scriptable_Machine Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Machines/Machine\")] public class Scriptable_Machine : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Machine Derived Scriptable_CraftingMachine Fields _assetRefernce [SerializeField] private AssetReference _assetRefernce Field Value AssetReference _category [SerializeField] private Enum_MachineCategory _category Field Value Enum_MachineCategory Properties AssetRefernce public AssetReference AssetRefernce { get; set; } Property Value AssetReference Category public Enum_MachineCategory Category { get; } Property Value Enum_MachineCategory"
  },
  "api/Global.Scriptable_NPCSchedule.html": {
    "href": "api/Global.Scriptable_NPCSchedule.html",
    "title": "Class Scriptable_NPCSchedule | Lofi City Documentation",
    "keywords": "Class Scriptable_NPCSchedule Namespace Global Assembly Assembly-CSharp.dll A list of NPC Activities with an associated time slot. [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Schedule\")] public class Scriptable_NPCSchedule : ScriptableObject Inheritance object Object ScriptableObject Scriptable_NPCSchedule Fields _activities [SerializeField] private List<NPC_ScheduleSlot> _activities Field Value List<NPC_ScheduleSlot> Properties Activities public List<NPC_ScheduleSlot> Activities { get; } Property Value List<NPC_ScheduleSlot> Methods GetActivityAtTime(TimeSlot) public NPC_ScheduleSlot GetActivityAtTime(TimeSlot time) Parameters time TimeSlot Returns NPC_ScheduleSlot GetNextActivity(TimeSlot) public NPC_ScheduleSlot GetNextActivity(TimeSlot time) Parameters time TimeSlot Returns NPC_ScheduleSlot"
  },
  "api/Global.Scriptable_Outfit.html": {
    "href": "api/Global.Scriptable_Outfit.html",
    "title": "Class Scriptable_Outfit | Lofi City Documentation",
    "keywords": "Class Scriptable_Outfit Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Outfit\")] public class Scriptable_Outfit : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Outfit Fields _outfitName [SerializeField] private string _outfitName Field Value string _outfitType [SerializeField] private Enum_NPCVisualElements _outfitType Field Value Enum_NPCVisualElements Properties OutfitName public string OutfitName { get; } Property Value string OutfitType public Enum_NPCVisualElements OutfitType { get; } Property Value Enum_NPCVisualElements"
  },
  "api/Global.Scriptable_PathTile.html": {
    "href": "api/Global.Scriptable_PathTile.html",
    "title": "Class Scriptable_PathTile | Lofi City Documentation",
    "keywords": "Class Scriptable_PathTile Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Tiles/Scriptable_PathTile\")] public class Scriptable_PathTile : Scriptable_Tile Inheritance object Object ScriptableObject Scriptable_Tile Scriptable_PathTile Inherited Members Scriptable_Tile._validTile Scriptable_Tile.ValidTile Fields _isBuildable [SerializeField] private bool _isBuildable Field Value bool _isDrop [SerializeField] private bool _isDrop Field Value bool _isWalkable [SerializeField] private bool _isWalkable Field Value bool _steps [SerializeField] private int _steps Field Value int Properties IsBuildable public bool IsBuildable { get; } Property Value bool IsDrop public bool IsDrop { get; } Property Value bool IsWalkable public bool IsWalkable { get; } Property Value bool Steps public int Steps { get; } Property Value int"
  },
  "api/Global.Scriptable_Personality.html": {
    "href": "api/Global.Scriptable_Personality.html",
    "title": "Class Scriptable_Personality | Lofi City Documentation",
    "keywords": "Class Scriptable_Personality Namespace Global Assembly Assembly-CSharp.dll Determine what an NPC is interested in and what they want. [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/NPC/Personality\")] public class Scriptable_Personality : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Personality Fields _budget [SerializeField] private int _budget Field Value int _icon [SerializeField] private Sprite _icon Field Value Sprite _itemsDisliked [SerializeField] private List<Enum_ItemAttributes> _itemsDisliked Field Value List<Enum_ItemAttributes> _itemsLiked [SerializeField] private List<Enum_ItemAttributes> _itemsLiked Field Value List<Enum_ItemAttributes> _pants [SerializeField] private List<Scriptable_Outfit> _pants Field Value List<Scriptable_Outfit> _placesLiked [SerializeField] private List<Enum_PlaceAttributes> _placesLiked Field Value List<Enum_PlaceAttributes> _tops [SerializeField] private List<Scriptable_Outfit> _tops Field Value List<Scriptable_Outfit> Properties Budget public int Budget { get; } Property Value int Icon public Sprite Icon { get; } Property Value Sprite ItemsDisliked public List<Enum_ItemAttributes> ItemsDisliked { get; } Property Value List<Enum_ItemAttributes> ItemsLiked public List<Enum_ItemAttributes> ItemsLiked { get; } Property Value List<Enum_ItemAttributes> Pants public List<Scriptable_Outfit> Pants { get; } Property Value List<Scriptable_Outfit> PlacesLiked public List<Enum_PlaceAttributes> PlacesLiked { get; } Property Value List<Enum_PlaceAttributes> Tops public List<Scriptable_Outfit> Tops { get; } Property Value List<Scriptable_Outfit>"
  },
  "api/Global.Scriptable_PersonalityAttractions.html": {
    "href": "api/Global.Scriptable_PersonalityAttractions.html",
    "title": "Class Scriptable_PersonalityAttractions | Lofi City Documentation",
    "keywords": "Class Scriptable_PersonalityAttractions Namespace Global Assembly Assembly-CSharp.dll public class Scriptable_PersonalityAttractions : Scriptable_Attraction Inheritance object Object ScriptableObject Scriptable_Attraction Scriptable_PersonalityAttractions Inherited Members Scriptable_Attraction._placeType Scriptable_Attraction._placeAttributes Scriptable_Attraction._dateTimeCondition Scriptable_Attraction._location Scriptable_Attraction._interest Scriptable_Attraction._priority Scriptable_Attraction.PlaceType Scriptable_Attraction.DateTimeCondition Scriptable_Attraction.PlaceAttributes Scriptable_Attraction.Location Scriptable_Attraction.Interest Scriptable_Attraction.Priority Fields _PlaceAttributes [SerializeField] private List<Enum_PlaceAttributes> _PlaceAttributes Field Value List<Enum_PlaceAttributes>"
  },
  "api/Global.Scriptable_PlacableItem.html": {
    "href": "api/Global.Scriptable_PlacableItem.html",
    "title": "Class Scriptable_PlacableItem | Lofi City Documentation",
    "keywords": "Class Scriptable_PlacableItem Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Items/Placable\")] public class Scriptable_PlacableItem : Scriptable_Item Inheritance object Object ScriptableObject Scriptable_Item Scriptable_PlacableItem Derived Scriptable_LimitedPlacableItem Inherited Members Scriptable_Item._name Scriptable_Item._icon Scriptable_Item._category Scriptable_Item._assetReference Scriptable_Item._interaction Scriptable_Item.Name Scriptable_Item.Icon Scriptable_Item.Category Scriptable_Item.Interaction Scriptable_Item.AssetReference Fields _layerPlacedIn [SerializeField] private Enum_ObjectLayerType _layerPlacedIn Field Value Enum_ObjectLayerType _placableGameObject [SerializeField] private AssetReference _placableGameObject Field Value AssetReference Properties LayerPlacedIn public Enum_ObjectLayerType LayerPlacedIn { get; } Property Value Enum_ObjectLayerType PlacableGameObject public AssetReference PlacableGameObject { get; } Property Value AssetReference"
  },
  "api/Global.Scriptable_Plant.html": {
    "href": "api/Global.Scriptable_Plant.html",
    "title": "Class Scriptable_Plant | Lofi City Documentation",
    "keywords": "Class Scriptable_Plant Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Plant\")] public class Scriptable_Plant : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Plant Fields _daysNeeded [SerializeField] private int _daysNeeded Field Value int _itemsToGive [SerializeField] private List<ItemWithQuantity> _itemsToGive Field Value List<ItemWithQuantity> _spritesAtStage [SerializeField] private InspectableDictionary<int, Sprite> _spritesAtStage Field Value InspectableDictionary<int, Sprite> Properties DaysNeeded public int DaysNeeded { get; } Property Value int ItemsToGive public List<ItemWithQuantity> ItemsToGive { get; } Property Value List<ItemWithQuantity> Methods GetSpriteAtDay(int) public Sprite GetSpriteAtDay(int daysPassed) Parameters daysPassed int Returns Sprite"
  },
  "api/Global.Scriptable_RandomNPCSchedule.html": {
    "href": "api/Global.Scriptable_RandomNPCSchedule.html",
    "title": "Class Scriptable_RandomNPCSchedule | Lofi City Documentation",
    "keywords": "Class Scriptable_RandomNPCSchedule Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Schedule/RandomNPCPopulation\")] public class Scriptable_RandomNPCSchedule : Scriptable_Schedule<RandomNPC_ScenePopulation> Inheritance object Object ScriptableObject Scriptable_Schedule<RandomNPC_ScenePopulation> Scriptable_RandomNPCSchedule Inherited Members Scriptable_Schedule<RandomNPC_ScenePopulation>._activities Scriptable_Schedule<RandomNPC_ScenePopulation>._validDays Scriptable_Schedule<RandomNPC_ScenePopulation>.Activities Scriptable_Schedule<RandomNPC_ScenePopulation>.ValidDays Scriptable_Schedule<RandomNPC_ScenePopulation>.GetActivityAtTime(TimeSlot) Scriptable_Schedule<RandomNPC_ScenePopulation>.GetNextActivity(TimeSlot)"
  },
  "api/Global.Scriptable_SceneData.html": {
    "href": "api/Global.Scriptable_SceneData.html",
    "title": "Class Scriptable_SceneData | Lofi City Documentation",
    "keywords": "Class Scriptable_SceneData Namespace Global Assembly Assembly-CSharp.dll Stores a high level view of a scene that can be used in the Manager scene. [CreateAssetMenu(menuName = \"ScriptableObject/SceneData\")] public class Scriptable_SceneData : ScriptableObject Inheritance object Object ScriptableObject Scriptable_SceneData Fields _adjacentScenes [SerializeField] private List<Scriptable_SceneData> _adjacentScenes Field Value List<Scriptable_SceneData> _attractionData [SerializeField] private List<Scriptable_Attraction> _attractionData Field Value List<Scriptable_Attraction> _sceneName [SerializeField] private Enum_SceneName _sceneName Field Value Enum_SceneName Properties AdjacentScenes public List<Scriptable_SceneData> AdjacentScenes { get; } Property Value List<Scriptable_SceneData> AttractionData public List<Scriptable_Attraction> AttractionData { get; } Property Value List<Scriptable_Attraction> SceneName public Enum_SceneName SceneName { get; } Property Value Enum_SceneName"
  },
  "api/Global.Scriptable_Schedule-1.html": {
    "href": "api/Global.Scriptable_Schedule-1.html",
    "title": "Class Scriptable_Schedule<T> | Lofi City Documentation",
    "keywords": "Class Scriptable_Schedule<T> Namespace Global Assembly Assembly-CSharp.dll A list of NPC Activities with an associated time slot. public abstract class Scriptable_Schedule<T> : ScriptableObject Type Parameters T Inheritance object Object ScriptableObject Scriptable_Schedule<T> Derived Scriptable_ActivitySchedule Scriptable_RandomNPCSchedule Fields _activities [SerializeField] private List<NPC_ScheduleSlot<T>> _activities Field Value List<NPC_ScheduleSlot<T>> _validDays [SerializeField] private DateTimeCondition _validDays Field Value DateTimeCondition Properties Activities public List<NPC_ScheduleSlot<T>> Activities { get; } Property Value List<NPC_ScheduleSlot<T>> ValidDays public DateTimeCondition ValidDays { get; set; } Property Value DateTimeCondition Methods GetActivityAtTime(TimeSlot) public NPC_ScheduleSlot<T> GetActivityAtTime(TimeSlot time) Parameters time TimeSlot Returns NPC_ScheduleSlot<T> GetNextActivity(TimeSlot) public NPC_ScheduleSlot<T> GetNextActivity(TimeSlot time) Parameters time TimeSlot Returns NPC_ScheduleSlot<T>"
  },
  "api/Global.Scriptable_SellItemsTask.html": {
    "href": "api/Global.Scriptable_SellItemsTask.html",
    "title": "Class Scriptable_SellItemsTask | Lofi City Documentation",
    "keywords": "Class Scriptable_SellItemsTask Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Tasks/SellItems\")] public class Scriptable_SellItemsTask : Scriptable_Task Inheritance object Object ScriptableObject Scriptable_Task Scriptable_SellItemsTask Inherited Members Scriptable_Task._taskName Scriptable_Task._taskDescription Scriptable_Task._followingTasks Scriptable_Task.TaskName Scriptable_Task.TaskDescription Scriptable_Task.FollowingTasks Fields _moneyNeeded [SerializeField] private int _moneyNeeded Field Value int Methods GetNewTask() public override PlayerTask GetNewTask() Returns PlayerTask"
  },
  "api/Global.Scriptable_SellableItem.html": {
    "href": "api/Global.Scriptable_SellableItem.html",
    "title": "Class Scriptable_SellableItem | Lofi City Documentation",
    "keywords": "Class Scriptable_SellableItem Namespace Global Assembly Assembly-CSharp.dll [Serializable] [CreateAssetMenu(menuName = \"ScriptableObject/Items/SellableItem\")] public class Scriptable_SellableItem : Scriptable_Item Inheritance object Object ScriptableObject Scriptable_Item Scriptable_SellableItem Inherited Members Scriptable_Item._name Scriptable_Item._icon Scriptable_Item._category Scriptable_Item._assetReference Scriptable_Item._interaction Scriptable_Item.Name Scriptable_Item.Icon Scriptable_Item.Category Scriptable_Item.Interaction Scriptable_Item.AssetReference Fields _attributes [SerializeField] private List<Enum_ItemAttributes> _attributes Field Value List<Enum_ItemAttributes> _basePrice [SerializeField] private int _basePrice Field Value int _displayCondition [SerializeField] private Enum_ItemDisplayCondition _displayCondition Field Value Enum_ItemDisplayCondition Properties Attributes public List<Enum_ItemAttributes> Attributes { get; } Property Value List<Enum_ItemAttributes> BasePrice public int BasePrice { get; } Property Value int DisplayCondition public Enum_ItemDisplayCondition DisplayCondition { get; } Property Value Enum_ItemDisplayCondition"
  },
  "api/Global.Scriptable_Task.html": {
    "href": "api/Global.Scriptable_Task.html",
    "title": "Class Scriptable_Task | Lofi City Documentation",
    "keywords": "Class Scriptable_Task Namespace Global Assembly Assembly-CSharp.dll public abstract class Scriptable_Task : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Task Derived Scriptable_ConnectMachineTask Scriptable_ItemCollectedTask Scriptable_SellItemsTask Fields _followingTasks [SerializeField] protected List<Scriptable_Task> _followingTasks Field Value List<Scriptable_Task> _taskDescription [SerializeField] protected string _taskDescription Field Value string _taskName [SerializeField] protected string _taskName Field Value string Properties FollowingTasks public List<Scriptable_Task> FollowingTasks { get; } Property Value List<Scriptable_Task> TaskDescription public string TaskDescription { get; } Property Value string TaskName public string TaskName { get; } Property Value string Methods GetNewTask() public abstract PlayerTask GetNewTask() Returns PlayerTask"
  },
  "api/Global.Scriptable_Tile.html": {
    "href": "api/Global.Scriptable_Tile.html",
    "title": "Class Scriptable_Tile | Lofi City Documentation",
    "keywords": "Class Scriptable_Tile Namespace Global Assembly Assembly-CSharp.dll public class Scriptable_Tile : ScriptableObject Inheritance object Object ScriptableObject Scriptable_Tile Derived Scriptable_FieldTile Scriptable_PathTile Scriptable_VisualFieldTile Fields _validTile [SerializeField] private TileBase _validTile Field Value TileBase Properties ValidTile public TileBase ValidTile { get; } Property Value TileBase"
  },
  "api/Global.Scriptable_TileGroup.html": {
    "href": "api/Global.Scriptable_TileGroup.html",
    "title": "Class Scriptable_TileGroup | Lofi City Documentation",
    "keywords": "Class Scriptable_TileGroup Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Tiles/Scriptable_TileGroup\")] public class Scriptable_TileGroup : ScriptableObject Inheritance object Object ScriptableObject Scriptable_TileGroup Fields _tiles [SerializeField] private List<Scriptable_Tile> _tiles Field Value List<Scriptable_Tile> Properties Tiles public List<Scriptable_Tile> Tiles { get; } Property Value List<Scriptable_Tile>"
  },
  "api/Global.Scriptable_VisualFieldTile.html": {
    "href": "api/Global.Scriptable_VisualFieldTile.html",
    "title": "Class Scriptable_VisualFieldTile | Lofi City Documentation",
    "keywords": "Class Scriptable_VisualFieldTile Namespace Global Assembly Assembly-CSharp.dll [CreateAssetMenu(menuName = \"ScriptableObject/Tiles/Scriptable_VisualFieldTile\")] public class Scriptable_VisualFieldTile : Scriptable_Tile Inheritance object Object ScriptableObject Scriptable_Tile Scriptable_VisualFieldTile Inherited Members Scriptable_Tile._validTile Scriptable_Tile.ValidTile Fields _ecosystemType [SerializeField] private Enum_EcosystemType _ecosystemType Field Value Enum_EcosystemType _fieldType [SerializeField] private Enum_FieldTileType _fieldType Field Value Enum_FieldTileType _isOverlay [SerializeField] private bool _isOverlay Field Value bool Properties EcosystemType public Enum_EcosystemType EcosystemType { get; } Property Value Enum_EcosystemType FieldType public Enum_FieldTileType FieldType { get; } Property Value Enum_FieldTileType IsOverlay public bool IsOverlay { get; } Property Value bool"
  },
  "api/Global.SetCamera.html": {
    "href": "api/Global.SetCamera.html",
    "title": "Class SetCamera | Lofi City Documentation",
    "keywords": "Class SetCamera Namespace Global Assembly Assembly-CSharp.dll public class SetCamera : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SetCamera Fields _camera [SerializeField] private CinemachineVirtualCamera _camera Field Value CinemachineVirtualCamera _sceneCollider [SerializeField] private GameObject _sceneCollider Field Value GameObject Methods Awake() private void Awake()"
  },
  "api/Global.SetObjectSortingLayer.html": {
    "href": "api/Global.SetObjectSortingLayer.html",
    "title": "Class SetObjectSortingLayer | Lofi City Documentation",
    "keywords": "Class SetObjectSortingLayer Namespace Global Assembly Assembly-CSharp.dll public class SetObjectSortingLayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SetObjectSortingLayer Fields _renderer [SerializeField] private SpriteRenderer _renderer Field Value SpriteRenderer Methods Start() private void Start()"
  },
  "api/Global.SetupNPCVisuals.html": {
    "href": "api/Global.SetupNPCVisuals.html",
    "title": "Class SetupNPCVisuals | Lofi City Documentation",
    "keywords": "Class SetupNPCVisuals Namespace Global Assembly Assembly-CSharp.dll public class SetupNPCVisuals : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SetupNPCVisuals Fields _directionalVisuals [SerializeField] private InspectableDictionary<Enum_Directions, NPCVisuals_Directional> _directionalVisuals Field Value InspectableDictionary<Enum_Directions, NPCVisuals_Directional> Methods SetDirection(Enum_Directions) public void SetDirection(Enum_Directions newDirection) Parameters newDirection Enum_Directions SetOutfit(Scriptable_Outfit) public void SetOutfit(Scriptable_Outfit outfit) Parameters outfit Scriptable_Outfit SetSkinColour(Color) public void SetSkinColour(Color color) Parameters color Color"
  },
  "api/Global.SimpleDayNightLighting.html": {
    "href": "api/Global.SimpleDayNightLighting.html",
    "title": "Class SimpleDayNightLighting | Lofi City Documentation",
    "keywords": "Class SimpleDayNightLighting Namespace Global Assembly Assembly-CSharp.dll public class SimpleDayNightLighting : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour SimpleDayNightLighting Fields _dayManager private DateTimeManager _dayManager Field Value DateTimeManager _light [SerializeField] private Light2D _light Field Value Light2D _lightIntensity [SerializeField] private float _lightIntensity Field Value float _scheduler private ScheduleEvent _scheduler Field Value ScheduleEvent _timeForSunset [SerializeField] private TimeSlot _timeForSunset Field Value TimeSlot _timeToFadeIn [SerializeField] private float _timeToFadeIn Field Value float Methods FadeIn() private IEnumerator FadeIn() Returns IEnumerator OnMorning(int) private void OnMorning(int day) Parameters day int SetLightValue(bool) private void SetLightValue(bool isMorning) Parameters isMorning bool Start() private void Start()"
  },
  "api/Global.SlotBasedInventory.html": {
    "href": "api/Global.SlotBasedInventory.html",
    "title": "Class SlotBasedInventory | Lofi City Documentation",
    "keywords": "Class SlotBasedInventory Namespace Global Assembly Assembly-CSharp.dll This version has a limited number of slots with a maximum quantity in each. public class SlotBasedInventory : IInventory Inheritance object SlotBasedInventory Implements IInventory Constructors SlotBasedInventory(int, int) public SlotBasedInventory(int numberOfSlots, int maxQuantityInSlot) Parameters numberOfSlots int maxQuantityInSlot int Fields _inventorySlots private ItemWithQuantity[] _inventorySlots Field Value ItemWithQuantity[] _maxQuantityInSlot private int _maxQuantityInSlot Field Value int _numberOfSlots private int _numberOfSlots Field Value int _onChangeInventory private Action<Scriptable_Item, int> _onChangeInventory Field Value Action<Scriptable_Item, int> Methods AddToInventory(Scriptable_Item, int) public void AddToInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int AddToInventory(Scriptable_Item, int, int) public int AddToInventory(Scriptable_Item item, int quantity, int slot) Parameters item Scriptable_Item quantity int slot int Returns int CanAddToInventory(Scriptable_Item, int) public bool CanAddToInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int Returns bool ClearSlot(int) public ItemWithQuantity ClearSlot(int slot) Parameters slot int Returns ItemWithQuantity GetAllSlots() public ItemWithQuantity[] GetAllSlots() Returns ItemWithQuantity[] GetFreeSlots() public List<int> GetFreeSlots() Returns List<int> GetItemInSlot(int) public ItemWithQuantity GetItemInSlot(int slot) Parameters slot int Returns ItemWithQuantity GetSlotsContainingItem(Scriptable_Item) public List<int> GetSlotsContainingItem(Scriptable_Item item) Parameters item Scriptable_Item Returns List<int> IsInInventory(Scriptable_Item) public bool IsInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns bool QuantityInInventory(Scriptable_Item) public int QuantityInInventory(Scriptable_Item item) Parameters item Scriptable_Item Returns int RemoveFromInventory(Scriptable_Item, int) public void RemoveFromInventory(Scriptable_Item item, int quantity) Parameters item Scriptable_Item quantity int SubscribeToChangeInInventory(Action<Scriptable_Item, int>) public void SubscribeToChangeInInventory(Action<Scriptable_Item, int> actionOnAddition) Parameters actionOnAddition Action<Scriptable_Item, int>"
  },
  "api/Global.SpecificDateAndTime.html": {
    "href": "api/Global.SpecificDateAndTime.html",
    "title": "Struct SpecificDateAndTime | Lofi City Documentation",
    "keywords": "Struct SpecificDateAndTime Namespace Global Assembly Assembly-CSharp.dll [Serializable] public struct SpecificDateAndTime Constructors SpecificDateAndTime(int) public SpecificDateAndTime(int minute) Parameters minute int SpecificDateAndTime(int, int, int, int) public SpecificDateAndTime(int minute, int hour, int day, int year) Parameters minute int hour int day int year int Fields _dateAsArray private int[] _dateAsArray Field Value int[] _day [SerializeField] private int _day Field Value int _time [SerializeField] private TimeSlot _time Field Value TimeSlot _year [SerializeField] private int _year Field Value int Properties Day public int Day { get; } Property Value int Time public TimeSlot Time { get; } Property Value TimeSlot Year public int Year { get; } Property Value int Methods AddDates(SpecificDateAndTime) public SpecificDateAndTime AddDates(SpecificDateAndTime dateToAdd) Parameters dateToAdd SpecificDateAndTime Returns SpecificDateAndTime CompareTo(SpecificDateAndTime) public int CompareTo(SpecificDateAndTime other) Parameters other SpecificDateAndTime Returns int DateAsArray() public int[] DateAsArray() Returns int[] Equals(SpecificDateAndTime) public bool Equals(SpecificDateAndTime other) Parameters other SpecificDateAndTime Returns bool Operators operator >(SpecificDateAndTime, SpecificDateAndTime) public static bool operator >(SpecificDateAndTime operand1, SpecificDateAndTime operand2) Parameters operand1 SpecificDateAndTime operand2 SpecificDateAndTime Returns bool operator <(SpecificDateAndTime, SpecificDateAndTime) public static bool operator <(SpecificDateAndTime operand1, SpecificDateAndTime operand2) Parameters operand1 SpecificDateAndTime operand2 SpecificDateAndTime Returns bool"
  },
  "api/Global.StartGame.html": {
    "href": "api/Global.StartGame.html",
    "title": "Class StartGame | Lofi City Documentation",
    "keywords": "Class StartGame Namespace Global Assembly Assembly-CSharp.dll Load the Manager scene and set the save slot being used. public class StartGame : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour StartGame Fields _delayBeforeStart [SerializeField] private float _delayBeforeStart Field Value float Methods DelayBeforeStart() private IEnumerator DelayBeforeStart() Returns IEnumerator LoadExistingGame(string) public void LoadExistingGame(string saveSlot) Parameters saveSlot string"
  },
  "api/Global.TaskList.html": {
    "href": "api/Global.TaskList.html",
    "title": "Class TaskList | Lofi City Documentation",
    "keywords": "Class TaskList Namespace Global Assembly Assembly-CSharp.dll A list of tasks that the player should complete. public class TaskList : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TaskList Fields _allTasks private List<PlayerTask> _allTasks Field Value List<PlayerTask> _onTaskAdded private Action _onTaskAdded Field Value Action Properties AllTasks public List<PlayerTask> AllTasks { get; } Property Value List<PlayerTask> Methods AddTask(PlayerTask) public void AddTask(PlayerTask task) Parameters task PlayerTask RemoveTask(PlayerTask) public void RemoveTask(PlayerTask task) Parameters task PlayerTask SubscribeToTaskAdded(Action) public void SubscribeToTaskAdded(Action action) Parameters action Action"
  },
  "api/Global.TaskQueue.html": {
    "href": "api/Global.TaskQueue.html",
    "title": "Class TaskQueue | Lofi City Documentation",
    "keywords": "Class TaskQueue Namespace Global Assembly Assembly-CSharp.dll public class TaskQueue : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TaskQueue Fields _onTaskComplete [SerializeField] private UnityEvent<PlayerTask> _onTaskComplete Field Value UnityEvent<PlayerTask> _startingTasks [SerializeField] private List<Scriptable_Task> _startingTasks Field Value List<Scriptable_Task> _taskList [SerializeField] private TaskList _taskList Field Value TaskList Methods OnPreviousTaskComplete(PlayerTask) private void OnPreviousTaskComplete(PlayerTask task) Parameters task PlayerTask SetTask(Scriptable_Task) private void SetTask(Scriptable_Task taskData) Parameters taskData Scriptable_Task Start() private void Start()"
  },
  "api/Global.TemporaryExit.html": {
    "href": "api/Global.TemporaryExit.html",
    "title": "Class TemporaryExit | Lofi City Documentation",
    "keywords": "Class TemporaryExit Namespace Global Assembly Assembly-CSharp.dll public class TemporaryExit : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TemporaryExit Fields _saveManager [SerializeField] private SavingManager _saveManager Field Value SavingManager Methods Close() public void Close() Save() public void Save()"
  },
  "api/Global.TemporarySceneLoading.html": {
    "href": "api/Global.TemporarySceneLoading.html",
    "title": "Class TemporarySceneLoading | Lofi City Documentation",
    "keywords": "Class TemporarySceneLoading Namespace Global Assembly Assembly-CSharp.dll public class TemporarySceneLoading : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TemporarySceneLoading Methods Start() private void Start()"
  },
  "api/Global.TestNPCVisuals.html": {
    "href": "api/Global.TestNPCVisuals.html",
    "title": "Class TestNPCVisuals | Lofi City Documentation",
    "keywords": "Class TestNPCVisuals Namespace Global Assembly Assembly-CSharp.dll public class TestNPCVisuals : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestNPCVisuals Fields _color [SerializeField] private Color _color Field Value Color _outfits [SerializeField] private List<Scriptable_Outfit> _outfits Field Value List<Scriptable_Outfit> _visuals [SerializeField] private SetupNPCVisuals _visuals Field Value SetupNPCVisuals Methods Loop() private IEnumerator Loop() Returns IEnumerator Start() private void Start()"
  },
  "api/Global.TestingCartSystem.html": {
    "href": "api/Global.TestingCartSystem.html",
    "title": "Class TestingCartSystem | Lofi City Documentation",
    "keywords": "Class TestingCartSystem Namespace Global Assembly Assembly-CSharp.dll public class TestingCartSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingCartSystem Fields _budget [SerializeField] private int _budget Field Value int _customer private Customer _customer Field Value Customer _dislikes [SerializeField] private List<Enum_ItemAttributes> _dislikes Field Value List<Enum_ItemAttributes> _likes [SerializeField] private List<Enum_ItemAttributes> _likes Field Value List<Enum_ItemAttributes> _queue [SerializeField] private CustomerQueue _queue Field Value CustomerQueue Methods AddCustomer() public void AddCustomer()"
  },
  "api/Global.TestingCraftingRequests.html": {
    "href": "api/Global.TestingCraftingRequests.html",
    "title": "Class TestingCraftingRequests | Lofi City Documentation",
    "keywords": "Class TestingCraftingRequests Namespace Global Assembly Assembly-CSharp.dll public class TestingCraftingRequests : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingCraftingRequests Fields _flour [SerializeField] private Scriptable_Item _flour Field Value Scriptable_Item _network [SerializeField] private MachineNetwork_Craft _network Field Value MachineNetwork_Craft _scheduler [SerializeField] private ScheduleEvent _scheduler Field Value ScheduleEvent _wheet [SerializeField] private Scriptable_Item _wheet Field Value Scriptable_Item Methods Start() private void Start() Update() private void Update()"
  },
  "api/Global.TestingInteraction.html": {
    "href": "api/Global.TestingInteraction.html",
    "title": "Class TestingInteraction | Lofi City Documentation",
    "keywords": "Class TestingInteraction Namespace Global Assembly Assembly-CSharp.dll public class TestingInteraction : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingInteraction Fields item [SerializeField] private Scriptable_Item item Field Value Scriptable_Item manager [SerializeField] private ItemUseManager manager Field Value ItemUseManager Methods Start() private void Start() Update() private void Update()"
  },
  "api/Global.TestingInventory.html": {
    "href": "api/Global.TestingInventory.html",
    "title": "Class TestingInventory | Lofi City Documentation",
    "keywords": "Class TestingInventory Namespace Global Assembly Assembly-CSharp.dll public class TestingInventory : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingInventory Fields _items [SerializeField] private List<AssetReference> _items Field Value List<AssetReference> _limitless [SerializeField] private LimitlessInventory _limitless Field Value LimitlessInventory _slotID private int _slotID Field Value int Methods AddObject(AsyncOperationHandle<Scriptable_Item>) private void AddObject(AsyncOperationHandle<Scriptable_Item> item) Parameters item AsyncOperationHandle<Scriptable_Item> Start() private void Start()"
  },
  "api/Global.TestingPathfinding.html": {
    "href": "api/Global.TestingPathfinding.html",
    "title": "Class TestingPathfinding | Lofi City Documentation",
    "keywords": "Class TestingPathfinding Namespace Global Assembly Assembly-CSharp.dll public class TestingPathfinding : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingPathfinding Fields _movement [SerializeField] private PathBasedMovement _movement Field Value PathBasedMovement Methods OnMove(CallbackContext) public void OnMove(InputAction.CallbackContext context) Parameters context InputAction.CallbackContext"
  },
  "api/Global.TestingPlayerStatus.html": {
    "href": "api/Global.TestingPlayerStatus.html",
    "title": "Class TestingPlayerStatus | Lofi City Documentation",
    "keywords": "Class TestingPlayerStatus Namespace Global Assembly Assembly-CSharp.dll public class TestingPlayerStatus : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingPlayerStatus Fields item public Scriptable_Item item Field Value Scriptable_Item status public PlayerStatus status Field Value PlayerStatus Methods Start() private void Start() Update() private void Update()"
  },
  "api/Global.TestingTask.html": {
    "href": "api/Global.TestingTask.html",
    "title": "Class TestingTask | Lofi City Documentation",
    "keywords": "Class TestingTask Namespace Global Assembly Assembly-CSharp.dll public class TestingTask : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TestingTask Fields _item [SerializeField] private List<ItemWithQuantity> _item Field Value List<ItemWithQuantity> _list [SerializeField] private TaskList _list Field Value TaskList Methods Start() private void Start()"
  },
  "api/Global.TilemapToObjectLayer.html": {
    "href": "api/Global.TilemapToObjectLayer.html",
    "title": "Class TilemapToObjectLayer | Lofi City Documentation",
    "keywords": "Class TilemapToObjectLayer Namespace Global Assembly Assembly-CSharp.dll Populates a Grid Based Object Layer with Scriptable_Tiles based on a given TileMap. public class TilemapToObjectLayer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TilemapToObjectLayer Fields _objectLayer [SerializeField] private ObjectLayerBase _objectLayer Field Value ObjectLayerBase _originalTilemap [SerializeField] private Tilemap _originalTilemap Field Value Tilemap _possibleTiles [SerializeField] private Scriptable_TileGroup _possibleTiles Field Value Scriptable_TileGroup _tileReference private Dictionary<TileBase, Scriptable_Tile> _tileReference Field Value Dictionary<TileBase, Scriptable_Tile> Methods Awake() private void Awake() SetGridObjects() public void SetGridObjects()"
  },
  "api/Global.TimeSlot.html": {
    "href": "api/Global.TimeSlot.html",
    "title": "Class TimeSlot | Lofi City Documentation",
    "keywords": "Class TimeSlot Namespace Global Assembly Assembly-CSharp.dll Stores a specific time and allows for easy comparison. [Serializable] public class TimeSlot Inheritance object TimeSlot Constructors TimeSlot(int, int) public TimeSlot(int hour, int minute) Parameters hour int minute int Fields _hour [SerializeField] private int _hour Field Value int _minute [SerializeField] private int _minute Field Value int Properties Hour public int Hour { get; } Property Value int Minute public int Minute { get; } Property Value int Methods CompareTo(TimeSlot) public int CompareTo(TimeSlot other) Parameters other TimeSlot Returns int Equals(object) public override bool Equals(object obj) Parameters obj object Returns bool Equals(TimeSlot) public bool Equals(TimeSlot other) Parameters other TimeSlot Returns bool GetHashCode() public override int GetHashCode() Returns int ToString() public override string ToString() Returns string"
  },
  "api/Global.ToggleObjectAtTime.html": {
    "href": "api/Global.ToggleObjectAtTime.html",
    "title": "Class ToggleObjectAtTime | Lofi City Documentation",
    "keywords": "Class ToggleObjectAtTime Namespace Global Assembly Assembly-CSharp.dll public class ToggleObjectAtTime : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour ToggleObjectAtTime Fields _object [SerializeField] private GameObject _object Field Value GameObject _time [SerializeField] private TimeSlot _time Field Value TimeSlot _timeManager private DateTimeManager _timeManager Field Value DateTimeManager Methods Start() private void Start() ToggleObjects(bool) private void ToggleObjects(bool status) Parameters status bool"
  },
  "api/Global.TreeVisuals.html": {
    "href": "api/Global.TreeVisuals.html",
    "title": "Class TreeVisuals | Lofi City Documentation",
    "keywords": "Class TreeVisuals Namespace Global Assembly Assembly-CSharp.dll public class TreeVisuals : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour TreeVisuals Fields _cleanPlant [SerializeField] private Sprite _cleanPlant Field Value Sprite _corruptPlant [SerializeField] private Sprite _corruptPlant Field Value Sprite _corrupted [SerializeField] private CorruptedPlant _corrupted Field Value CorruptedPlant _fruitTree [SerializeField] private FruitTree _fruitTree Field Value FruitTree _plantWithFruit [SerializeField] private Sprite _plantWithFruit Field Value Sprite _renderer [SerializeField] private SpriteRenderer _renderer Field Value SpriteRenderer Methods OnDayChange(int) private void OnDayChange(int day) Parameters day int SetSprite() private void SetSprite() Start() private void Start()"
  },
  "api/Global.UI_ButtonWithText.html": {
    "href": "api/Global.UI_ButtonWithText.html",
    "title": "Class UI_ButtonWithText | Lofi City Documentation",
    "keywords": "Class UI_ButtonWithText Namespace Global Assembly Assembly-CSharp.dll Generic component for setting the text of a button. public class UI_ButtonWithText : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_ButtonWithText Fields _button [SerializeField] private Button _button Field Value Button _text [SerializeField] private TextMeshProUGUI _text Field Value TextMeshProUGUI Methods GetButtonOnClickEvent() public Button.ButtonClickedEvent GetButtonOnClickEvent() Returns Button.ButtonClickedEvent SetText(string) public void SetText(string newText) Parameters newText string"
  },
  "api/Global.UI_CartSlots.html": {
    "href": "api/Global.UI_CartSlots.html",
    "title": "Class UI_CartSlots | Lofi City Documentation",
    "keywords": "Class UI_CartSlots Namespace Global Assembly Assembly-CSharp.dll Connects to all the item display slots in the cart. public class UI_CartSlots : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_CartSlots Fields _cartInventory private CartInventory _cartInventory Field Value CartInventory _playerInventory private IInventory _playerInventory Field Value IInventory _slots [SerializeField] private List<UI_ItemDisplaySlot> _slots Field Value List<UI_ItemDisplaySlot> Properties Slots public List<UI_ItemDisplaySlot> Slots { get; } Property Value List<UI_ItemDisplaySlot> Methods ChangeInInventory(int, ItemWithQuantity) public void ChangeInInventory(int slot, ItemWithQuantity data) Parameters slot int data ItemWithQuantity GetTables() public List<ItemDisplayTable> GetTables() Returns List<ItemDisplayTable> SetItem(Scriptable_SellableItem, int) public void SetItem(Scriptable_SellableItem item, int slot) Parameters item Scriptable_SellableItem slot int Setup(CartInventory) public void Setup(CartInventory inventory) Parameters inventory CartInventory"
  },
  "api/Global.UI_ChangeTabColour.html": {
    "href": "api/Global.UI_ChangeTabColour.html",
    "title": "Class UI_ChangeTabColour | Lofi City Documentation",
    "keywords": "Class UI_ChangeTabColour Namespace Global Assembly Assembly-CSharp.dll public class UI_ChangeTabColour : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_ChangeTabColour Fields _default [SerializeField] private Sprite _default Field Value Sprite _highlighted [SerializeField] private Sprite _highlighted Field Value Sprite _objectsWithImages [SerializeField] private List<GameObject> _objectsWithImages Field Value List<GameObject> Methods SetTab(int) public void SetTab(int index) Parameters index int"
  },
  "api/Global.UI_CraftSpecificItem.html": {
    "href": "api/Global.UI_CraftSpecificItem.html",
    "title": "Class UI_CraftSpecificItem | Lofi City Documentation",
    "keywords": "Class UI_CraftSpecificItem Namespace Global Assembly Assembly-CSharp.dll The User interface to send a crafting request to the Machine Network public class UI_CraftSpecificItem : UI_DisplayList<ItemWithQuantity> Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayList<ItemWithQuantity> UI_CraftSpecificItem Inherited Members UI_DisplayList<ItemWithQuantity>._prefabSlot UI_DisplayList<ItemWithQuantity>._slotParent UI_DisplayList<ItemWithQuantity>._existingObjects UI_DisplayList<ItemWithQuantity>.Setup(ICollection<ItemWithQuantity>) UI_DisplayList<ItemWithQuantity>.AddItem(ItemWithQuantity) UI_DisplayList<ItemWithQuantity>.RemoveItem(ItemWithQuantity) Fields _currentItem private Scriptable_Item _currentItem Field Value Scriptable_Item _currentRecipe private Scriptable_CraftingRecipe _currentRecipe Field Value Scriptable_CraftingRecipe _currentRequests [SerializeField] private TextMeshProUGUI _currentRequests Field Value TextMeshProUGUI _currentStock [SerializeField] private TextMeshProUGUI _currentStock Field Value TextMeshProUGUI _hubInventory [SerializeField] private SerializableInterface<IInventory> _hubInventory Field Value SerializableInterface<IInventory> _icon [SerializeField] private Image _icon Field Value Image _machine private Scriptable_CraftingMachine _machine Field Value Scriptable_CraftingMachine _name [SerializeField] private TextMeshProUGUI _name Field Value TextMeshProUGUI _requestManager [SerializeField] private CraftingRequestController _requestManager Field Value CraftingRequestController _requests private int _requests Field Value int Methods SetCraftingRequest() public void SetCraftingRequest() SetItem(Scriptable_CraftingRecipe, Scriptable_CraftingMachine) public void SetItem(Scriptable_CraftingRecipe recipe, Scriptable_CraftingMachine machine) Parameters recipe Scriptable_CraftingRecipe machine Scriptable_CraftingMachine"
  },
  "api/Global.UI_CraftingRequestMonitor.html": {
    "href": "api/Global.UI_CraftingRequestMonitor.html",
    "title": "Class UI_CraftingRequestMonitor | Lofi City Documentation",
    "keywords": "Class UI_CraftingRequestMonitor Namespace Global Assembly Assembly-CSharp.dll Display the current active and pending requests for a CraftingRequestController public class UI_CraftingRequestMonitor : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_CraftingRequestMonitor Fields _prefabSlot [SerializeField] private GameObject _prefabSlot Field Value GameObject _requestController [SerializeField] private CraftingRequestController _requestController Field Value CraftingRequestController _requests private Dictionary<Scriptable_CraftingRecipe, UI_CraftingRequestSlot> _requests Field Value Dictionary<Scriptable_CraftingRecipe, UI_CraftingRequestSlot> _slotParent [SerializeField] private Transform _slotParent Field Value Transform Methods ActiveRequestFinished(ActiveCraftingRequest) private void ActiveRequestFinished(ActiveCraftingRequest request) Parameters request ActiveCraftingRequest ActiveRequestSet(PendingCraftingRequest, ActiveCraftingRequest) private void ActiveRequestSet(PendingCraftingRequest pendingRequest, ActiveCraftingRequest activeRequest) Parameters pendingRequest PendingCraftingRequest activeRequest ActiveCraftingRequest AddRequest(Scriptable_CraftingRecipe, bool) private void AddRequest(Scriptable_CraftingRecipe recipe, bool isActive) Parameters recipe Scriptable_CraftingRecipe isActive bool PendingRequestAdded(PendingCraftingRequest) private void PendingRequestAdded(PendingCraftingRequest request) Parameters request PendingCraftingRequest Start() private void Start()"
  },
  "api/Global.UI_CraftingRequestSlot.html": {
    "href": "api/Global.UI_CraftingRequestSlot.html",
    "title": "Class UI_CraftingRequestSlot | Lofi City Documentation",
    "keywords": "Class UI_CraftingRequestSlot Namespace Global Assembly Assembly-CSharp.dll Show the status of a single crafting request public class UI_CraftingRequestSlot : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_CraftingRequestSlot Fields _active private int _active Field Value int _activeDisplay [SerializeField] private TextMeshProUGUI _activeDisplay Field Value TextMeshProUGUI _craftingImage [SerializeField] private Image _craftingImage Field Value Image _pending private int _pending Field Value int _pendingDisplay [SerializeField] private TextMeshProUGUI _pendingDisplay Field Value TextMeshProUGUI _recipe private Scriptable_CraftingRecipe _recipe Field Value Scriptable_CraftingRecipe _recipeName [SerializeField] private TextMeshProUGUI _recipeName Field Value TextMeshProUGUI Methods AddRequest(bool) public void AddRequest(bool isActive) Parameters isActive bool IsEmpty() public bool IsEmpty() Returns bool PendingToActive() public void PendingToActive() RemoveRequest(bool) public void RemoveRequest(bool isActive) Parameters isActive bool SetValues(int, int) private void SetValues(int active, int pending) Parameters active int pending int Setup(Scriptable_CraftingRecipe, int, int) public void Setup(Scriptable_CraftingRecipe recipe, int active, int pending) Parameters recipe Scriptable_CraftingRecipe active int pending int"
  },
  "api/Global.UI_CreateNewSaveFile.html": {
    "href": "api/Global.UI_CreateNewSaveFile.html",
    "title": "Class UI_CreateNewSaveFile | Lofi City Documentation",
    "keywords": "Class UI_CreateNewSaveFile Namespace Global Assembly Assembly-CSharp.dll UI to create a new save slot. public class UI_CreateNewSaveFile : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_CreateNewSaveFile Fields _slotManager [SerializeField] private SaveSlotManager _slotManager Field Value SaveSlotManager _slotName [SerializeField] private TMP_InputField _slotName Field Value TMP_InputField _startGame [SerializeField] private StartGame _startGame Field Value StartGame Methods Create() public void Create()"
  },
  "api/Global.UI_Customer.html": {
    "href": "api/Global.UI_Customer.html",
    "title": "Class UI_Customer | Lofi City Documentation",
    "keywords": "Class UI_Customer Namespace Global Assembly Assembly-CSharp.dll public class UI_Customer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_Customer Fields _interestIcon [SerializeField] private Image _interestIcon Field Value Image _nextButton [SerializeField] private GameObject _nextButton Field Value GameObject _personalityIcon [SerializeField] private Image _personalityIcon Field Value Image _sellingSystem private ItemSellingSystem _sellingSystem Field Value ItemSellingSystem _vendorSystem [SerializeField] private UI_VendorSystem _vendorSystem Field Value UI_VendorSystem Methods Awake() private void Awake() SaleEnded() public void SaleEnded() SaleStarted(Customer) public void SaleStarted(Customer customer) Parameters customer Customer Setup(ItemSellingSystem) public void Setup(ItemSellingSystem sellingSystem) Parameters sellingSystem ItemSellingSystem"
  },
  "api/Global.UI_CustomerInQueue.html": {
    "href": "api/Global.UI_CustomerInQueue.html",
    "title": "Class UI_CustomerInQueue | Lofi City Documentation",
    "keywords": "Class UI_CustomerInQueue Namespace Global Assembly Assembly-CSharp.dll Shows a customer waiting in the queue and their remaining time. public class UI_CustomerInQueue : MonoBehaviour, IItemWithSetup<CustomerInQueue> Inheritance object Object Component Behaviour MonoBehaviour UI_CustomerInQueue Implements IItemWithSetup<CustomerInQueue> Fields _customer private CustomerInQueue _customer Field Value CustomerInQueue image [SerializeField] private Image image Field Value Image time [SerializeField] private TextMeshProUGUI time Field Value TextMeshProUGUI Methods Setup(CustomerInQueue) public void Setup(CustomerInQueue customer) Parameters customer CustomerInQueue WaitInQueue() public IEnumerator WaitInQueue() Returns IEnumerator"
  },
  "api/Global.UI_DayTransition.html": {
    "href": "api/Global.UI_DayTransition.html",
    "title": "Class UI_DayTransition | Lofi City Documentation",
    "keywords": "Class UI_DayTransition Namespace Global Assembly Assembly-CSharp.dll public class UI_DayTransition : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_DayTransition Fields _date [SerializeField] private TextMeshProUGUI _date Field Value TextMeshProUGUI _dayManager private DateTimeManager _dayManager Field Value DateTimeManager _dayMessage [SerializeField] private TextMeshProUGUI _dayMessage Field Value TextMeshProUGUI _dayMessages [SerializeField] private InspectableDictionary<int, string> _dayMessages Field Value InspectableDictionary<int, string> _dayUI [SerializeField] private GameObject _dayUI Field Value GameObject _finished private bool _finished Field Value bool _transition [SerializeField] private UI_ScreenTransition _transition Field Value UI_ScreenTransition Methods Awake() private void Awake() OnContinue() public void OnContinue() OnDayChange(int) public void OnDayChange(int day) Parameters day int"
  },
  "api/Global.UI_DisplayLimitlessInventory.html": {
    "href": "api/Global.UI_DisplayLimitlessInventory.html",
    "title": "Class UI_DisplayLimitlessInventory | Lofi City Documentation",
    "keywords": "Class UI_DisplayLimitlessInventory Namespace Global Assembly Assembly-CSharp.dll Displays the contents of an inventory, showing the numer of each item. public class UI_DisplayLimitlessInventory : UI_ItemDisplay Inheritance object Object Component Behaviour MonoBehaviour UI_ItemDisplay UI_DisplayLimitlessInventory Inherited Members UI_ItemDisplay._itemDisplaySlotPrefab UI_ItemDisplay._categoryTogglePrefab UI_ItemDisplay._categoryButtonParent UI_ItemDisplay._categoryPageParent UI_ItemDisplay._currentSlots UI_ItemDisplay._currentCategory UI_ItemDisplay.CreateCategoryTab(Enum_ItemCategory) UI_ItemDisplay.SetCategoryTab(Enum_ItemCategory) Fields _inventory [SerializeField] private LimitlessInventory _inventory Field Value LimitlessInventory _onItemChanged protected Action<Scriptable_Item, int> _onItemChanged Field Value Action<Scriptable_Item, int> Methods Awake() private void Awake() CreateItemDisplaySlot(Scriptable_Item) protected override UI_ItemSlotData CreateItemDisplaySlot(Scriptable_Item item) Parameters item Scriptable_Item Returns UI_ItemSlotData OnItemUpdated(Scriptable_Item, int) private void OnItemUpdated(Scriptable_Item item, int currentQuantity) Parameters item Scriptable_Item currentQuantity int PopulateCategoryTab(Enum_ItemCategory) protected override void PopulateCategoryTab(Enum_ItemCategory category) Parameters category Enum_ItemCategory"
  },
  "api/Global.UI_DisplayList-1.html": {
    "href": "api/Global.UI_DisplayList-1.html",
    "title": "Class UI_DisplayList<T> | Lofi City Documentation",
    "keywords": "Class UI_DisplayList<T> Namespace Global Assembly Assembly-CSharp.dll public abstract class UI_DisplayList<T> : MonoBehaviour Type Parameters T Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayList<T> Derived PriceListUI UI_CraftSpecificItem UI_InWorldShop UI_ShoppingList UI_TaskList Fields _existingObjects protected Dictionary<T, GameObject> _existingObjects Field Value Dictionary<T, GameObject> _prefabSlot [SerializeField] private GameObject _prefabSlot Field Value GameObject _slotParent [SerializeField] protected Transform _slotParent Field Value Transform Methods AddItem(T) public void AddItem(T item) Parameters item T RemoveItem(T) public void RemoveItem(T item) Parameters item T Setup(ICollection<T>) public void Setup(ICollection<T> list) Parameters list ICollection<T>"
  },
  "api/Global.UI_DisplayListItem.html": {
    "href": "api/Global.UI_DisplayListItem.html",
    "title": "Class UI_DisplayListItem | Lofi City Documentation",
    "keywords": "Class UI_DisplayListItem Namespace Global Assembly Assembly-CSharp.dll public class UI_DisplayListItem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayListItem Methods Start() private void Start() Update() private void Update()"
  },
  "api/Global.UI_DisplayMoney.html": {
    "href": "api/Global.UI_DisplayMoney.html",
    "title": "Class UI_DisplayMoney | Lofi City Documentation",
    "keywords": "Class UI_DisplayMoney Namespace Global Assembly Assembly-CSharp.dll public class UI_DisplayMoney : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayMoney Fields _moneyText [SerializeField] private TextMeshProUGUI _moneyText Field Value TextMeshProUGUI _playerMoney [SerializeField] private PlayerMoney _playerMoney Field Value PlayerMoney Methods SetText(int) private void SetText(int value) Parameters value int Start() private void Start()"
  },
  "api/Global.UI_DisplayTime.html": {
    "href": "api/Global.UI_DisplayTime.html",
    "title": "Class UI_DisplayTime | Lofi City Documentation",
    "keywords": "Class UI_DisplayTime Namespace Global Assembly Assembly-CSharp.dll HUD element that displays the current date and time. public class UI_DisplayTime : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayTime Fields _dateText [SerializeField] private TextMeshProUGUI _dateText Field Value TextMeshProUGUI _timeManager [SerializeField] private DateTimeManager _timeManager Field Value DateTimeManager _timeText [SerializeField] private TextMeshProUGUI _timeText Field Value TextMeshProUGUI Methods OnDateUpdated(int) public void OnDateUpdated(int date) Parameters date int OnTimeUpdated(int, int) public void OnTimeUpdated(int hours, int minutes) Parameters hours int minutes int Start() private void Start()"
  },
  "api/Global.UI_Dragable.html": {
    "href": "api/Global.UI_Dragable.html",
    "title": "Class UI_Dragable | Lofi City Documentation",
    "keywords": "Class UI_Dragable Namespace Global Assembly Assembly-CSharp.dll Reusable system for dragable UI elements. public class UI_Dragable : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_Dragable Fields _UICanvas private Transform _UICanvas Field Value Transform _interationAction private InputActions _interationAction Field Value InputActions _movingCopy private GameObject _movingCopy Field Value GameObject _transform private RectTransform _transform Field Value RectTransform Methods Awake() private void Awake() OnBeginDrag(PointerEventData) public void OnBeginDrag(PointerEventData eventData) Parameters eventData PointerEventData OnDestroy() private void OnDestroy() OnDrag(PointerEventData) public void OnDrag(PointerEventData eventData) Parameters eventData PointerEventData OnEndDrag(PointerEventData) public void OnEndDrag(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.UI_GridPointer.html": {
    "href": "api/Global.UI_GridPointer.html",
    "title": "Class UI_GridPointer | Lofi City Documentation",
    "keywords": "Class UI_GridPointer Namespace Global Assembly Assembly-CSharp.dll public class UI_GridPointer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_GridPointer Fields _gridPointer [SerializeField] private SerializableInterface<IGridPointer> _gridPointer Field Value SerializableInterface<IGridPointer> _renderer [SerializeField] private SpriteRenderer _renderer Field Value SpriteRenderer Methods Update() private void Update()"
  },
  "api/Global.UI_Haggle.html": {
    "href": "api/Global.UI_Haggle.html",
    "title": "Class UI_Haggle | Lofi City Documentation",
    "keywords": "Class UI_Haggle Namespace Global Assembly Assembly-CSharp.dll A popup UI that allows the player to input a price during haggling. public class UI_Haggle : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_Haggle Fields _data [SerializeField] private UI_VendorSystem _data Field Value UI_VendorSystem _guesses [SerializeField] private List<TextMeshProUGUI> _guesses Field Value List<TextMeshProUGUI> _haggle private HagglingSystem _haggle Field Value HagglingSystem _haggleUI [SerializeField] private GameObject _haggleUI Field Value GameObject _itemName [SerializeField] private TextMeshProUGUI _itemName Field Value TextMeshProUGUI _price [SerializeField] private TMP_InputField _price Field Value TMP_InputField guessesTaken private int guessesTaken Field Value int Methods AddGuess(int, int) public void AddGuess(int price, int quantity) Parameters price int quantity int EndHaggle() public void EndHaggle() SetItem(Scriptable_Item) public void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SetPrice() public void SetPrice() Start() private void Start()"
  },
  "api/Global.UI_HelpMenu.html": {
    "href": "api/Global.UI_HelpMenu.html",
    "title": "Class UI_HelpMenu | Lofi City Documentation",
    "keywords": "Class UI_HelpMenu Namespace Global Assembly Assembly-CSharp.dll public class UI_HelpMenu : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_HelpMenu Fields _dialogue private DialogueRunner _dialogue Field Value DialogueRunner _dialogueName [SerializeField] private string _dialogueName Field Value string Methods Start() private void Start()"
  },
  "api/Global.UI_Hotbar.html": {
    "href": "api/Global.UI_Hotbar.html",
    "title": "Class UI_Hotbar | Lofi City Documentation",
    "keywords": "Class UI_Hotbar Namespace Global Assembly Assembly-CSharp.dll Allows for easy access to items stored in the player inventory to set the active item. public class UI_Hotbar : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_Hotbar Fields _colourChange [SerializeField] private UI_ChangeTabColour _colourChange Field Value UI_ChangeTabColour _currentSlot private int _currentSlot Field Value int _playerStatus [SerializeField] private PlayerStatus _playerStatus Field Value PlayerStatus _slots private Scriptable_Item[] _slots Field Value Scriptable_Item[] _visualSlots [SerializeField] private UI_ItemSlotData[] _visualSlots Field Value UI_ItemSlotData[] Methods Awake() private void Awake() ClearSlot(int) public void ClearSlot(int slot) Parameters slot int OnInventoryChange(Scriptable_Item, int) public void OnInventoryChange(Scriptable_Item item, int currentQuantity) Parameters item Scriptable_Item currentQuantity int SetActiveSlot(Scriptable_Item) public void SetActiveSlot(Scriptable_Item item) Parameters item Scriptable_Item SetActiveSlot(int) public void SetActiveSlot(int slot) Parameters slot int SetSlot(int, Scriptable_Item) public void SetSlot(int slot, Scriptable_Item item) Parameters slot int item Scriptable_Item"
  },
  "api/Global.UI_HotbarSlot.html": {
    "href": "api/Global.UI_HotbarSlot.html",
    "title": "Class UI_HotbarSlot | Lofi City Documentation",
    "keywords": "Class UI_HotbarSlot Namespace Global Assembly Assembly-CSharp.dll Slots that allow for dropping items into the hotbar. public class UI_HotbarSlot : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_HotbarSlot Fields _hotbar [SerializeField] private UI_Hotbar _hotbar Field Value UI_Hotbar slot [SerializeField] private int slot Field Value int Methods OnDrop(PointerEventData) public void OnDrop(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.UI_HubItemCrafting.html": {
    "href": "api/Global.UI_HubItemCrafting.html",
    "title": "Class UI_HubItemCrafting | Lofi City Documentation",
    "keywords": "Class UI_HubItemCrafting Namespace Global Assembly Assembly-CSharp.dll Shows the items that can be crafted given the connected machines. public class UI_HubItemCrafting : UI_ItemDisplay Inheritance object Object Component Behaviour MonoBehaviour UI_ItemDisplay UI_HubItemCrafting Inherited Members UI_ItemDisplay._itemDisplaySlotPrefab UI_ItemDisplay._categoryTogglePrefab UI_ItemDisplay._categoryButtonParent UI_ItemDisplay._categoryPageParent UI_ItemDisplay._currentSlots UI_ItemDisplay._currentCategory UI_ItemDisplay.CreateCategoryTab(Enum_ItemCategory) UI_ItemDisplay.SetCategoryTab(Enum_ItemCategory) UI_ItemDisplay.CreateItemDisplaySlot(Scriptable_Item) Fields _addCraftableItem private Action<Scriptable_Item> _addCraftableItem Field Value Action<Scriptable_Item> _convert [SerializeField] private MachineNetwork_Craft _convert Field Value MachineNetwork_Craft _craftMenu [SerializeField] private UI_CraftSpecificItem _craftMenu Field Value UI_CraftSpecificItem _setCraftingMenu private Action<Scriptable_Item> _setCraftingMenu Field Value Action<Scriptable_Item> Methods AddCraftableItem(Scriptable_Item) private void AddCraftableItem(Scriptable_Item item) Parameters item Scriptable_Item Awake() private void Awake() PopulateCategoryTab(Enum_ItemCategory) protected override void PopulateCategoryTab(Enum_ItemCategory category) Parameters category Enum_ItemCategory SetCraftMenuItem(Scriptable_Item) private void SetCraftMenuItem(Scriptable_Item item) Parameters item Scriptable_Item"
  },
  "api/Global.UI_InWorldShop.html": {
    "href": "api/Global.UI_InWorldShop.html",
    "title": "Class UI_InWorldShop | Lofi City Documentation",
    "keywords": "Class UI_InWorldShop Namespace Global Assembly Assembly-CSharp.dll public class UI_InWorldShop : UI_DisplayList<(Scriptable_Item, int, InWorldShop)> Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayList<(Scriptable_Item, int, InWorldShop)> UI_InWorldShop Inherited Members UI_DisplayList<(Scriptable_Item, int, InWorldShop)>._prefabSlot UI_DisplayList<(Scriptable_Item, int, InWorldShop)>._slotParent UI_DisplayList<(Scriptable_Item, int, InWorldShop)>._existingObjects UI_DisplayList<(Scriptable_Item, int, InWorldShop)>.Setup(ICollection<(Scriptable_Item, int, InWorldShop)>) UI_DisplayList<(Scriptable_Item, int, InWorldShop)>.AddItem((Scriptable_Item, int, InWorldShop)) UI_DisplayList<(Scriptable_Item, int, InWorldShop)>.RemoveItem((Scriptable_Item, int, InWorldShop)) Fields _closedSign [SerializeField] private GameObject _closedSign Field Value GameObject _closedText [SerializeField] private TextMeshProUGUI _closedText Field Value TextMeshProUGUI Methods Setup(InWorldShop) public void Setup(InWorldShop shop) Parameters shop InWorldShop"
  },
  "api/Global.UI_InWorldShopItem.html": {
    "href": "api/Global.UI_InWorldShopItem.html",
    "title": "Class UI_InWorldShopItem | Lofi City Documentation",
    "keywords": "Class UI_InWorldShopItem Namespace Global Assembly Assembly-CSharp.dll public class UI_InWorldShopItem : MonoBehaviour, IItemWithSetup<(Scriptable_Item, int, InWorldShop)> Inheritance object Object Component Behaviour MonoBehaviour UI_InWorldShopItem Implements IItemWithSetup<(Scriptable_Item, int, InWorldShop)> Fields _icon [SerializeField] private Image _icon Field Value Image _item private Scriptable_Item _item Field Value Scriptable_Item _shop private InWorldShop _shop Field Value InWorldShop _text [SerializeField] private TextMeshProUGUI _text Field Value TextMeshProUGUI Methods BuyItem() public void BuyItem() Setup((Scriptable_Item, int, InWorldShop)) public void Setup((Scriptable_Item, int, InWorldShop) data) Parameters data (Scriptable_Item, int, InWorldShop)"
  },
  "api/Global.UI_InventoryDropTransfer.html": {
    "href": "api/Global.UI_InventoryDropTransfer.html",
    "title": "Class UI_InventoryDropTransfer | Lofi City Documentation",
    "keywords": "Class UI_InventoryDropTransfer Namespace Global Assembly Assembly-CSharp.dll public class UI_InventoryDropTransfer : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_InventoryDropTransfer Fields _toInventory [SerializeField] private SerializableInterface<IInventory> _toInventory Field Value SerializableInterface<IInventory> Methods OnDrop(PointerEventData) public void OnDrop(PointerEventData eventData) Parameters eventData PointerEventData"
  },
  "api/Global.UI_ItemDisplay.html": {
    "href": "api/Global.UI_ItemDisplay.html",
    "title": "Class UI_ItemDisplay | Lofi City Documentation",
    "keywords": "Class UI_ItemDisplay Namespace Global Assembly Assembly-CSharp.dll Display any number of Scriptable Items grouped into categories. A seperate item slot is created for each new item. public abstract class UI_ItemDisplay : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_ItemDisplay Derived UI_DisplayLimitlessInventory UI_HubItemCrafting Fields _categoryButtonParent [SerializeField] protected RectTransform _categoryButtonParent Field Value RectTransform _categoryPageParent [SerializeField] protected RectTransform _categoryPageParent Field Value RectTransform _categoryTogglePrefab [SerializeField] protected GameObject _categoryTogglePrefab Field Value GameObject _currentCategory protected Enum_ItemCategory _currentCategory Field Value Enum_ItemCategory _currentSlots protected Dictionary<Scriptable_Item, UI_ItemSlotData> _currentSlots Field Value Dictionary<Scriptable_Item, UI_ItemSlotData> _itemDisplaySlotPrefab [SerializeField] protected GameObject _itemDisplaySlotPrefab Field Value GameObject Methods Awake() protected void Awake() CreateCategoryTab(Enum_ItemCategory) protected void CreateCategoryTab(Enum_ItemCategory category) Parameters category Enum_ItemCategory CreateItemDisplaySlot(Scriptable_Item) protected virtual UI_ItemSlotData CreateItemDisplaySlot(Scriptable_Item item) Parameters item Scriptable_Item Returns UI_ItemSlotData PopulateCategoryTab(Enum_ItemCategory) protected abstract void PopulateCategoryTab(Enum_ItemCategory category) Parameters category Enum_ItemCategory SetCategoryTab(Enum_ItemCategory) protected void SetCategoryTab(Enum_ItemCategory category) Parameters category Enum_ItemCategory"
  },
  "api/Global.UI_ItemDisplaySlot.html": {
    "href": "api/Global.UI_ItemDisplaySlot.html",
    "title": "Class UI_ItemDisplaySlot | Lofi City Documentation",
    "keywords": "Class UI_ItemDisplaySlot Namespace Global Assembly Assembly-CSharp.dll Lets the player set the items being sold in a particular slot. public class UI_ItemDisplaySlot : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_ItemDisplaySlot Fields _allSlots private UI_CartSlots _allSlots Field Value UI_CartSlots _displayTable [SerializeField] private ItemDisplayTable _displayTable Field Value ItemDisplayTable _itemSlot [SerializeField] private UI_ItemSlotData _itemSlot Field Value UI_ItemSlotData _slotID private int _slotID Field Value int Properties DisplayTable public ItemDisplayTable DisplayTable { get; } Property Value ItemDisplayTable Methods OnDrop(PointerEventData) public void OnDrop(PointerEventData eventData) Parameters eventData PointerEventData SetItem(Scriptable_SellableItem, int) public void SetItem(Scriptable_SellableItem item, int quantity) Parameters item Scriptable_SellableItem quantity int Setup(CartInventory, UI_CartSlots, int) public void Setup(CartInventory cart, UI_CartSlots allSlots, int slotID) Parameters cart CartInventory allSlots UI_CartSlots slotID int UpdateQuantity(ItemWithQuantity) public void UpdateQuantity(ItemWithQuantity data) Parameters data ItemWithQuantity"
  },
  "api/Global.UI_ItemSlotData.html": {
    "href": "api/Global.UI_ItemSlotData.html",
    "title": "Class UI_ItemSlotData | Lofi City Documentation",
    "keywords": "Class UI_ItemSlotData Namespace Global Assembly Assembly-CSharp.dll Visualy show an item in the UI. Allow for selecting items. public class UI_ItemSlotData : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_ItemSlotData Fields _data private Scriptable_Item _data Field Value Scriptable_Item _fromInventory private IInventory _fromInventory Field Value IInventory _iconImage [SerializeField] private Image _iconImage Field Value Image _onClickEvent private Action<Scriptable_Item> _onClickEvent Field Value Action<Scriptable_Item> _quantityText [SerializeField] private TextMeshProUGUI _quantityText Field Value TextMeshProUGUI Properties Data public Scriptable_Item Data { get; } Property Value Scriptable_Item FromInventory public IInventory FromInventory { get; set; } Property Value IInventory Methods Clear() public void Clear() OnPointerClick(PointerEventData) public void OnPointerClick(PointerEventData eventData) Parameters eventData PointerEventData SetItem(Scriptable_Item) public void SetItem(Scriptable_Item item) Parameters item Scriptable_Item SetQuantity(int) public void SetQuantity(int quantity) Parameters quantity int SubscribeToOnClickEvent(Action<Scriptable_Item>) public void SubscribeToOnClickEvent(Action<Scriptable_Item> action) Parameters action Action<Scriptable_Item>"
  },
  "api/Global.UI_LoadPreviousSave.html": {
    "href": "api/Global.UI_LoadPreviousSave.html",
    "title": "Class UI_LoadPreviousSave | Lofi City Documentation",
    "keywords": "Class UI_LoadPreviousSave Namespace Global Assembly Assembly-CSharp.dll Show all previously created save slots. public class UI_LoadPreviousSave : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_LoadPreviousSave Fields _slotManager [SerializeField] private SaveSlotManager _slotManager Field Value SaveSlotManager _slotPrefab [SerializeField] private GameObject _slotPrefab Field Value GameObject _slotsParent [SerializeField] private Transform _slotsParent Field Value Transform _startGame [SerializeField] private StartGame _startGame Field Value StartGame Methods Start() private void Start()"
  },
  "api/Global.UI_PriceListItem.html": {
    "href": "api/Global.UI_PriceListItem.html",
    "title": "Class UI_PriceListItem | Lofi City Documentation",
    "keywords": "Class UI_PriceListItem Namespace Global Assembly Assembly-CSharp.dll Shows the price of a particular item in the cart. The player can choose to haggle the price instead. public class UI_PriceListItem : MonoBehaviour, IItemWithSetup<KeyValuePair<Scriptable_SellableItem, (int, bool)>> Inheritance object Object Component Behaviour MonoBehaviour UI_PriceListItem Implements IItemWithSetup<KeyValuePair<Scriptable_SellableItem, (int, bool)>> Fields _cart private CartInventory _cart Field Value CartInventory _haggle [SerializeField] private Toggle _haggle Field Value Toggle _item private Scriptable_SellableItem _item Field Value Scriptable_SellableItem _itemName [SerializeField] private TextMeshProUGUI _itemName Field Value TextMeshProUGUI _price [SerializeField] private TMP_InputField _price Field Value TMP_InputField Properties Cart public CartInventory Cart { get; set; } Property Value CartInventory Methods SetHaggle(bool) public void SetHaggle(bool value) Parameters value bool SetPrice(string) public void SetPrice(string price) Parameters price string Setup(KeyValuePair<Scriptable_SellableItem, (int, bool)>) public void Setup(KeyValuePair<Scriptable_SellableItem, (int, bool)> itemPrice) Parameters itemPrice KeyValuePair<Scriptable_SellableItem, (int, bool)>"
  },
  "api/Global.UI_Queue.html": {
    "href": "api/Global.UI_Queue.html",
    "title": "Class UI_Queue | Lofi City Documentation",
    "keywords": "Class UI_Queue Namespace Global Assembly Assembly-CSharp.dll Shows all the customers in a queue. Allows the player to service the next customer. public class UI_Queue : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_Queue Fields _points [SerializeField] private List<PointOfInterest_CustomerQueue> _points Field Value List<PointOfInterest_CustomerQueue> _queue [SerializeField] private CustomerQueue _queue Field Value CustomerQueue _renderer [SerializeField] private SpriteRenderer _renderer Field Value SpriteRenderer _selling [SerializeField] private ItemSellingSystem _selling Field Value ItemSellingSystem Methods ClearSlot() private void ClearSlot() SetSlot(CustomerInQueue) private void SetSlot(CustomerInQueue customer) Parameters customer CustomerInQueue Start() private void Start()"
  },
  "api/Global.UI_RecipeItem.html": {
    "href": "api/Global.UI_RecipeItem.html",
    "title": "Class UI_RecipeItem | Lofi City Documentation",
    "keywords": "Class UI_RecipeItem Namespace Global Assembly Assembly-CSharp.dll public class UI_RecipeItem : MonoBehaviour, IItemWithSetup<ItemWithQuantity> Inheritance object Object Component Behaviour MonoBehaviour UI_RecipeItem Implements IItemWithSetup<ItemWithQuantity> Fields _icon [SerializeField] private Image _icon Field Value Image _quantity [SerializeField] private TextMeshProUGUI _quantity Field Value TextMeshProUGUI Methods Setup(ItemWithQuantity) public void Setup(ItemWithQuantity item) Parameters item ItemWithQuantity"
  },
  "api/Global.UI_SaveSlot.html": {
    "href": "api/Global.UI_SaveSlot.html",
    "title": "Class UI_SaveSlot | Lofi City Documentation",
    "keywords": "Class UI_SaveSlot Namespace Global Assembly Assembly-CSharp.dll Displays the information of a given save slot. public class UI_SaveSlot : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_SaveSlot Fields _loadButton [SerializeField] private Button _loadButton Field Value Button _slotName [SerializeField] private TextMeshProUGUI _slotName Field Value TextMeshProUGUI _slotPath private string _slotPath Field Value string _startGame private StartGame _startGame Field Value StartGame Methods SetPath(string, StartGame) public void SetPath(string slotPath, StartGame startGame) Parameters slotPath string startGame StartGame"
  },
  "api/Global.UI_ScreenTransition.html": {
    "href": "api/Global.UI_ScreenTransition.html",
    "title": "Class UI_ScreenTransition | Lofi City Documentation",
    "keywords": "Class UI_ScreenTransition Namespace Global Assembly Assembly-CSharp.dll public class UI_ScreenTransition : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_ScreenTransition Fields _currentRequests private List<string> _currentRequests Field Value List<string> _screen [SerializeField] private CanvasGroup _screen Field Value CanvasGroup _timeToFadeIn [SerializeField] private float _timeToFadeIn Field Value float _timeToFadeOut [SerializeField] private float _timeToFadeOut Field Value float Methods EndTransition(string) public void EndTransition(string key) Parameters key string FadeIn() private IEnumerator FadeIn() Returns IEnumerator FadeOut() private IEnumerator FadeOut() Returns IEnumerator StartTransition(string) public void StartTransition(string key) Parameters key string"
  },
  "api/Global.UI_ShoppingList.html": {
    "href": "api/Global.UI_ShoppingList.html",
    "title": "Class UI_ShoppingList | Lofi City Documentation",
    "keywords": "Class UI_ShoppingList Namespace Global Assembly Assembly-CSharp.dll Displays the list of items that a customer has purchased. public class UI_ShoppingList : UI_DisplayList<(Scriptable_Item, int, int)> Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayList<(Scriptable_Item, int, int)> UI_ShoppingList Inherited Members UI_DisplayList<(Scriptable_Item, int, int)>._prefabSlot UI_DisplayList<(Scriptable_Item, int, int)>._slotParent UI_DisplayList<(Scriptable_Item, int, int)>._existingObjects UI_DisplayList<(Scriptable_Item, int, int)>.Setup(ICollection<(Scriptable_Item, int, int)>) UI_DisplayList<(Scriptable_Item, int, int)>.AddItem((Scriptable_Item, int, int)) UI_DisplayList<(Scriptable_Item, int, int)>.RemoveItem((Scriptable_Item, int, int)) Fields _cartSetup [SerializeField] private GlobalCartSetup _cartSetup Field Value GlobalCartSetup _data [SerializeField] private UI_VendorSystem _data Field Value UI_VendorSystem _endOfSale [SerializeField] private GameObject _endOfSale Field Value GameObject _endOfSaleInstance private GameObject _endOfSaleInstance Field Value GameObject _sellingSystem private ItemSellingSystem _sellingSystem Field Value ItemSellingSystem Methods ClearList(Customer) private void ClearList(Customer customer) Parameters customer Customer OnEnable() private void OnEnable() Setup(CartData) private void Setup(CartData data) Parameters data CartData ShowEndOfSale() private void ShowEndOfSale() Start() private void Start()"
  },
  "api/Global.UI_ShoppingListItem.html": {
    "href": "api/Global.UI_ShoppingListItem.html",
    "title": "Class UI_ShoppingListItem | Lofi City Documentation",
    "keywords": "Class UI_ShoppingListItem Namespace Global Assembly Assembly-CSharp.dll Displays an item that the customer has purchased. public class UI_ShoppingListItem : MonoBehaviour, IItemWithSetup<(Scriptable_Item, int, int)> Inheritance object Object Component Behaviour MonoBehaviour UI_ShoppingListItem Implements IItemWithSetup<(Scriptable_Item, int, int)> Fields _icon [SerializeField] private Image _icon Field Value Image _price [SerializeField] private TextMeshProUGUI _price Field Value TextMeshProUGUI _quantity [SerializeField] private TextMeshProUGUI _quantity Field Value TextMeshProUGUI Methods Setup((Scriptable_Item, int, int)) public void Setup((Scriptable_Item, int, int) item) Parameters item (Scriptable_Item item, int price, int quantity)"
  },
  "api/Global.UI_TabController.html": {
    "href": "api/Global.UI_TabController.html",
    "title": "Class UI_TabController | Lofi City Documentation",
    "keywords": "Class UI_TabController Namespace Global Assembly Assembly-CSharp.dll Display and switch between different UI tabs. public class UI_TabController : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_TabController Fields _colourChange [SerializeField] private UI_ChangeTabColour _colourChange Field Value UI_ChangeTabColour _currentTab [SerializeField] private int _currentTab Field Value int _tabs [SerializeField] private List<GameObject> _tabs Field Value List<GameObject> Methods AddTab(GameObject) public int AddTab(GameObject tab) Parameters tab GameObject Returns int SetTab(int) public void SetTab(int index) Parameters index int Start() private void Start()"
  },
  "api/Global.UI_TaskList.html": {
    "href": "api/Global.UI_TaskList.html",
    "title": "Class UI_TaskList | Lofi City Documentation",
    "keywords": "Class UI_TaskList Namespace Global Assembly Assembly-CSharp.dll public class UI_TaskList : UI_DisplayList<PlayerTask> Inheritance object Object Component Behaviour MonoBehaviour UI_DisplayList<PlayerTask> UI_TaskList Inherited Members UI_DisplayList<PlayerTask>._prefabSlot UI_DisplayList<PlayerTask>._slotParent UI_DisplayList<PlayerTask>._existingObjects UI_DisplayList<PlayerTask>.Setup(ICollection<PlayerTask>) UI_DisplayList<PlayerTask>.AddItem(PlayerTask) UI_DisplayList<PlayerTask>.RemoveItem(PlayerTask) Fields _taskList [SerializeField] private TaskList _taskList Field Value TaskList Methods OnEnable() private void OnEnable()"
  },
  "api/Global.UI_TaskListItem.html": {
    "href": "api/Global.UI_TaskListItem.html",
    "title": "Class UI_TaskListItem | Lofi City Documentation",
    "keywords": "Class UI_TaskListItem Namespace Global Assembly Assembly-CSharp.dll public class UI_TaskListItem : MonoBehaviour, IItemWithSetup<PlayerTask> Inheritance object Object Component Behaviour MonoBehaviour UI_TaskListItem Implements IItemWithSetup<PlayerTask> Fields _taskDetails [SerializeField] private TextMeshProUGUI _taskDetails Field Value TextMeshProUGUI _taskName [SerializeField] private TextMeshProUGUI _taskName Field Value TextMeshProUGUI Methods Setup(PlayerTask) public void Setup(PlayerTask item) Parameters item PlayerTask"
  },
  "api/Global.UI_TaskNotification.html": {
    "href": "api/Global.UI_TaskNotification.html",
    "title": "Class UI_TaskNotification | Lofi City Documentation",
    "keywords": "Class UI_TaskNotification Namespace Global Assembly Assembly-CSharp.dll public class UI_TaskNotification : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_TaskNotification Fields _notification [SerializeField] private GameObject _notification Field Value GameObject _taskList [SerializeField] private TaskList _taskList Field Value TaskList Methods Awake() private void Awake() ClearNotificationIcon() public void ClearNotificationIcon() ShowNotificationIcon() private void ShowNotificationIcon()"
  },
  "api/Global.UI_VendorSystem.html": {
    "href": "api/Global.UI_VendorSystem.html",
    "title": "Class UI_VendorSystem | Lofi City Documentation",
    "keywords": "Class UI_VendorSystem Namespace Global Assembly Assembly-CSharp.dll Used by the other UI components to access the cart. public class UI_VendorSystem : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour UI_VendorSystem Fields _cart private CartData _cart Field Value CartData _cartUI [SerializeField] private Transform _cartUI Field Value Transform Properties Cart public CartData Cart { get; } Property Value CartData Methods ClearCart() public void ClearCart() NextCustomer() public void NextCustomer() Open(bool) public void Open(bool toOpen) Parameters toOpen bool Setup(CartData) public void Setup(CartData cart) Parameters cart CartData"
  },
  "api/Global.WireBase.html": {
    "href": "api/Global.WireBase.html",
    "title": "Class WireBase | Lofi City Documentation",
    "keywords": "Class WireBase Namespace Global Assembly Assembly-CSharp.dll Connects to adjacent wires and to machines directly above. public abstract class WireBase : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour WireBase Derived ItemTransportWire Fields _adjacentWires protected Dictionary<Vector2Int, WireBase> _adjacentWires Field Value Dictionary<Vector2Int, WireBase> _allLayers protected AllSceneLayers _allLayers Field Value AllSceneLayers _connectionAdded protected Action<WireBase> _connectionAdded Field Value Action<WireBase> _connectionRemoved protected Action<WireBase> _connectionRemoved Field Value Action<WireBase> _currentLayer protected SceneLayer _currentLayer Field Value SceneLayer _objectLayerType [SerializeField] protected Enum_ObjectLayerType _objectLayerType Field Value Enum_ObjectLayerType _objectOnTop protected GameObject _objectOnTop Field Value GameObject _wireDestroyed protected Action<WireBase> _wireDestroyed Field Value Action<WireBase> _wirePositionsSubscribed protected List<Vector3Int> _wirePositionsSubscribed Field Value List<Vector3Int> Properties AdjacentWires public Dictionary<Vector2Int, WireBase> AdjacentWires { get; } Property Value Dictionary<Vector2Int, WireBase> Methods Awake() private void Awake() CheckAdjacentWire(Vector2Int, Action<GridObject>, SceneLayer) private void CheckAdjacentWire(Vector2Int position, Action<GridObject> linkedEvent, SceneLayer currentLayer) Parameters position Vector2Int linkedEvent Action<GridObject> currentLayer SceneLayer ConnectToObjectOnTop(Vector2Int) protected void ConnectToObjectOnTop(Vector2Int gridPosition) Parameters gridPosition Vector2Int ConnectToWires(Vector2Int, SceneLayer) protected void ConnectToWires(Vector2Int gridPosition, SceneLayer currentLayer) Parameters gridPosition Vector2Int currentLayer SceneLayer OnObjectPlacedAbove(GridObject) protected abstract void OnObjectPlacedAbove(GridObject objectPlaced) Parameters objectPlaced GridObject OnWireDestroyed() public void OnWireDestroyed() OnWirePlacedOnSide(GridObject) protected abstract void OnWirePlacedOnSide(GridObject objectPlaced) Parameters objectPlaced GridObject SubscribeToConnectionAdded(Action<WireBase>) public void SubscribeToConnectionAdded(Action<WireBase> action) Parameters action Action<WireBase> SubscribeToConnectionRemoved(Action<WireBase>) public void SubscribeToConnectionRemoved(Action<WireBase> action) Parameters action Action<WireBase> SubscribeToWireDestroyed(Action<WireBase>) public void SubscribeToWireDestroyed(Action<WireBase> action) Parameters action Action<WireBase> UnsubscribeFromConnectionAdded(Action<WireBase>) public void UnsubscribeFromConnectionAdded(Action<WireBase> action) Parameters action Action<WireBase> UnsubscribeFromConnectionRemoved(Action<WireBase>) public void UnsubscribeFromConnectionRemoved(Action<WireBase> action) Parameters action Action<WireBase> UnsubscribeFromWireDestroyed(Action<WireBase>) public void UnsubscribeFromWireDestroyed(Action<WireBase> action) Parameters action Action<WireBase>"
  },
  "api/Global.WireToMachineNetwork.html": {
    "href": "api/Global.WireToMachineNetwork.html",
    "title": "Class WireToMachineNetwork | Lofi City Documentation",
    "keywords": "Class WireToMachineNetwork Namespace Global Assembly Assembly-CSharp.dll Links any MachineObjects with connected wires to the virtual MachineNetworkController. public class WireToMachineNetwork : MonoBehaviour Inheritance object Object Component Behaviour MonoBehaviour WireToMachineNetwork Fields _attachedWires private HashSet<ItemTransportWire> _attachedWires Field Value HashSet<ItemTransportWire> _networkController private MachineNetworkController _networkController Field Value MachineNetworkController _startingWire [SerializeField] private ItemTransportWire _startingWire Field Value ItemTransportWire Methods AddWire(WireBase) private void AddWire(WireBase wireBase) Parameters wireBase WireBase CheckIfConnected(WireBase, List<WireBase>) private bool CheckIfConnected(WireBase wire, List<WireBase> previous) Parameters wire WireBase previous List<WireBase> Returns bool RegisterMachine(Scriptable_Machine, Vector3Int, MachineObjectBase) private void RegisterMachine(Scriptable_Machine machineType, Vector3Int position, MachineObjectBase connection) Parameters machineType Scriptable_Machine position Vector3Int connection MachineObjectBase RemoveMachine(MachineObjectBase) private void RemoveMachine(MachineObjectBase machineObject) Parameters machineObject MachineObjectBase RemoveWire(WireBase) private void RemoveWire(WireBase wire) Parameters wire WireBase Start() private void Start()"
  },
  "api/Global.Work_Attraction.html": {
    "href": "api/Global.Work_Attraction.html",
    "title": "Class Work_Attraction | Lofi City Documentation",
    "keywords": "Class Work_Attraction Namespace Global Assembly Assembly-CSharp.dll public class Work_Attraction Inheritance object Work_Attraction Methods Awake() private void Awake() GetAttractionScore() public int GetAttractionScore() Returns int"
  },
  "api/Global.WorldPosition.html": {
    "href": "api/Global.WorldPosition.html",
    "title": "Class WorldPosition | Lofi City Documentation",
    "keywords": "Class WorldPosition Namespace Global Assembly Assembly-CSharp.dll [Serializable] public class WorldPosition Inheritance object WorldPosition Constructors WorldPosition(int, int, int, Enum_ObjectLayerType) public WorldPosition(int x, int y, int z, Enum_ObjectLayerType layer) Parameters x int y int z int layer Enum_ObjectLayerType Fields _layer [SerializeField] private Enum_ObjectLayerType _layer Field Value Enum_ObjectLayerType _x [SerializeField] private int _x Field Value int _y [SerializeField] private int _y Field Value int _z [SerializeField] private int _z Field Value int Properties Layer public Enum_ObjectLayerType Layer { get; } Property Value Enum_ObjectLayerType X public int X { get; } Property Value int Y public int Y { get; } Property Value int Z public int Z { get; } Property Value int"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace | Lofi City Documentation",
    "keywords": "Namespace Classes ActionCondition_AnyCondition ActionCondition_ItemInInventory Checks if a list of items is available in an inventory. ActionCondition_ItemsSold ActionCondition_MachineAdded ActionCondition_MultipleConditions ActionRegistrationSourceGenerator ActiveCraftingRequest Stores the data for a crafting request being processed by a machine AddSceneObjectsToObjectLayer Gets any GameObjects placed in a scene and adds them to the object layer. AddressableAsset_Item AllSceneLayers List of all scene layers in child objects. Retreives the needed Scene Layer or grid object based on the Z Position. AllSchedules<T> AttractCustomers AttractionObject Game Objects that act as points of interest for NPCs to go to and stay at. Registers points so that only one NPC can be at each point. AttractionsInScene Stores all attractions and scene exits in a particular scene. AudioManager CartData Used to connect the UI to the cart object. Allows for opening and closing the shop. CartInventory Store the items being sold in a cart using a slot based system. Also stores the price of each item. CategorySpecificAttributes ChangeSortingLayer ClassDeclarationSyntaxReceiver CorruptedPlant A plant that can clean an area around it, if it is not polluted. CraftingRequestController Manages pending and active crafting requests, and assigning machines to them. CurrentSaveSlot Stores global information about the current save slot CurrentSceneData A Singleton storing scene specific data. Customer Stores the data about an NPC that is interacting with a Cart. CustomerInQueue Represents a customer waiting in the queue. CustomerQueue Stores a queue of customers waiting to be served. Removes customers that have waited for too long. DateTimeCondition DateTimeManager Stores and updates the current date and time. The global date ignores seasons and ranges from 0 to 111. DaySpecificAttractions DayTransition DestructableCart DestructableObject Used on objects that the player can destroy. DisplayLog DisplayWires EcosystemLayer Populate an ecosystem layer based on an existing field layer. Start by setting all tiles as polluted. FarmPlot FieldWateringSystem FileLogger FivePointRange FruitTree GenericAction Used to store and invoke Unity Actions without knowing their type. GenericAction<T> Stores a UnityAction and its corresponding data. GlobalCartSetup GlobalManagers A Singleton class for accessing key manager components. GlobalSceneData Gives Manager classes high level data about all scenes. This includes finding all attractions and the best path between two scenes. GlobalSceneData.SceneNode GridBasedObjectLayer A 2D matrix of a given width and height is used to store GridObjects. This system works best for fixed areas where most cells have an object in them. GridObject This stores data for any object being stored in an ObjectLayer GridPointer_Ranged This pointer is intended to work with devices that can easily point to specific tiles, like a mouse The player points to a tile, and if it is within a certain range of the player character, the grid position is returned HUDController Retrieve and toggle different elements from the Heads Up Display HUDToggleButton Connected to a button to toggle HUD elements on or off HagglingSystem Allows for the player to haggle with a customer about the price of an item. The player has a number of guesses before the customer moves on to the next item. IdleSpotsInScene InGameLog InWorldShop InputActions InspectableDictionary<T, U> This can be used to create dictionaries in the inspector. InspectablePair<T, U> This is used in the InspectableDictionary as a Key-Value Pair InteractableObject_Bed InteractableObject_Dialogue InteractableObject_Hub This allows the player to interact with the Field HUB. They can add items to the storage or view the UI. InteractableObject_ItemSource Gives the player an endless source of items. InteractableObject_Plant ItemDisplayTable Specify what items can be displayed in a particular slot of the cart, and what quantity. ItemInteraction_CleanTool Changes a polluted ecosystem layer tile to a clean tile. ItemInteraction_DestroyTool ItemInteraction_LimitedPlacement ItemInteraction_Placable Place an item of any size at a given position in the scene. Creates a new GameObject and adds it to the appropriate Object Layer ItemInteraction_WaterTool ItemSellingSystem Determine the items that a customer would like to purchase in order of preference. For each item, sell the quantity that they are willing to pay for. ItemTransportWire The physical wire connecting machines to a network ItemUseManager Calls the UseItem method on the IItemInteraction of the active item in the Player State. JSONBasedSavingSystem Stores and retrieves the given data in the form of json files. LimitlessInventory This version can store any number and quantity of items. A nested dictionary is used based on categories to quickly get all items in a particular category. ListBasedObjectLayer This system works best for areas where most cells will not have objects. A dictionary is used where the position is the key. LoadWorldScene Load a new scene and set the data. MachineNetworkController Handles the different types of connected machine networks. MachineNetwork_Craft Store and retreive networked machines. Different dictionaries are used for fast access using different criteria. MachineObjectBase MachineObjects are the physical counterpart of networked machines This is used for adding new machines, interaction with the player and animations MachineObject_Craft Machines that can craft outputs from requirements. MergedPosition MergedPosition<U> MovementManager The movement system changes between different states (IMovementType) This script responds to player input and switches between different modes MovementType_Walk This is the default movement system. The player can freely move arount a layer and climb 1 block high steps NPCManager Load and store all NPCs in the Manager scene. NPCVisuals_Directional NPC_ActivityBase Determine what the NPC is currently doing. Can select the most appropriate attraction. NPC_Animations NPC_GlobalData Points to all the components of a particular NPC in the manager scene. NPC_MovementBase Determines the exact position where an NPC should move to based on their current activity. Handles NPCs and the Player leaving the scene. NPC_ScheduleSlot<T> Denotes what activity an NPC should be doing at a certain time. NamedNPC_Activity Determine the activity and attraction that an NPC is currently at or moving to. NamedNPC_Movement Move to an attraction or a scene exit. NamedNPC_Personality NamedNPC_SceneTracker Simulates NPC Movement between unloaded scenes and stores their current path. NamedNPC_Spawner Instantiates the NPCs when either they or the player enters a scene. NetworkedMachineBase A virtual representation of a Machine Object connected to a network NetworkedMachine_Craft Crafting machines are busy while they are crafting an item. NullLogger ObjectLayerBase Object layers store grid objects at the same Z position for more efficient interaction between them. They allow for adding and retrieving objects at a certain position. ObjectsOnFirstLoad OffsetAnimatedWater PathBasedMovement Move a game object to a new position based on Pathfinding. Allows for continuing along an axisting path. PathNode Used in pathfinding to represent the distances of a particular cell. Pathfinding Find the shortest path between two positions in the current scene. Based on the A* Algorithm. PauseGame PendingCraftingRequest Stores the data for a crafting request that is still waiting to be assigned a machine PhysicalObject Added to GameObjects that the player can collide with and climb on top of. PhysicalObjectLayerToPath Changes the path tiles under physical objects into steps of the needed height. PlantObject PlayMusicInScene PlaySoundEffect PlaySoundWithPlayerAction PlayerMoney PlayerSortingLayer PlayerStatus Stores various different attributes related to the player for easy access. PlayerTask Player_Animation PointOfInterest_CustomerQueue PointOfInterest_Delay PointOfInterest_Idle Empty points in a scene where background NPCs can stand. PointOfInterest_Obstructed The NPC is directed to a particular point and is then transported to another. PointOfInterest_SceneTransition The point where NPCs leave a scene. PopulateFieldTilemap Create the visual tilemap for the field floor based on the field and ecosystem tiles. PriceListUI Shows the price of each item in the cart. QuantityDemandedCalculator Gives a score of how well an item is liked based on its attributes. Determine how much of an item will be purchased at a particular price based on that score. RandomNPC_Activity Random NPCs visits various attractions/idle points before leaving the scene. RandomNPC_Movement Move to attraction or random idle spot based on activity. RandomNPC_Personality RandomNPC_ScenePopulation Determine how many background NPCs to create at any point in time. RandomNPC_Spawner Create a number of random NPCs to populate a scene. SavableMachine SavableObjectBase Retrieve the Addressable Asset for the GameObject prefab. SavablePositionList SavablePositionList<T> SaveCraftingRequests [TODO] Implement Request Saving SaveLimitlessInventory Save the items in an inventory, or populate it if not previously saved. SaveMachineNetwork Save and load all the machines connected to a network controller. SaveObjectLayerData SaveObjectLayerGameObjects Save and load all objects stored in the object layers of a given type. SaveSlotManager Create and retreive different save slots. SavingManager Saves and loads all provided SavableElements simultaneously. SceneChange Trigger a change in the current world scene. SceneLayer Scene layers contain and manage all the object layers at a specific Z position. Specific layers can be retrieved based on their type. SceneSaving Saves the provided Savable Elements in the currently open scene. ScheduleEvent Invokes an Action at a specific date and time. Scriptable_ActivitySchedule Scriptable_Attraction A point of interest in the world for NPCs to move to and stay at. Scriptable_CartData Scriptable_ColourPalette Scriptable_ConnectMachineTask Scriptable_CraftingMachine Scriptable_CraftingRecipe Scriptable_FieldTile Scriptable_InWorldShop Scriptable_Interest Scriptable_Item Scriptable_ItemCollectedTask Scriptable_LimitedPlacableItem Scriptable_Machine Scriptable_Outfit Scriptable_PathTile Scriptable_Personality Determine what an NPC is interested in and what they want. Scriptable_PersonalityAttractions Scriptable_PlacableItem Scriptable_Plant Scriptable_RandomNPCSchedule Scriptable_SceneData Stores a high level view of a scene that can be used in the Manager scene. Scriptable_Schedule<T> A list of NPC Activities with an associated time slot. Scriptable_SellItemsTask Scriptable_SellableItem Scriptable_Task Scriptable_Tile Scriptable_TileGroup Scriptable_VisualFieldTile SetCamera SetObjectSortingLayer SetupNPCVisuals SimpleDayNightLighting SlotBasedInventory This version has a limited number of slots with a maximum quantity in each. StartGame Load the Manager scene and set the save slot being used. TaskList A list of tasks that the player should complete. TaskQueue TemporaryExit TemporarySceneLoading TestNPCVisuals TestingCartSystem TestingCraftingRequests TestingInteraction TestingInventory TestingPathfinding TestingPlayerStatus TestingTask TilemapToObjectLayer Populates a Grid Based Object Layer with Scriptable_Tiles based on a given TileMap. TimeSlot Stores a specific time and allows for easy comparison. ToggleObjectAtTime TreeVisuals UI_ButtonWithText Generic component for setting the text of a button. UI_CartSlots Connects to all the item display slots in the cart. UI_ChangeTabColour UI_CraftSpecificItem The User interface to send a crafting request to the Machine Network UI_CraftingRequestMonitor Display the current active and pending requests for a CraftingRequestController UI_CraftingRequestSlot Show the status of a single crafting request UI_CreateNewSaveFile UI to create a new save slot. UI_Customer UI_CustomerInQueue Shows a customer waiting in the queue and their remaining time. UI_DayTransition UI_DisplayLimitlessInventory Displays the contents of an inventory, showing the numer of each item. UI_DisplayListItem UI_DisplayList<T> UI_DisplayMoney UI_DisplayTime HUD element that displays the current date and time. UI_Dragable Reusable system for dragable UI elements. UI_GridPointer UI_Haggle A popup UI that allows the player to input a price during haggling. UI_HelpMenu UI_Hotbar Allows for easy access to items stored in the player inventory to set the active item. UI_HotbarSlot Slots that allow for dropping items into the hotbar. UI_HubItemCrafting Shows the items that can be crafted given the connected machines. UI_InWorldShop UI_InWorldShopItem UI_InventoryDropTransfer UI_ItemDisplay Display any number of Scriptable Items grouped into categories. A seperate item slot is created for each new item. UI_ItemDisplaySlot Lets the player set the items being sold in a particular slot. UI_ItemSlotData Visualy show an item in the UI. Allow for selecting items. UI_LoadPreviousSave Show all previously created save slots. UI_PriceListItem Shows the price of a particular item in the cart. The player can choose to haggle the price instead. UI_Queue Shows all the customers in a queue. Allows the player to service the next customer. UI_RecipeItem UI_SaveSlot Displays the information of a given save slot. UI_ScreenTransition UI_ShoppingList Displays the list of items that a customer has purchased. UI_ShoppingListItem Displays an item that the customer has purchased. UI_TabController Display and switch between different UI tabs. UI_TaskList UI_TaskListItem UI_TaskNotification UI_VendorSystem Used by the other UI components to access the cart. WireBase Connects to adjacent wires and to machines directly above. WireToMachineNetwork Links any MachineObjects with connected wires to the virtual MachineNetworkController. Work_Attraction WorldPosition Structs HUDComponent An element of the HUD that can be toggled on and off. InputActions.DebugActions InputActions.InteractionActions InputActions.MovementActions ItemWithQuantity SpecificDateAndTime Interfaces IActionCondition Check if certain conditions are met and alert subscribers. IGridPointer Grid pointers get the position that the player is trying to interact with. Different pointers can be implemented to use different logic. IInteractableObject Specify how the player can interact with a GameObject. IInventory Interface for adding and removing items in an inventory. IItemInteraction Specifies how a player can use an item. IItemWithSetup<T> ILogger IMachineNetwork Store and retrieve connected machines of a specifc category Can be used independent of the current scene. IMovementType Specifies how the player moves in a particular state. INPC_Personality IPointOfInterest A single position that an NPC travels to. ISavableElement Added to components that need to be saved and loaded. ISavingSystem A system that saves and loads the requested data. InputActions.IDebugActions InputActions.IInteractionActions InputActions.IMovementActions Enums Enum_ActivityType Enum_DayOfTheWeek Enum_Directions Enum_EcosystemType Enum_FieldTileType Enum_HUDComponent Enum_Interests Enum_ItemAttributes Enum_ItemCategory Enum_ItemDisplayCondition Enum_ItemInteraction Enum_MachineCategory Enum_NPCActivity Enum_NPCAnimations Enum_NPCVisualElements Enum_ObjectLayerType Enum_PlaceAttributes Enum_PlayerAnimation Enum_SceneName Enum_Season Enum_SortingLayers"
  },
  "index.html": {
    "href": "index.html",
    "title": "Lofi City Documentation | Lofi City Documentation",
    "keywords": "Lofi City Documentation The Manual gives a high level view of the project. The Scripting API is auto-generated and gives a detailed view of all scripts in the project."
  },
  "manual/CodingStandard.html": {
    "href": "manual/CodingStandard.html",
    "title": "Coding Standard | Lofi City Documentation",
    "keywords": "Coding Standard The following should be considered when writing scripts. For performance, avoid overusing the Update method. Use System.Actions, UnityEvents and Coroutines instead. Use the GlobalManager and CurrentSceneData singletons instead of FindGameObjectWithTag. Follow the C# coding conventions found here. Add XML Summary at the top of each script. Scriptable Objects should start with Scriptable_. Abstract classes should end with Base. Enums should start with Enum_."
  },
  "manual/Gameplay_Systems/ItemInteractionSystem.html": {
    "href": "manual/Gameplay_Systems/ItemInteractionSystem.html",
    "title": "Item Interaction System | Lofi City Documentation",
    "keywords": "Item Interaction System A Grid Pointer gets the position a player wants to interact with. They can then use their active item (Main Input) or interact with the object there (Secondary). Using Active Item This can be selected from the hotbar and is stored in Player Status. Each Scriptable Item has a corresponding Item Interaction (Enum) type. The Item Use Manager will then call the appropriate Item Interaction script. Interacting with GameObjects If the object has an Interactable Object script, an action takes place. The action can change depending on the players active item."
  },
  "manual/Gameplay_Systems/MachineSystem.html": {
    "href": "manual/Gameplay_Systems/MachineSystem.html",
    "title": "Machine System | Lofi City Documentation",
    "keywords": "Machine System Manages the crafting and automation in the game. The following system is used so that the automation does not stop when a player unloads a scene. Machine Objects are placed in an appropriate scene and connected to a Hub using Wires. The Machine Controller stores a Network version of all connected machines persistantly. A Crafting Request Controller can use the Networked Machines and an Inventory to fulfil crafting requests."
  },
  "manual/Gameplay_Systems/SellingSystem.html": {
    "href": "manual/Gameplay_Systems/SellingSystem.html",
    "title": "Selling System | Lofi City Documentation",
    "keywords": "Selling System Item Scoring System Each Sellable Item has certain Item Attributes and a base price. (In Development) The Global Demand is set at the start of the day and affects what Attributes npcs want. Each Interest and Personality has certain attributes for likes and dislikes. Quantity Demanded Calculator gets the number of items an NPC wants to buy at a given price. Cart System The player can place a Cart and set up the Item Display Tables and Price List. The cart can be set as an Attraction to bring NPCs to it. NPCs will wait at the Customer Queue until they are serviced by the Item Selling System. Each Customer will consider the items in the cart and purchase items they want. The player can choose to Haggle on the price of an item."
  },
  "manual/Gameplay_Systems/TaskSystem.html": {
    "href": "manual/Gameplay_Systems/TaskSystem.html",
    "title": "Task System | Lofi City Documentation",
    "keywords": "Task System Player tasks use Action Conditions to monitor a players action. A Scriptable Task is used to specify the name and description, with inherited classes setting the action condition. The Task Queue is used to assign the next tasks, while the Task List stores the current tasks."
  },
  "manual/Setup.html": {
    "href": "manual/Setup.html",
    "title": "Setup | Lofi City Documentation",
    "keywords": "Setup Setting up the Unity Project Get project files from Github. Open the Manager Scene. (Not needed for the StartScreen Scene) Additively open the scene you want to work on. Creating Documentation Add any .md pages to the manual folder. Add them to the toc.yml file. Run the CreateDocs.sh script under the Documentation folder. Go to http://localhost:8080/"
  },
  "manual/World_Systems/DateTimeSystem.html": {
    "href": "manual/World_Systems/DateTimeSystem.html",
    "title": "Date Time System | Lofi City Documentation",
    "keywords": "Date Time System The Date Time Manager stores the current date and time, which is updated using a coroutine. Time Slots and Specific Date And Time classes are used for easier time comparison. The Schedule Event script can call a given Action at any given time. The Day Transition triggers the Day Time Manager to increment the time up to the start time."
  },
  "manual/World_Systems/NPCSystem.html": {
    "href": "manual/World_Systems/NPCSystem.html",
    "title": "NPC Activity/Movement System | Lofi City Documentation",
    "keywords": "NPC Activity/Movement System General System An NPC Spawner creates them when needed. NPC Activity component decides what attraction a character is currently aiming for. NPC Movement gets the next Point of Interest to move towards and triggers the Path Based movement. Named NPCs The Global Data of each NPC is loaded in the manager scene. They have a schedule of activities. When each activity starts, they find the best attraction from all scenes and travel to it. If they are loaded into a scene, a corresponding Character object is created with more accurate pathfinding. Random NPCs Background NPCs generated when a player enters a scene. Number and type depends on the current NPC Population Schedule. Their Personality and Interest determine what attractions/items they like. Move between a few different Points of Interest (Idle or Attractions) before leaving the scene. Visuals Four character rigs are used for the different directions Setup NPC Visuals connects with each NPC Visuals Directions to set the skin colour and clothes."
  },
  "manual/World_Systems/SaveSystem.html": {
    "href": "manual/World_Systems/SaveSystem.html",
    "title": "Save System | Lofi City Documentation",
    "keywords": "Save System A Saving Manager is used to link multiple savable elements to the saving system. Savable Element scripts can be attached to gameobjects in order to save and load any data. These need to be added to the Saving Manager or a corresponding Scene Saving list. Data is stored on the local device as JSON Files. Save slots can be given custom names. Each save slot points to a different directory."
  },
  "manual/World_Systems/SceneLayerSystem.html": {
    "href": "manual/World_Systems/SceneLayerSystem.html",
    "title": "Scene Layer System | Lofi City Documentation",
    "keywords": "Scene Layer System Each world scene will have the following structure. All Scene Layers Scene Layer Object Layer Object Layer Scene Layer Object Layer Object Layer Different scene layers are used to denote different Z Positions, giving the scene depth. Object layers store items at a particular X and Y position. Different object layers are used to store different items."
  },
  "manual/World_Systems/SceneLayout.html": {
    "href": "manual/World_Systems/SceneLayout.html",
    "title": "Scene Layout | Lofi City Documentation",
    "keywords": "Scene Layout At any point in time, two scenes are open: The manager scene and a World Scene. Manager Scene This scene stores all GameObjects and Scripts that need to be kept persitant throughout the game, independent of what the current scene is. This includes: The Player The Camera The User Interface Any Persistant Manager Scripts A GlobalManager Singleton is used so that the current world scene can access certain scripts from the Manager Scene. World Scene These scenes store anything that is specific to the currently loaded area. Most of the elements of these scenes fall under Scene Layers and Object Layers. This allows for having a 3D grid and movement system in 2D. A CurrentSceneData Singleton is used for easy access of key elements."
  },
  "manual/World_Systems/SortingLayers.html": {
    "href": "manual/World_Systems/SortingLayers.html",
    "title": "Sorting Layers | Lofi City Documentation",
    "keywords": "Sorting Layers When assigning sorting layers and order to renderers, the following should be followed. Layers A different sorting layer should be assigned to each Scene Layer. Level 1-5 are available for this. Sorting order 1-4 are used for anything on the floor, that the player can neer be behind. 5 is used for any physical object in the scene that the player can go behind and in front of. The sorting order is also altered based on the Y position of the pivot."
  }
}